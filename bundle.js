/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 36);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ./~/ng-metadata/src/facade/lang.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\nvar globalScope;\nif (typeof window === 'undefined') {\n    globalScope = global;\n}\nelse {\n    globalScope = window;\n}\n// Need to declare a new variable for global here since TypeScript\n// exports the original value of the symbol.\nvar _global = globalScope;\nexports.global = _global;\n// ===============\n// implementations\n// ===============\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/;\nvar reIsPlainProp = /^\\w*$/;\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\nvar argsTag = '[object Arguments]';\nvar _devMode = true;\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n */\nfunction enableProdMode() {\n    _devMode = false;\n}\nexports.enableProdMode = enableProdMode;\nfunction assertionsEnabled() {\n    return _devMode;\n}\nexports.assertionsEnabled = assertionsEnabled;\nfunction isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nexports.isPresent = isPresent;\nfunction isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nexports.isBlank = isBlank;\nfunction isString(obj) {\n    return typeof obj === \"string\";\n}\nexports.isString = isString;\nfunction isFunction(obj) {\n    return typeof obj === \"function\";\n}\nexports.isFunction = isFunction;\nfunction isBoolean(obj) {\n    return typeof obj === \"boolean\";\n}\nexports.isBoolean = isBoolean;\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nexports.isArray = isArray;\nfunction isNumber(obj) {\n    return typeof obj === 'number';\n}\nexports.isNumber = isNumber;\nfunction isDate(obj) {\n    return obj instanceof Date && !isNaN(obj.valueOf());\n}\nexports.isDate = isDate;\nfunction isType(obj) {\n    return isFunction(obj);\n}\nexports.isType = isType;\nfunction isStringMap(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\nexports.isStringMap = isStringMap;\nfunction isPromise(obj) {\n    return obj instanceof _global.Promise;\n}\nexports.isPromise = isPromise;\nfunction isPromiseLike(obj) {\n    return Boolean(isPresent(obj) && obj.then);\n}\nexports.isPromiseLike = isPromiseLike;\nfunction isObservable(obj) {\n    return Boolean(isPresent(obj) && obj.subscribe);\n}\nexports.isObservable = isObservable;\nfunction isPromiseOrObservable(obj) {\n    return isPromiseLike(obj) || isObservable(obj);\n}\nexports.isPromiseOrObservable = isPromiseOrObservable;\nfunction isScope(obj) {\n    return isPresent(obj) && obj.$digest && obj.$on;\n}\nexports.isScope = isScope;\nfunction isSubscription(obj) {\n    return isPresent(obj) && obj.unsubscribe;\n}\nexports.isSubscription = isSubscription;\nfunction isJsObject(o) {\n    return o !== null && (typeof o === \"function\" || typeof o === \"object\");\n}\nexports.isJsObject = isJsObject;\nfunction isArguments(value) {\n    // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n    return ('length' in value) && Object.prototype.hasOwnProperty.call(value, 'callee') &&\n        (!Object.prototype.propertyIsEnumerable.call(value, 'callee') || Object.prototype.toString.call(value) == argsTag);\n}\nexports.isArguments = isArguments;\nfunction noop() { }\nexports.noop = noop;\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token === undefined || token === null) {\n        return '' + token;\n    }\n    if (token.name) {\n        return token.name;\n    }\n    var res = token.toString();\n    var newLineIndex = res.indexOf(\"\\n\");\n    return (newLineIndex === -1)\n        ? res\n        : res.substring(0, newLineIndex).replace('\\r', '');\n}\nexports.stringify = stringify;\n/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n    return value == null ? '' : (value + '');\n}\nexports.baseToString = baseToString;\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n    if (isArray(value)) {\n        return value;\n    }\n    //return value.split('.');\n    var result = [];\n    baseToString(value).replace(rePropName, function (match, number, quote, string) {\n        var resultValue = quote\n            ? string.replace(reEscapeChar, '$1')\n            : (number || match);\n        result.push(resultValue);\n        return resultValue;\n    });\n    return result;\n}\nexports.toPath = toPath;\nfunction assign(destination) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    var envAssign = _global.Object['assign'] || _global.angular.extend;\n    return envAssign.apply(void 0, [destination].concat(sources));\n}\nexports.assign = assign;\nvar ATTRS_BOUNDARIES = /\\[|\\]/g;\nvar COMPONENT_SELECTOR = /^\\[?[\\w|-]*\\]?$/;\nvar SKEWER_CASE = /-(\\w)/g;\nfunction resolveDirectiveNameFromSelector(selector) {\n    if (!selector.match(COMPONENT_SELECTOR)) {\n        throw new Error(\"Only selectors matching element names or base attributes are supported, got: \" + selector);\n    }\n    return selector\n        .trim()\n        .replace(ATTRS_BOUNDARIES, '')\n        .replace(SKEWER_CASE, function (all, letter) { return letter.toUpperCase(); });\n}\nexports.resolveDirectiveNameFromSelector = resolveDirectiveNameFromSelector;\nfunction getTypeName(type) {\n    var typeName = getFuncName(type);\n    return firstToLowerCase(typeName);\n}\nexports.getTypeName = getTypeName;\n/**\n *\n * @param {Function}  func\n * @returns {string}\n * @private\n */\nfunction getFuncName(func) {\n    var parsedFnStatement = /function\\s*([^\\s(]+)/.exec(stringify(func));\n    var _a = parsedFnStatement || [], _b = _a[1], name = _b === void 0 ? '' : _b;\n    // if Function.name doesn't exist exec will find match otherwise return name property\n    return name || stringify(func);\n}\nexports.getFuncName = getFuncName;\n/**\n * controller instance of directive is exposed on jqLiteElement.data()\n * under the name: `$` + Ctor + `Controller`\n * @param name\n * @returns {string}\n */\nfunction controllerKey(name) {\n    return '$' + name + 'Controller';\n}\nexports.controllerKey = controllerKey;\nfunction hasCtorInjectables(Type) {\n    return (Array.isArray(Type.$inject) && Type.$inject.length !== 0);\n}\nexports.hasCtorInjectables = hasCtorInjectables;\nfunction firstToLowerCase(value) {\n    return _firstTo(value, String.prototype.toLowerCase);\n}\nexports.firstToLowerCase = firstToLowerCase;\nfunction firstToUpperCase(value) {\n    return _firstTo(value, String.prototype.toUpperCase);\n}\nexports.firstToUpperCase = firstToUpperCase;\nfunction _firstTo(value, cb) {\n    return cb.call(value.charAt(0)) + value.substring(1);\n}\nfunction normalizeBlank(obj) {\n    return isBlank(obj) ? null : obj;\n}\nexports.normalizeBlank = normalizeBlank;\nfunction normalizeBool(obj) {\n    return isBlank(obj) ? false : obj;\n}\nexports.normalizeBool = normalizeBool;\nfunction print(obj) {\n    console.log(obj);\n}\nexports.print = print;\n/**\n * Angular 2 setValueOnPath\n * supports only `.` path separator\n * @param global\n * @param path\n * @param value\n */\nfunction setValueOnPath(global, path, value) {\n    var parts = path.split('.');\n    var obj = global;\n    while (parts.length > 1) {\n        var name = parts.shift();\n        if (obj.hasOwnProperty(name) && isPresent(obj[name])) {\n            obj = obj[name];\n        }\n        else {\n            obj = obj[name] = {};\n        }\n    }\n    if (obj === undefined || obj === null) {\n        obj = {};\n    }\n    obj[parts.shift()] = value;\n}\nexports.setValueOnPath = setValueOnPath;\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n    return isJsObject(value)\n        ? value\n        : Object(value);\n}\nexports.toObject = toObject;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n    if (length === void 0) { length = MAX_SAFE_INTEGER; }\n    value = (isNumber(value) || reIsUint.test(value))\n        ? +value\n        : -1;\n    return value > -1 && value % 1 == 0 && value < length;\n}\nexports.isIndex = isIndex;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n    if ((isString(value) && reIsPlainProp.test(value)) || isNumber(value)) {\n        return true;\n    }\n    if (isArray(value)) {\n        return false;\n    }\n    var result = !reIsDeepProp.test(value);\n    return result || (object != null && value in toObject(object));\n}\nexports.isKey = isKey;\n//# sourceMappingURL=lang.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 31)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 1 */
/* unknown exports provided */
/* all exports used */
/*!*************************************************!*\
  !*** ./~/ng-metadata/src/facade/collections.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ./lang */ 0);\nvar INFINITY = 1 / 0;\n/**\n * Wraps Javascript Objects\n */\nvar StringMapWrapper = (function () {\n    function StringMapWrapper() {\n    }\n    StringMapWrapper.create = function () {\n        // Note: We are not using Object.create(null) here due to\n        // performance!\n        // http://jsperf.com/ng2-object-create-null\n        return {};\n    };\n    StringMapWrapper.contains = function (map, key) {\n        return map.hasOwnProperty(key);\n    };\n    /**\n     * The base implementation of `getValueFromPath` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    StringMapWrapper.baseGet = function (object, path, pathKey) {\n        if (object == null) {\n            return;\n        }\n        object = lang_1.toObject(object);\n        if (pathKey !== undefined && pathKey in object) {\n            path = [pathKey];\n        }\n        var index = 0, length = path.length;\n        while (object != null && index < length) {\n            object = lang_1.toObject(object)[path[index++]];\n        }\n        return (index && index == length)\n            ? object\n            : undefined;\n    };\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    StringMapWrapper.getValueFromPath = function (object, path, defaultValue) {\n        var result = object == null\n            ? undefined\n            : StringMapWrapper.baseGet(object, lang_1.toPath(path), (path + ''));\n        return result === undefined\n            ? defaultValue\n            : result;\n    };\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it's created.\n     *\n     * @static\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    StringMapWrapper.setValueInPath = function (object, path, value) {\n        if (object == null) {\n            return object;\n        }\n        var pathKey = (path + '');\n        path = (object[pathKey] != null || lang_1.isKey(path, object))\n            ? [pathKey]\n            : lang_1.toPath(path);\n        var index = -1, length = path.length, lastIndex = length - 1, nested = object;\n        while (nested != null && ++index < length) {\n            var key = path[index];\n            if (lang_1.isJsObject(nested)) {\n                if (index == lastIndex) {\n                    nested[key] = value;\n                }\n                else if (nested[key] == null) {\n                    nested[key] = lang_1.isIndex(path[index + 1])\n                        ? []\n                        : {};\n                }\n            }\n            nested = nested[key];\n        }\n        return object;\n    };\n    StringMapWrapper.get = function (map, key) {\n        return map.hasOwnProperty(key)\n            ? map[key]\n            : undefined;\n    };\n    StringMapWrapper.set = function (map, key, value) { map[key] = value; };\n    StringMapWrapper.keys = function (map) { return Object.keys(map); };\n    StringMapWrapper.size = function (map) { return StringMapWrapper.keys(map).length; };\n    StringMapWrapper.isEmpty = function (map) {\n        for (var prop in map) {\n            return false;\n        }\n        return true;\n    };\n    StringMapWrapper.delete = function (map, key) { delete map[key]; };\n    StringMapWrapper.forEach = function (map, callback) {\n        for (var prop in map) {\n            if (map.hasOwnProperty(prop)) {\n                callback(map[prop], prop);\n            }\n        }\n    };\n    StringMapWrapper.values = function (map) {\n        return Object.keys(map).reduce(function (r, a) {\n            r.push(map[a]);\n            return r;\n        }, []);\n    };\n    StringMapWrapper.merge = function (m1, m2) {\n        var m = {};\n        for (var attr in m1) {\n            if (m1.hasOwnProperty(attr)) {\n                m[attr] = m1[attr];\n            }\n        }\n        for (var attr in m2) {\n            if (m2.hasOwnProperty(attr)) {\n                m[attr] = m2[attr];\n            }\n        }\n        return m;\n    };\n    StringMapWrapper.equals = function (m1, m2) {\n        var k1 = Object.keys(m1);\n        var k2 = Object.keys(m2);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (m1[key] !== m2[key]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    StringMapWrapper.assign = function (target) {\n        var sources = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            sources[_i - 1] = arguments[_i];\n        }\n        if (!lang_1.isPresent(target)) {\n            throw new TypeError('Object.assign cannot be called with null or undefined');\n        }\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        if (Object.assign) {\n            return (_a = Object).assign.apply(_a, [target].concat(sources));\n        }\n        var from;\n        var to = Object(target);\n        for (var s = 0; s < sources.length; s++) {\n            from = Object(sources[s]);\n            for (var key in from) {\n                if (hasOwnProperty.call(from, key)) {\n                    to[key] = from[key];\n                }\n            }\n        }\n        return to;\n        var _a;\n    };\n    return StringMapWrapper;\n}());\nexports.StringMapWrapper = StringMapWrapper;\nvar ListWrapper = (function () {\n    function ListWrapper() {\n    }\n    ListWrapper.create = function () { return []; };\n    ListWrapper.size = function (array) { return array.length; };\n    // JS has no way to express a statically fixed size list, but dart does so we\n    // keep both methods.\n    ListWrapper.createFixedSize = function (size) { return new Array(size); };\n    ListWrapper.createGrowableSize = function (size) { return new Array(size); };\n    ListWrapper.clone = function (array) { return array.slice(0); };\n    ListWrapper.forEachWithIndex = function (array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            fn(array[i], i);\n        }\n    };\n    ListWrapper.first = function (array) {\n        if (!array)\n            return null;\n        return array[0];\n    };\n    ListWrapper.last = function (array) {\n        if (!array || array.length == 0)\n            return null;\n        return array[array.length - 1];\n    };\n    ListWrapper.indexOf = function (array, value, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return array.indexOf(value, startIndex);\n    };\n    ListWrapper.contains = function (list, el) { return list.indexOf(el) !== -1; };\n    ListWrapper.reversed = function (array) {\n        var a = ListWrapper.clone(array);\n        return a.reverse();\n    };\n    ListWrapper.concat = function (a, b) { return a.concat(b); };\n    ListWrapper.insert = function (list, index, value) { list.splice(index, 0, value); };\n    ListWrapper.removeAt = function (list, index) {\n        var res = list[index];\n        list.splice(index, 1);\n        return res;\n    };\n    ListWrapper.removeAll = function (list, items) {\n        for (var i = 0; i < items.length; ++i) {\n            var index = list.indexOf(items[i]);\n            list.splice(index, 1);\n        }\n    };\n    ListWrapper.remove = function (list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n            return true;\n        }\n        return false;\n    };\n    ListWrapper.clear = function (list) { list.length = 0; };\n    ListWrapper.isEmpty = function (list) { return list.length == 0; };\n    ListWrapper.fill = function (list, value, start, end) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = null; }\n        if (!Array.prototype.fill) {\n            Array.prototype.fill = function (value) {\n                // Steps 1-2.\n                if (this == null) {\n                    throw new TypeError('this is null or not defined');\n                }\n                var O = Object(this);\n                // Steps 3-5.\n                var len = O.length >>> 0;\n                // Steps 6-7.\n                var start = arguments[1];\n                var relativeStart = start >> 0;\n                // Step 8.\n                var k = relativeStart < 0\n                    ? Math.max(len + relativeStart, 0)\n                    : Math.min(relativeStart, len);\n                // Steps 9-10.\n                var end = arguments[2];\n                var relativeEnd = end === undefined\n                    ? len\n                    : end >> 0;\n                // Step 11.\n                var final = relativeEnd < 0\n                    ? Math.max(len + relativeEnd, 0)\n                    : Math.min(relativeEnd, len);\n                // Step 12.\n                while (k < final) {\n                    O[k] = value;\n                    k++;\n                }\n                // Step 13.\n                return O;\n            };\n        }\n        list.fill(value, start, end === null\n            ? list.length\n            : end);\n    };\n    ListWrapper.equals = function (a, b) {\n        if (a.length != b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    };\n    ListWrapper.slice = function (l, from, to) {\n        if (from === void 0) { from = 0; }\n        if (to === void 0) { to = null; }\n        return l.slice(from, to === null\n            ? undefined\n            : to);\n    };\n    ListWrapper.splice = function (l, from, length) { return l.splice(from, length); };\n    ListWrapper.sort = function (l, compareFn) {\n        if (lang_1.isPresent(compareFn)) {\n            l.sort(compareFn);\n        }\n        else {\n            l.sort();\n        }\n    };\n    ListWrapper.toString = function (l) { return l.toString(); };\n    ListWrapper.toJSON = function (l) { return JSON.stringify(l); };\n    ListWrapper.maximum = function (list, predicate) {\n        if (list.length == 0) {\n            return null;\n        }\n        var solution = null;\n        var maxValue = -Infinity;\n        for (var index = 0; index < list.length; index++) {\n            var candidate = list[index];\n            if (lang_1.isBlank(candidate)) {\n                continue;\n            }\n            var candidateValue = predicate(candidate);\n            if (candidateValue > maxValue) {\n                solution = candidate;\n                maxValue = candidateValue;\n            }\n        }\n        return solution;\n    };\n    ListWrapper.find = function (arr, predicate, ctx) {\n        if (lang_1.isFunction(Array.prototype['find'])) {\n            return arr.find(predicate, ctx);\n        }\n        ctx = ctx || this;\n        var length = arr.length;\n        var i;\n        if (!lang_1.isFunction(predicate)) {\n            throw new TypeError(predicate + \" is not a function\");\n        }\n        for (i = 0; i < length; i++) {\n            if (predicate.call(ctx, arr[i], i, arr)) {\n                return arr[i];\n            }\n        }\n        return undefined;\n    };\n    ListWrapper.findIndex = function (arr, predicate, ctx) {\n        if (lang_1.isFunction(Array.prototype['findIndex'])) {\n            return arr.findIndex(predicate, ctx);\n        }\n        if (!lang_1.isFunction(predicate)) {\n            throw new TypeError('predicate must be a function');\n        }\n        var list = Object(arr);\n        var len = list.length;\n        if (len === 0) {\n            return -1;\n        }\n        for (var i = 0; i < len; i++) {\n            if (predicate.call(ctx, list[i], i, list)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    ListWrapper.isFlattenable = function (value) {\n        return lang_1.isArray(value) || lang_1.isArguments(value);\n    };\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    ListWrapper.arrayPush = function (array, values) {\n        var index = -1, length = values.length, offset = array.length;\n        while (++index < length) {\n            array[offset + index] = values[index];\n        }\n        return array;\n    };\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    ListWrapper.baseFlatten = function (array, depth, predicate, isStrict, result) {\n        if (predicate === void 0) { predicate = ListWrapper.isFlattenable; }\n        if (isStrict === void 0) { isStrict = false; }\n        if (result === void 0) { result = []; }\n        var index = -1;\n        var length = array.length;\n        while (++index < length) {\n            var value = array[index];\n            if (depth > 0 && predicate(value)) {\n                if (depth > 1) {\n                    // Recursively flatten arrays (susceptible to call stack limits).\n                    ListWrapper.baseFlatten(value, depth - 1, predicate, isStrict, result);\n                }\n                else {\n                    ListWrapper.arrayPush(result, value);\n                }\n            }\n            else if (!isStrict) {\n                result[result.length] = value;\n            }\n        }\n        return result;\n    };\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    ListWrapper.flatten = function (array) {\n        var length = array ? array.length : 0;\n        return length ? ListWrapper.baseFlatten(array, 1) : [];\n    };\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    ListWrapper.flattenDeep = function (array) {\n        var length = array\n            ? array.length\n            : 0;\n        return length\n            ? ListWrapper.baseFlatten(array, INFINITY)\n            : [];\n    };\n    return ListWrapper;\n}());\nexports.ListWrapper = ListWrapper;\n//# sourceMappingURL=collections.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/* unknown exports provided */
/* all exports used */
/*!***********************************************!*\
  !*** ./~/ng-metadata/src/core/di/metadata.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\n/**\n * `DependencyMetadata` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar DependencyMetadata = (function () {\n    function DependencyMetadata() {\n    }\n    Object.defineProperty(DependencyMetadata.prototype, \"token\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return DependencyMetadata;\n}());\nexports.DependencyMetadata = DependencyMetadata;\n/**\n * A parameter metadata that specifies a dependency.\n *\n * ### Example ([live demo](http://plnkr.co/edit/6uHYJK?p=preview))\n *\n * ```typescript\n * class Engine {}\n *\n * @Injectable()\n * class Car {\n *   engine;\n *   constructor(@Inject(\"MyEngine\") engine:Engine) {\n *     this.engine = engine;\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([\n *  provide(\"MyEngine\", {useClass: Engine}),\n *  Car\n * ]);\n *\n * expect(injector.get(Car).engine instanceof Engine).toBe(true);\n * ```\n *\n * When `@Inject()` is not present, {@link Injector} will use the type annotation of the parameter.\n *\n * ### Example\n *\n * ```typescript\n * class Engine {}\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine: Engine) {} //same as constructor(@Inject(Engine) engine:Engine)\n * }\n *\n * var injector = Injector.resolveAndCreate([Engine, Car]);\n * expect(injector.get(Car).engine instanceof Engine).toBe(true);\n * ```\n */\nvar InjectMetadata = (function () {\n    function InjectMetadata(token) {\n        this.token = token;\n    }\n    InjectMetadata.paramDecoratorForNonConstructor = function (annotationInstance, target, propertyKey, paramIndex) {\n        var annotateMethod = target[propertyKey];\n        annotateMethod.$inject = annotateMethod.$inject || [];\n        annotateMethod.$inject[paramIndex] = annotationInstance.token;\n    };\n    InjectMetadata.prototype.toString = function () { return \"@Inject(\" + lang_1.stringify(this.token) + \")\"; };\n    return InjectMetadata;\n}());\nexports.InjectMetadata = InjectMetadata;\n/**\n * A parameter metadata that marks a dependency as optional. {@link Injector} provides `null` if\n * the dependency is not found.\n *\n * ### Example ([live demo](http://plnkr.co/edit/AsryOm?p=preview))\n *\n * ```typescript\n * class Engine {}\n *\n * @Injectable()\n * class Car {\n *   engine;\n *   constructor(@Optional() engine:Engine) {\n *     this.engine = engine;\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([Car]);\n * expect(injector.get(Car).engine).toBeNull();\n * ```\n */\nvar OptionalMetadata = (function () {\n    function OptionalMetadata() {\n    }\n    OptionalMetadata.prototype.toString = function () { return \"@Optional()\"; };\n    return OptionalMetadata;\n}());\nexports.OptionalMetadata = OptionalMetadata;\n/**\n * A marker metadata that marks a class as available to {@link Injector} for creation.\n *\n * ```typescript\n * @Injectable()\n * class UsefulService {}\n *\n * @Injectable()\n * class NeedsService {\n *   constructor(public service:UsefulService) {}\n * }\n *\n * var injector = Injector.resolveAndCreate([NeedsService, UsefulService]);\n * expect(injector.get(NeedsService).service instanceof UsefulService).toBe(true);\n * ```\n * {@link Injector} will throw {@link NoAnnotationError} when trying to instantiate a class that\n * does not have `@Injectable` marker, as shown in the example below.\n *\n * ```typescript\n * class UsefulService {}\n *\n * class NeedsService {\n *   constructor(public service:UsefulService) {}\n * }\n *\n * var injector = Injector.resolveAndCreate([NeedsService, UsefulService]);\n * expect(() => injector.get(NeedsService)).toThrowError();\n * ```\n */\nvar InjectableMetadata = (function () {\n    function InjectableMetadata(_id) {\n        this._id = _id;\n    }\n    Object.defineProperty(InjectableMetadata.prototype, \"id\", {\n        get: function () { return this._id; },\n        set: function (newID) { this._id = newID; },\n        enumerable: true,\n        configurable: true\n    });\n    return InjectableMetadata;\n}());\nexports.InjectableMetadata = InjectableMetadata;\n/**\n * Specifies that an {@link Injector} should retrieve a dependency only from itself.\n *\n * ### Example ([live demo](http://plnkr.co/edit/NeagAg?p=preview))\n *\n * ```typescript\n * class Dependency {\n * }\n *\n * @Injectable()\n * class NeedsDependency {\n *   dependency;\n *   constructor(@Self() dependency:Dependency) {\n *     this.dependency = dependency;\n *   }\n * }\n *\n * var inj = Injector.resolveAndCreate([Dependency, NeedsDependency]);\n * var nd = inj.get(NeedsDependency);\n *\n * expect(nd.dependency instanceof Dependency).toBe(true);\n *\n * var inj = Injector.resolveAndCreate([Dependency]);\n * var child = inj.resolveAndCreateChild([NeedsDependency]);\n * expect(() => child.get(NeedsDependency)).toThrowError();\n * ```\n */\nvar SelfMetadata = (function () {\n    function SelfMetadata() {\n    }\n    SelfMetadata.prototype.toString = function () { return \"@Self()\"; };\n    return SelfMetadata;\n}());\nexports.SelfMetadata = SelfMetadata;\n/**\n * Specifies that the dependency resolution should start from the parent injector.\n *\n * ### Example ([live demo](http://plnkr.co/edit/Wchdzb?p=preview))\n *\n * ```typescript\n * class Dependency {\n * }\n *\n * @Injectable()\n * class NeedsDependency {\n *   dependency;\n *   constructor(@SkipSelf() dependency:Dependency) {\n *     this.dependency = dependency;\n *   }\n * }\n *\n * var parent = Injector.resolveAndCreate([Dependency]);\n * var child = parent.resolveAndCreateChild([NeedsDependency]);\n * expect(child.get(NeedsDependency).dependency instanceof Depedency).toBe(true);\n *\n * var inj = Injector.resolveAndCreate([Dependency, NeedsDependency]);\n * expect(() => inj.get(NeedsDependency)).toThrowError();\n * ```\n */\nvar SkipSelfMetadata = (function () {\n    function SkipSelfMetadata() {\n    }\n    SkipSelfMetadata.prototype.toString = function () { return \"@SkipSelf()\"; };\n    return SkipSelfMetadata;\n}());\nexports.SkipSelfMetadata = SkipSelfMetadata;\n/**\n * Specifies that an injector should retrieve a dependency from any injector until reaching the\n * closest host.\n *\n * In Angular, a component element is automatically declared as a host for all the injectors in\n * its view.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GX79pV?p=preview))\n *\n * In the following example `App` contains `ParentCmp`, which contains `ChildDirective`.\n * So `ParentCmp` is the host of `ChildDirective`.\n *\n * `ChildDirective` depends on two services: `HostService` and `OtherService`.\n * `HostService` is defined at `ParentCmp`, and `OtherService` is defined at `App`.\n *\n *```typescript\n * class OtherService {}\n * class HostService {}\n *\n * @Directive({\n *   selector: 'child-directive'\n * })\n * class ChildDirective {\n *   constructor(@Optional() @Host() os:OtherService, @Optional() @Host() hs:HostService){\n *     console.log(\"os is null\", os);\n *     console.log(\"hs is NOT null\", hs);\n *   }\n * }\n *\n * @Component({\n *   selector: 'parent-cmp',\n *   providers: [HostService],\n *   template: `\n *     Dir: <child-directive></child-directive>\n *   `,\n *   directives: [ChildDirective]\n * })\n * class ParentCmp {\n * }\n *\n * @Component({\n *   selector: 'app',\n *   providers: [OtherService],\n *   template: `\n *     Parent: <parent-cmp></parent-cmp>\n *   `,\n *   directives: [ParentCmp]\n * })\n * class App {\n * }\n *\n * bootstrap(App);\n *```\n */\nvar HostMetadata = (function () {\n    function HostMetadata() {\n    }\n    HostMetadata.prototype.toString = function () { return \"@Host()\"; };\n    return HostMetadata;\n}());\nexports.HostMetadata = HostMetadata;\n//# sourceMappingURL=metadata.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 3 */
/* unknown exports provided */
/* all exports used */
/*!******************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/metadata_directives.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar metadata_1 = __webpack_require__(/*! ../di/metadata */ 2);\n/**\n * Directives allow you to attach behavior to elements in the DOM.\n *\n * {@link DirectiveMetadata}s with an embedded view are called {@link ComponentMetadata}s.\n *\n * A directive consists of a single directive annotation and a controller class. When the\n * directive's `selector` matches\n * elements in the DOM, the following steps occur:\n *\n * 1. For each directive, the `ElementInjector` attempts to resolve the directive's constructor\n * arguments.\n * 2. Angular instantiates directives for each matched element using `ElementInjector` in a\n * depth-first order,\n *    as declared in the HTML.\n *\n * ## Understanding How Injection Works\n *\n * There are three stages of injection resolution.\n * - *Pre-existing Injectors*:\n *   - The terminal {@link Injector} cannot resolve dependencies. It either throws an error or, if\n * the dependency was\n *     specified as `@Optional`, returns `null`.\n *   - The platform injector resolves browser singleton resources, such as: cookies, title,\n * location, and others.\n * - *Component Injectors*: Each component instance has its own {@link Injector}, and they follow\n * the same parent-child hierarchy\n *     as the component instances in the DOM.\n * - *Element Injectors*: Each component instance has a Shadow DOM. Within the Shadow DOM each\n * element has an `ElementInjector`\n *     which follow the same parent-child hierarchy as the DOM elements themselves.\n *\n * When a template is instantiated, it also must instantiate the corresponding directives in a\n * depth-first order. The\n * current `ElementInjector` resolves the constructor dependencies for each directive.\n *\n * Angular then resolves dependencies as follows, according to the order in which they appear in the\n * {@link ViewMetadata}:\n *\n * 1. Dependencies on the current element\n * 2. Dependencies on element injectors and their parents until it encounters a Shadow DOM boundary\n * 3. Dependencies on component injectors and their parents until it encounters the root component\n * 4. Dependencies on pre-existing injectors\n *\n *\n * The `ElementInjector` can inject other directives, element-specific special objects, or it can\n * delegate to the parent\n * injector.\n *\n * To inject other directives, declare the constructor parameter as:\n * - `directive:DirectiveType`: a directive on the current element only\n * - `@Host() directive:DirectiveType`: any directive that matches the type between the current\n * element and the\n *    Shadow DOM root.\n * - `@Query(DirectiveType) query:QueryList<DirectiveType>`: A live collection of direct child\n * directives.\n * - `@QueryDescendants(DirectiveType) query:QueryList<DirectiveType>`: A live collection of any\n * child directives.\n *\n * To inject element-specific special objects, declare the constructor parameter as:\n * - `element: ElementRef` to obtain a reference to logical element in the view.\n * - `viewContainer: ViewContainerRef` to control child template instantiation, for\n * {@link DirectiveMetadata} directives only\n * - `bindingPropagation: BindingPropagation` to control change detection in a more granular way.\n *\n * ### Example\n *\n * The following example demonstrates how dependency injection resolves constructor arguments in\n * practice.\n *\n *\n * Assume this HTML template:\n *\n * ```\n * <div dependency=\"1\">\n *   <div dependency=\"2\">\n *     <div dependency=\"3\" my-directive>\n *       <div dependency=\"4\">\n *         <div dependency=\"5\"></div>\n *       </div>\n *       <div dependency=\"6\"></div>\n *     </div>\n *   </div>\n * </div>\n * ```\n *\n * With the following `dependency` decorator and `SomeService` injectable class.\n *\n * ```\n * @Injectable()\n * class SomeService {\n * }\n *\n * @Directive({\n *   selector: '[dependency]',\n *   inputs: [\n *     'id: dependency'\n *   ]\n * })\n * class Dependency {\n *   id:string;\n * }\n * ```\n *\n * Let's step through the different ways in which `MyDirective` could be declared...\n *\n *\n * ### No injection\n *\n * Here the constructor is declared with no arguments, therefore nothing is injected into\n * `MyDirective`.\n *\n * ```\n * @Directive({ selector: '[my-directive]' })\n * class MyDirective {\n *   constructor() {\n *   }\n * }\n * ```\n *\n * This directive would be instantiated with no dependencies.\n *\n *\n * ### Component-level injection\n *\n * Directives can inject any injectable instance from the closest component injector or any of its\n * parents.\n *\n * Here, the constructor declares a parameter, `someService`, and injects the `SomeService` type\n * from the parent\n * component's injector.\n * ```\n * @Directive({ selector: '[my-directive]' })\n * class MyDirective {\n *   constructor(someService: SomeService) {\n *   }\n * }\n * ```\n *\n * This directive would be instantiated with a dependency on `SomeService`.\n *\n *\n * ### Injecting a directive from the current element\n *\n * Directives can inject other directives declared on the current element.\n *\n * ```\n * @Directive({ selector: '[my-directive]' })\n * class MyDirective {\n *   constructor(dependency: Dependency) {\n *     expect(dependency.id).toEqual(3);\n *   }\n * }\n * ```\n * This directive would be instantiated with `Dependency` declared at the same element, in this case\n * `dependency=\"3\"`.\n *\n * ### Injecting a directive from any ancestor elements\n *\n * Directives can inject other directives declared on any ancestor element (in the current Shadow\n * DOM), i.e. on the current element, the\n * parent element, or its parents.\n * ```\n * @Directive({ selector: '[my-directive]' })\n * class MyDirective {\n *   constructor(@Host() dependency: Dependency) {\n *     expect(dependency.id).toEqual(2);\n *   }\n * }\n * ```\n *\n * `@Host` checks the current element, the parent, as well as its parents recursively. If\n * `dependency=\"2\"` didn't\n * exist on the direct parent, this injection would\n * have returned\n * `dependency=\"1\"`.\n *\n *\n * ### Injecting a live collection of direct child directives\n *\n *\n * A directive can also query for other child directives. Since parent directives are instantiated\n * before child directives, a directive can't simply inject the list of child directives. Instead,\n * the directive injects a {@link QueryList}, which updates its contents as children are added,\n * removed, or moved by a directive that uses a {@link ViewContainerRef} such as a `ngFor`, an\n * `ngIf`, or an `ngSwitch`.\n *\n * ```\n * @Directive({ selector: '[my-directive]' })\n * class MyDirective {\n *   constructor(@Query(Dependency) dependencies:QueryList<Dependency>) {\n *   }\n * }\n * ```\n *\n * This directive would be instantiated with a {@link QueryList} which contains `Dependency` 4 and\n * `Dependency` 6. Here, `Dependency` 5 would not be included, because it is not a direct child.\n *\n * ### Injecting a live collection of descendant directives\n *\n * By passing the descendant flag to `@Query` above, we can include the children of the child\n * elements.\n *\n * ```\n * @Directive({ selector: '[my-directive]' })\n * class MyDirective {\n *   constructor(@Query(Dependency, {descendants: true}) dependencies:QueryList<Dependency>) {\n *   }\n * }\n * ```\n *\n * This directive would be instantiated with a Query which would contain `Dependency` 4, 5 and 6.\n *\n * ### Optional injection\n *\n * The normal behavior of directives is to return an error when a specified dependency cannot be\n * resolved. If you\n * would like to inject `null` on unresolved dependency instead, you can annotate that dependency\n * with `@Optional()`.\n * This explicitly permits the author of a template to treat some of the surrounding directives as\n * optional.\n *\n * ```\n * @Directive({ selector: '[my-directive]' })\n * class MyDirective {\n *   constructor(@Optional() dependency:Dependency) {\n *   }\n * }\n * ```\n *\n * This directive would be instantiated with a `Dependency` directive found on the current element.\n * If none can be\n * found, the injector supplies `null` instead of throwing an error.\n *\n * ### Example\n *\n * Here we use a decorator directive to simply define basic tool-tip behavior.\n *\n * ```\n * @Directive({\n *   selector: '[tooltip]',\n *   inputs: [\n *     'text: tooltip'\n *   ],\n *   host: {\n *     '(mouseenter)': 'onMouseEnter()',\n *     '(mouseleave)': 'onMouseLeave()'\n *   }\n * })\n * class Tooltip{\n *   text:string;\n *   overlay:Overlay; // NOT YET IMPLEMENTED\n *   overlayManager:OverlayManager; // NOT YET IMPLEMENTED\n *\n *   constructor(overlayManager:OverlayManager) {\n *     this.overlay = overlay;\n *   }\n *\n *   onMouseEnter() {\n *     // exact signature to be determined\n *     this.overlay = this.overlayManager.open(text, ...);\n *   }\n *\n *   onMouseLeave() {\n *     this.overlay.close();\n *     this.overlay = null;\n *   }\n * }\n * ```\n * In our HTML template, we can then add this behavior to a `<div>` or any other element with the\n * `tooltip` selector,\n * like so:\n *\n * ```\n * <div tooltip=\"some text here\"></div>\n * ```\n *\n * Directives can also control the instantiation, destruction, and positioning of inline template\n * elements:\n *\n * A directive uses a {@link ViewContainerRef} to instantiate, insert, move, and destroy views at\n * runtime.\n * The {@link ViewContainerRef} is created as a result of `<template>` element, and represents a\n * location in the current view\n * where these actions are performed.\n *\n * Views are always created as children of the current {@link ViewMetadata}, and as siblings of the\n * `<template>` element. Thus a\n * directive in a child view cannot inject the directive that created it.\n *\n * Since directives that create views via ViewContainers are common in Angular, and using the full\n * `<template>` element syntax is wordy, Angular\n * also supports a shorthand notation: `<li *foo=\"bar\">` and `<li template=\"foo: bar\">` are\n * equivalent.\n *\n * Thus,\n *\n * ```\n * <ul>\n *   <li *foo=\"bar\" title=\"text\"></li>\n * </ul>\n * ```\n *\n * Expands in use to:\n *\n * ```\n * <ul>\n *   <template [foo]=\"bar\">\n *     <li title=\"text\"></li>\n *   </template>\n * </ul>\n * ```\n *\n * Notice that although the shorthand places `*foo=\"bar\"` within the `<li>` element, the binding for\n * the directive\n * controller is correctly instantiated on the `<template>` element rather than the `<li>` element.\n *\n * ## Lifecycle hooks\n *\n * When the directive class implements some {@link angular2/lifecycle_hooks} the callbacks are\n * called by the change detection at defined points in time during the life of the directive.\n *\n * ### Example\n *\n * Let's suppose we want to implement the `unless` behavior, to conditionally include a template.\n *\n * Here is a simple directive that triggers on an `unless` selector:\n *\n * ```\n * @Directive({\n *   selector: '[unless]',\n *   inputs: ['unless']\n * })\n * export class Unless {\n *   viewContainer: ViewContainerRef;\n *   templateRef: TemplateRef;\n *   prevCondition: boolean;\n *\n *   constructor(viewContainer: ViewContainerRef, templateRef: TemplateRef) {\n *     this.viewContainer = viewContainer;\n *     this.templateRef = templateRef;\n *     this.prevCondition = null;\n *   }\n *\n *   set unless(newCondition) {\n *     if (newCondition && (isBlank(this.prevCondition) || !this.prevCondition)) {\n *       this.prevCondition = true;\n *       this.viewContainer.clear();\n *     } else if (!newCondition && (isBlank(this.prevCondition) || this.prevCondition)) {\n *       this.prevCondition = false;\n *       this.viewContainer.create(this.templateRef);\n *     }\n *   }\n * }\n * ```\n *\n * We can then use this `unless` selector in a template:\n * ```\n * <ul>\n *   <li *unless=\"expr\"></li>\n * </ul>\n * ```\n *\n * Once the directive instantiates the child view, the shorthand notation for the template expands\n * and the result is:\n *\n * ```\n * <ul>\n *   <template [unless]=\"exp\">\n *     <li></li>\n *   </template>\n *   <li></li>\n * </ul>\n * ```\n *\n * Note also that although the `<li></li>` template still exists inside the `<template></template>`,\n * the instantiated\n * view occurs on the second `<li></li>` which is a sibling to the `<template>` element.\n */\nvar DirectiveMetadata = (function (_super) {\n    __extends(DirectiveMetadata, _super);\n    function DirectiveMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, selector = _b.selector, inputs = _b.inputs, attrs = _b.attrs, outputs = _b.outputs, host = _b.host, providers = _b.providers, exportAs = _b.exportAs, queries = _b.queries, legacy = _b.legacy;\n        var _this = _super.call(this) || this;\n        _this.selector = selector;\n        _this._inputs = inputs;\n        _this._attrs = attrs;\n        _this._outputs = outputs;\n        _this.host = host;\n        _this.exportAs = exportAs;\n        _this.queries = queries;\n        _this._providers = providers;\n        _this.legacy = legacy;\n        return _this;\n    }\n    Object.defineProperty(DirectiveMetadata.prototype, \"inputs\", {\n        /**\n         * Enumerates the set of data-bound input properties for a directive\n         *\n         * Angular automatically updates input properties during change detection.\n         *\n         * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n         * configuration:\n         *\n         * - `directiveProperty` specifies the component property where the value is written.\n         * - `bindingProperty` specifies the DOM property where the value is read from.\n         *\n         * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/ivhfXY?p=preview))\n         *\n         * The following example creates a component with two data-bound properties.\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'bank-account',\n         *   inputs: ['bankName', 'id: account-id'],\n         *   template: `\n         *     Bank Name: {{bankName}}\n         *     Account Id: {{id}}\n         *   `\n         * })\n         * class BankAccount {\n         *   bankName: string;\n         *   id: string;\n         *\n         *   // this property is not bound, and won't be automatically updated by Angular\n         *   normalizedBankName: string;\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   template: `\n         *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n         *   `,\n         *   directives: [BankAccount]\n         * })\n         * class App {}\n         *\n         * bootstrap(App);\n         * ```\n         *\n         */\n        get: function () {\n            return this._inputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectiveMetadata.prototype, \"attrs\", {\n        /**\n         * Enumerates the set of attribute-bound input properties for a directive\n         *\n         * Angular automatically updates input properties during change detection.\n         *\n         * The `attrs` property defines a set of `directiveProperty` to `bindingProperty`\n         * configuration:\n         *\n         * - `directiveProperty` specifies the component property where the value is written.\n         * - `bindingProperty` specifies the DOM property where the value is read from.\n         *\n         * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n         *\n         * #### Behind the scenes:\n         * This is just Angular 1 `@` binding on `bindToController` object.\n         *\n         * So this `attrs: ['bankName', 'id: account-id']`\n         * is equal to: `bindToController{bankName:'@',id:'@accountId'}`\n         *\n         *\n         * The following example creates a component with two attribute-bound properties.\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'bank-account',\n         *   attrs: ['bankName', 'id: accountId'],\n         *   template: `\n         *     Bank Name: {{ctrl.bankName}}\n         *     Account Id: {{ctrl.id}}\n         *   `\n         * })\n         * class BankAccount {\n         *   bankName: string;\n         *   id: string;\n         *\n         *   // this property is not bound, and won't be automatically updated by Angular\n         *   normalizedBankName: string;\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   template: `\n         *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n         *   `\n         * })\n         * class App {}\n         *\n         * ```\n         *\n         * Will output:\n         * ```html\n         * <bank-account bank-name=\"RBC\" account-id=\"4747\">\n         *    Bank Name: RBC\n         *    Account Id: 4747\n         * </bank-account>\n         * ```\n         *\n         */\n        get: function () {\n            return this._attrs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectiveMetadata.prototype, \"outputs\", {\n        /**\n         * Enumerates the set of event-bound output properties.\n         *\n         * When an output property emits an event, an event handler attached to that event\n         * the template is invoked.\n         *\n         * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n         * configuration:\n         *\n         * - `directiveProperty` specifies the component property that emits events.\n         * - `bindingProperty` specifies the DOM property the event handler is attached to.\n         *\n         * ### Example ([live demo](http://plnkr.co/edit/d5CNq7?p=preview))\n         *\n         * ```typescript\n         * @Directive({\n         *   selector: 'interval-dir',\n         *   outputs: ['everySecond', 'five5Secs: everyFiveSeconds']\n         * })\n         * class IntervalDir {\n         *   everySecond = new EventEmitter();\n         *   five5Secs = new EventEmitter();\n         *\n         *   constructor() {\n         *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n         *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   template: `\n         *     <interval-dir (every-second)=\"everySecond()\" (every-five-seconds)=\"everyFiveSeconds()\">\n         *     </interval-dir>\n         *   `,\n         *   directives: [IntervalDir]\n         * })\n         * class App {\n         *   everySecond() { console.log('second'); }\n         *   everyFiveSeconds() { console.log('five seconds'); }\n         * }\n         * bootstrap(App);\n         * ```\n         *\n         */\n        get: function () {\n            return this._outputs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DirectiveMetadata.prototype, \"providers\", {\n        /**\n         * Defines the set of injectable objects that are visible to a Directive and its light DOM\n         * children.\n         *\n         * ## Simple Example\n         *\n         * Here is an example of a class that can be injected:\n         *\n         * ```\n         * class Greeter {\n         *    greet(name:string) {\n         *      return 'Hello ' + name + '!';\n         *    }\n         * }\n         *\n         * @Directive({\n         *   selector: 'greet',\n         *   bindings: [\n         *     Greeter\n         *   ]\n         * })\n         * class HelloWorld {\n         *   greeter:Greeter;\n         *\n         *   constructor(greeter:Greeter) {\n         *     this.greeter = greeter;\n         *   }\n         * }\n         * ```\n         */\n        get: function () {\n            return this._providers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DirectiveMetadata;\n}(metadata_1.InjectableMetadata));\nexports.DirectiveMetadata = DirectiveMetadata;\n/**\n * Declare reusable UI building blocks for an application.\n *\n * Each Angular component requires a single `@Component` annotation. The\n * `@Component`\n * annotation specifies when a component is instantiated, and which properties and hostListeners it\n * binds to.\n *\n * When a component is instantiated, Angular\n * - creates a shadow DOM for the component.\n * - loads the selected template into the shadow DOM.\n * - creates all the injectable objects configured with `providers` and `viewProviders`.\n *\n * All template expressions and statements are then evaluated against the component instance.\n *\n * ## Lifecycle hooks\n *\n * When the component class implements some {@link angular2/lifecycle_hooks} the callbacks are\n * called by the change detection at defined points in time during the life of the component.\n *\n * ### Example\n *\n * {@example core/ts/metadata/metadata.ts region='component'}\n */\nvar ComponentMetadata = (function (_super) {\n    __extends(ComponentMetadata, _super);\n    function ComponentMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, selector = _b.selector, inputs = _b.inputs, attrs = _b.attrs, outputs = _b.outputs, host = _b.host, exportAs = _b.exportAs, moduleId = _b.moduleId, providers = _b.providers, viewProviders = _b.viewProviders, _c = _b.changeDetection, changeDetection = _c === void 0 ? 1 /* Default */ : _c, queries = _b.queries, templateUrl = _b.templateUrl, template = _b.template, styleUrls = _b.styleUrls, styles = _b.styles, legacy = _b.legacy;\n        var _this = _super.call(this, {\n            selector: selector,\n            inputs: inputs,\n            attrs: attrs,\n            outputs: outputs,\n            host: host,\n            exportAs: exportAs,\n            providers: providers,\n            queries: queries,\n            legacy: legacy\n        }) || this;\n        _this.changeDetection = changeDetection;\n        _this._viewProviders = viewProviders;\n        _this.templateUrl = templateUrl;\n        _this.template = template;\n        _this.styleUrls = styleUrls;\n        _this.styles = styles;\n        _this.moduleId = moduleId;\n        return _this;\n    }\n    Object.defineProperty(ComponentMetadata.prototype, \"viewProviders\", {\n        /**\n         * Defines the set of injectable objects that are visible to its view DOM children.\n         *\n         * ## Simple Example\n         *\n         * Here is an example of a class that can be injected:\n         *\n         * ```\n         * class Greeter {\n         *    greet(name:string) {\n         *      return 'Hello ' + name + '!';\n         *    }\n         * }\n         *\n         * @Directive({\n         *   selector: 'needs-greeter'\n         * })\n         * class NeedsGreeter {\n         *   greeter:Greeter;\n         *\n         *   constructor(greeter:Greeter) {\n         *     this.greeter = greeter;\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'greet',\n         *   viewProviders: [\n         *     Greeter\n         *   ],\n         *   template: `<needs-greeter></needs-greeter>`,\n         *   directives: [NeedsGreeter]\n         * })\n         * class HelloWorld {\n         * }\n         *\n         * ```\n         */\n        get: function () {\n            return this._viewProviders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ComponentMetadata;\n}(DirectiveMetadata));\nexports.ComponentMetadata = ComponentMetadata;\n/**\n * Declares a data-bound input property.\n *\n * Angular automatically updates data-bound properties during change detection.\n *\n * `InputMetadata` takes an optional parameter that specifies the name\n * used when instantiating a component in the template. When not provided,\n * the name of the decorated property is used.\n *\n * ### Example\n *\n * The following example creates a component with two input properties.\n *\n * ```typescript\n * @Component({\n *   selector: 'bank-account',\n *   template: `\n *     Bank Name: {{bankName}}\n *     Account Id: {{id}}\n *   `\n * })\n * class BankAccount {\n *   @Input() bankName: string;\n *   @Input('account-id') id: string;\n *\n *   // this property is not bound, and won't be automatically updated by Angular\n *   normalizedBankName: string;\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: `\n *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n *   `,\n *   directives: [BankAccount]\n * })\n * class App {}\n *\n * bootstrap(App);\n * ```\n */\nvar InputMetadata = (function () {\n    /**\n     *\n     * @param {string?} bindingPropertyName Name used when instantiating a component in the template.\n     */\n    function InputMetadata(bindingPropertyName) {\n        this.bindingPropertyName = bindingPropertyName;\n    }\n    return InputMetadata;\n}());\nexports.InputMetadata = InputMetadata;\n/**\n * Declares a data-bound attribute property.\n *\n * Angular automatically updates data-bound properties during change detection.\n *\n * `AttrMetadata` takes an optional parameter that specifies the name\n * used when instantiating a component in the template. When not provided,\n * the name of the decorated property is used.\n *\n *\n * #### Behind the scenes:\n * This is just Angular 1 `@` binding on `bindToController` object.\n *\n * So this `attrs: ['bankName', 'id: account-id']`\n * is equal to: `bindToController{bankName:'@',id:'@accountId'}`\n *\n * ### Example\n *\n * The following example creates a component with two attribute-bound properties.\n *\n * ```typescript\n * @Component({\n *   selector: 'bank-account',\n *   template: `\n *     Bank Name: {{ctrl.bankName}}\n *     Account Id: {{ctrl.id}}\n *   `\n * })\n * class BankAccount {\n *    @Attr() bankName: string;\n *    @Attr('accountId') id: string;\n *\n *   // this property is not bound, and won't be automatically updated by Angular\n *   normalizedBankName: string;\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: `\n *     <bank-account bank-name=\"RBC\" account-id=\"4747\"></bank-account>\n *   `\n * })\n * class App {}\n * ```\n *\n * Will output:\n * ```html\n * <bank-account bank-name=\"RBC\" account-id=\"4747\">\n *    Bank Name: RBC\n *    Account Id: 4747\n * </bank-account>\n * ```\n *\n */\nvar AttrMetadata = (function () {\n    /**\n     *\n     * @param {string?} bindingPropertyName Name used when instantiating a component in the template.\n     */\n    function AttrMetadata(bindingPropertyName) {\n        this.bindingPropertyName = bindingPropertyName;\n    }\n    return AttrMetadata;\n}());\nexports.AttrMetadata = AttrMetadata;\n/**\n * Declares an event-bound output property.\n *\n * When an output property emits an event, an event handler attached to that event\n * the template is invoked.\n *\n * `OutputMetadata` takes an optional parameter that specifies the name\n * used when instantiating a component in the template. When not provided,\n * the name of the decorated property is used.\n *\n * ### Example\n *\n * ```typescript\n * @Directive({\n *   selector: 'interval-dir',\n * })\n * class IntervalDir {\n *   @Output() everySecond = new EventEmitter();\n *   @Output('everyFiveSeconds') five5Secs = new EventEmitter();\n *\n *   constructor() {\n *     setInterval(() => this.everySecond.emit(\"event\"), 1000);\n *     setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n *   }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: `\n *     <interval-dir (every-second)=\"everySecond()\" (every-five-seconds)=\"everyFiveSeconds()\">\n *     </interval-dir>\n *   `,\n *   directives: [IntervalDir]\n * })\n * class App {\n *   everySecond() { console.log('second'); }\n *   everyFiveSeconds() { console.log('five seconds'); }\n * }\n * bootstrap(App);\n * ```\n */\nvar OutputMetadata = (function () {\n    /**\n     *\n     * @param {string?} bindingPropertyName Name used when instantiating a component in the template.\n     */\n    function OutputMetadata(bindingPropertyName) {\n        this.bindingPropertyName = bindingPropertyName;\n    }\n    return OutputMetadata;\n}());\nexports.OutputMetadata = OutputMetadata;\n/**\n * Declares a host property binding.\n *\n * Angular automatically checks host property bindings during change detection.\n * If a binding changes, it will update the host element of the directive.\n *\n * `HostBindingMetadata` takes an optional parameter that specifies the property\n * name of the host element that will be updated. When not provided,\n * the class property name is used.\n *\n * ### Example\n *\n * The following example creates a directive that sets the `valid` and `invalid` classes\n * on the DOM element that has ngModel directive on it.\n *\n * ```typescript\n * @Directive({selector: '[ngModel]'})\n * class NgModelStatus {\n *   constructor(public control:NgModel) {}\n *   @HostBinding('[class.valid]') get valid { return this.control.valid; }\n *   @HostBinding('[class.invalid]') get invalid { return this.control.invalid; }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: `<input [(ngModel)]=\"prop\">`,\n *   directives: [FORM_DIRECTIVES, NgModelStatus]\n * })\n * class App {\n *   prop;\n * }\n *\n * bootstrap(App);\n * ```\n */\nvar HostBindingMetadata = (function () {\n    function HostBindingMetadata(hostPropertyName) {\n        this.hostPropertyName = hostPropertyName;\n    }\n    return HostBindingMetadata;\n}());\nexports.HostBindingMetadata = HostBindingMetadata;\n/**\n * Declares a host listener.\n *\n * Angular will invoke the decorated method when the host element emits the specified event.\n *\n * If the decorated method returns `false`, then `preventDefault` is applied on the DOM\n * event.\n *\n * ### Example\n *\n * The following example declares a directive that attaches a click listener to the button and\n * counts clicks.\n *\n * ```typescript\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log(\"button\", btn, \"number of clicks:\", this.numberOfClicks++);\n *   }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: `<button counting>Increment</button>`,\n *   directives: [CountClicks]\n * })\n * class App {}\n *\n * bootstrap(App);\n * ```\n */\nvar HostListenerMetadata = (function () {\n    function HostListenerMetadata(eventName, args) {\n        this.eventName = eventName;\n        this.args = args;\n    }\n    return HostListenerMetadata;\n}());\nexports.HostListenerMetadata = HostListenerMetadata;\n/**\n * Declares an Angular Module.\n */\nvar NgModuleMetadata = (function (_super) {\n    __extends(NgModuleMetadata, _super);\n    function NgModuleMetadata(options) {\n        if (options === void 0) { options = {}; }\n        var _this = \n        // We cannot use destructuring of the constructor argument because `exports` is a\n        // protected symbol in CommonJS and closure tries to aggressively optimize it away.\n        _super.call(this) || this;\n        _this._providers = options.providers;\n        _this.declarations = options.declarations;\n        _this.imports = options.imports;\n        return _this;\n    }\n    Object.defineProperty(NgModuleMetadata.prototype, \"providers\", {\n        get: function () { return this._providers; },\n        enumerable: true,\n        configurable: true\n    });\n    return NgModuleMetadata;\n}(metadata_1.InjectableMetadata));\nexports.NgModuleMetadata = NgModuleMetadata;\n//# sourceMappingURL=metadata_directives.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 4 */
/* unknown exports provided */
/* all exports used */
/*!*********************************************************!*\
  !*** ./~/ng-metadata/src/core/reflection/reflection.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar reflector_1 = __webpack_require__(/*! ./reflector */ 60);\nvar reflection_capabilities_1 = __webpack_require__(/*! ./reflection_capabilities */ 59);\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexports.reflector = new reflector_1.Reflector(new reflection_capabilities_1.ReflectionCapabilities());\n//# sourceMappingURL=reflection.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvcmVmbGVjdGlvbi9yZWZsZWN0aW9uLmpzP2RhYTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgcmVmbGVjdG9yXzEgPSByZXF1aXJlKFwiLi9yZWZsZWN0b3JcIik7XG52YXIgcmVmbGVjdGlvbl9jYXBhYmlsaXRpZXNfMSA9IHJlcXVpcmUoXCIuL3JlZmxlY3Rpb25fY2FwYWJpbGl0aWVzXCIpO1xuLyoqXG4gKiBUaGUge0BsaW5rIFJlZmxlY3Rvcn0gdXNlZCBpbnRlcm5hbGx5IGluIEFuZ3VsYXIgdG8gYWNjZXNzIG1ldGFkYXRhXG4gKiBhYm91dCBzeW1ib2xzLlxuICovXG5leHBvcnRzLnJlZmxlY3RvciA9IG5ldyByZWZsZWN0b3JfMS5SZWZsZWN0b3IobmV3IHJlZmxlY3Rpb25fY2FwYWJpbGl0aWVzXzEuUmVmbGVjdGlvbkNhcGFiaWxpdGllcygpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZmxlY3Rpb24uanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3JlZmxlY3Rpb24vcmVmbGVjdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 5 */
/* unknown exports provided */
/* all exports used */
/*!***********************************************!*\
  !*** ./~/ng-metadata/src/core/di/provider.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar reflection_1 = __webpack_require__(/*! ../reflection/reflection */ 4);\nvar pipe_provider_1 = __webpack_require__(/*! ../pipes/pipe_provider */ 58);\nvar directive_provider_1 = __webpack_require__(/*! ../directives/directive_provider */ 49);\nvar collections_1 = __webpack_require__(/*! ../../facade/collections */ 1);\nvar forward_ref_1 = __webpack_require__(/*! ./forward_ref */ 6);\nvar exceptions_1 = __webpack_require__(/*! ../../facade/exceptions */ 24);\nvar provider_util_1 = __webpack_require__(/*! ./provider_util */ 7);\nvar provider_util_2 = __webpack_require__(/*! ./provider_util */ 7);\nvar provider_util_3 = __webpack_require__(/*! ./provider_util */ 7);\nvar Provider = (function () {\n    function Provider(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory;\n        this.dependencies = deps;\n        this._multi = multi;\n    }\n    Object.defineProperty(Provider.prototype, \"multi\", {\n        /**\n         * Creates multiple providers matching the same token (a multi-provider).\n         *\n         * Multi-providers are used for creating pluggable service, where the system comes\n         * with some default providers, and the user can register additional providers.\n         * The combination of the default providers and the additional providers will be\n         * used to drive the behavior of the system.\n         *\n         * ### Example\n         *\n         * ```typescript\n         * var injector = Injector.resolveAndCreate([\n         *   new Provider(\"Strings\", { useValue: \"String1\", multi: true}),\n         *   new Provider(\"Strings\", { useValue: \"String2\", multi: true})\n         * ]);\n         *\n         * expect(injector.get(\"Strings\")).toEqual([\"String1\", \"String2\"]);\n         * ```\n         *\n         * Multi-providers and regular providers cannot be mixed. The following\n         * will throw an exception:\n         *\n         * ```typescript\n         * var injector = Injector.resolveAndCreate([\n         *   new Provider(\"Strings\", { useValue: \"String1\", multi: true }),\n         *   new Provider(\"Strings\", { useValue: \"String2\"})\n         * ]);\n         * ```\n         */\n        get: function () { return lang_1.normalizeBool(this._multi); },\n        enumerable: true,\n        configurable: true\n    });\n    return Provider;\n}());\nexports.Provider = Provider;\nvar ProviderBuilder = (function () {\n    function ProviderBuilder() {\n    }\n    ProviderBuilder.createFromType = function (type, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useFactory = _a.useFactory, deps = _a.deps;\n        // ...provide('myFactory',{useFactory: () => () => { return new Foo(); } })\n        if (lang_1.isPresent(useFactory)) {\n            var factoryToken = getInjectableName(type);\n            var injectableDeps = lang_1.isArray(deps) ? deps.map(getInjectableName) : [];\n            useFactory.$inject = injectableDeps;\n            return [\n                factoryToken,\n                useFactory\n            ];\n        }\n        // ...provide(opaqueTokenInst,{useValue: {foo:12312} })\n        // ...provide('myValue',{useValue: {foo:12312} })\n        if (lang_1.isPresent(useValue)) {\n            var valueToken = getInjectableName(type);\n            return [\n                valueToken,\n                useValue\n            ];\n        }\n        var injectableType = lang_1.isString(type) || provider_util_1.isOpaqueToken(type)\n            ? forward_ref_1.resolveForwardRef(useClass)\n            : forward_ref_1.resolveForwardRef(type);\n        var overrideName = lang_1.isString(type) || provider_util_1.isOpaqueToken(type)\n            ? getInjectableName(type)\n            : '';\n        if (!lang_1.isType(injectableType)) {\n            throw new Error(\"\\n      Provider registration: \\\"\" + lang_1.stringify(injectableType) + \"\\\":\\n      =======================================================\\n      token \" + lang_1.stringify(injectableType) + \" must be type of Type, You cannot provide none class\\n      \");\n        }\n        /**\n         *\n         * @type {any[]}\n         */\n        var annotations = reflection_1.reflector.annotations(injectableType);\n        var rootAnnotation = annotations[0];\n        // No Annotation === it's config function !!!\n        // NOTE: we are not checking anymore if user annotated the class or not,\n        // we cannot do that anymore at the costs for nic config functions registration\n        if (collections_1.ListWrapper.isEmpty(annotations)) {\n            return [injectableType];\n        }\n        if (collections_1.ListWrapper.size(annotations) > 1) {\n            var hasComponentAnnotation = annotations.some(function (meta) { return provider_util_2.isComponent(meta); });\n            var hasNotAllowedSecondAnnotation = annotations.some(function (meta) {\n                return provider_util_1.isDirectiveLike(meta) || provider_util_1.isService(meta) || provider_util_1.isPipe(meta);\n            });\n            if (!hasComponentAnnotation || (hasNotAllowedSecondAnnotation && hasComponentAnnotation)) {\n                throw Error(\"\\n        Provider registration: \\\"\" + lang_1.stringify(injectableType) + \"\\\":\\n        =======================================================\\n        - you cannot use more than 1 class decorator,\\n        - you've used \" + annotations.map(function (meta) { return lang_1.stringify(meta.constructor); }) + \"\\n        Multiple class decorators are allowed only for component class: [ @Component, @StateConfig? ]\\n        \");\n            }\n        }\n        injectableType.$inject = _dependenciesFor(injectableType);\n        if (provider_util_1.isPipe(rootAnnotation)) {\n            return pipe_provider_1.pipeProvider.createFromType(injectableType);\n        }\n        if (provider_util_1.isDirectiveLike(rootAnnotation)) {\n            return directive_provider_1.directiveProvider.createFromType(injectableType);\n        }\n        if (provider_util_1.isService(rootAnnotation)) {\n            return [\n                overrideName || rootAnnotation.id,\n                injectableType\n            ];\n        }\n    };\n    return ProviderBuilder;\n}());\n/**\n * should extract the string token from provided Type and add $inject angular 1 annotation to constructor if @Inject\n * was used\n * @returns {[string,Type]}\n * @deprecated\n */\nfunction provide(type, _a) {\n    var _b = _a === void 0 ? {} : _a, useClass = _b.useClass, useValue = _b.useValue, useFactory = _b.useFactory, deps = _b.deps;\n    return ProviderBuilder.createFromType(type, { useClass: useClass, useValue: useValue, useFactory: useFactory, deps: deps });\n}\nexports.provide = provide;\n/**\n * creates $inject array Angular 1 DI annotation strings for provided Type\n * @param typeOrFunc\n * @returns {any}\n * @private\n * @internal\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflection_1.reflector.parameters(typeOrFunc);\n    if (lang_1.isBlank(params))\n        return [];\n    if (params.some(function (param) { return lang_1.isBlank(param) || collections_1.ListWrapper.isEmpty(param); })) {\n        throw new Error(exceptions_1.getErrorMsg(typeOrFunc, \"you cannot have holes in constructor DI injection\"));\n    }\n    return params\n        .map(function (p) { return _extractToken(p); });\n}\nexports._dependenciesFor = _dependenciesFor;\n/**\n * should extract service/values/directives/pipes token from constructor @Inject() paramMetadata\n * @param metadata\n * @private\n * @internal\n */\nfunction _extractToken(metadata) {\n    // this is token obtained via design:paramtypes via Reflect.metadata\n    var paramMetadata = metadata.filter(lang_1.isType)[0];\n    // this is token obtained from @Inject() usage  for DI\n    var injectMetadata = metadata.filter(provider_util_3.isInjectMetadata)[0];\n    if (lang_1.isBlank(injectMetadata) && lang_1.isBlank(paramMetadata)) {\n        return;\n    }\n    var _a = (injectMetadata || {}).token, token = _a === void 0 ? undefined : _a;\n    var injectable = forward_ref_1.resolveForwardRef(token) || paramMetadata;\n    return getInjectableName(injectable);\n}\nexports._extractToken = _extractToken;\n/**\n *  A utility function that can be used to get the angular 1 injectable's name. Needed for some cases, since\n *  injectable names are auto-created.\n *\n *  Works for string/OpaqueToken/Type\n *  Note: Type must be decorated otherwise it throws\n *\n *  @example\n *  ```typescript\n *  import { Injectable, getInjectableName } from 'ng-metadata/core';\n *  // this is given some random name like 'myService48' when it's created with `module.service`\n *\n *  @Injectable\n *  class MyService {}\n *\n *  console.log(getInjectableName(MyService)); // 'myService48'\n *  ```\n *\n * @param {ProviderType}  injectable\n * @returns {string}\n */\nfunction getInjectableName(injectable) {\n    // @Inject('foo') foo\n    if (lang_1.isString(injectable)) {\n        return injectable;\n    }\n    // const fooToken = new OpaqueToken('foo')\n    // @Inject(fooToken) foo\n    if (provider_util_1.isOpaqueToken(injectable)) {\n        return injectable.desc;\n    }\n    // @Injectable()\n    // class SomeService(){}\n    //\n    // @Inject(SomeService) someSvc\n    // someSvc: SomeService\n    if (lang_1.isType(injectable)) {\n        // only the first class annotations is injectable\n        var annotation = reflection_1.reflector.annotations(injectable)[0];\n        if (lang_1.isBlank(annotation)) {\n            throw new Error(\"\\n        cannot get injectable name token from none decorated class \" + lang_1.getFuncName(injectable) + \"\\n        Only decorated classes by one of [ @Injectable,@Directive,@Component,@Pipe ], can be injected by reference\\n      \");\n        }\n        if (provider_util_1.isPipe(annotation)) {\n            return annotation.name;\n        }\n        if (provider_util_1.isDirectiveLike(annotation)) {\n            return lang_1.resolveDirectiveNameFromSelector(annotation.selector);\n        }\n        if (provider_util_1.isService(annotation)) {\n            return annotation.id;\n        }\n    }\n}\nexports.getInjectableName = getInjectableName;\n/**\n *\n * @param metadata\n * @returns {boolean}\n * @private\n * @internal\n * @deprecated\n *\n * @TODO: delete this\n */\nfunction _areAllDirectiveInjectionsAtTail(metadata) {\n    return metadata.every(function (paramMetadata, idx, arr) {\n        var isCurrentDirectiveInjection = paramMetadata.length > 1;\n        var hasPrev = idx > 0;\n        var hasNext = idx < arr.length - 1;\n        if (hasPrev) {\n            var prevInjection = arr[idx - 1];\n            var isPrevDirectiveInjection = prevInjection.length > 1;\n            if (isPrevDirectiveInjection && !isCurrentDirectiveInjection) {\n                return false;\n            }\n        }\n        if (hasNext) {\n            var nextInjection = arr[idx + 1];\n            var isNextDirectiveInjection = nextInjection.length > 1;\n            if (!isNextDirectiveInjection && isNextDirectiveInjection) {\n                return false;\n            }\n        }\n        return true;\n    });\n}\nexports._areAllDirectiveInjectionsAtTail = _areAllDirectiveInjectionsAtTail;\n//# sourceMappingURL=provider.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 6 */
/* unknown exports provided */
/* all exports used */
/*!**************************************************!*\
  !*** ./~/ng-metadata/src/core/di/forward_ref.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref.ts region='forward_ref'}\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return lang_1.stringify(this()); };\n    return forwardRefFn;\n}\nexports.forwardRef = forwardRef;\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * ```typescript\n * var ref = forwardRef(() => \"refValue\");\n * expect(resolveForwardRef(ref)).toEqual(\"refValue\");\n * expect(resolveForwardRef(\"regularValue\")).toEqual(\"regularValue\");\n * ```\n *\n * See: {@link forwardRef}\n */\nfunction resolveForwardRef(type) {\n    if (_isForwardRef(type)) {\n        return type();\n    }\n    else {\n        return type;\n    }\n    function _isForwardRef(type) {\n        return lang_1.isFunction(type) && type.hasOwnProperty('__forward_ref__') && type.__forward_ref__ === forwardRef;\n    }\n}\nexports.resolveForwardRef = resolveForwardRef;\n//# sourceMappingURL=forward_ref.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvZGkvZm9yd2FyZF9yZWYuanM/OGEzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBsYW5nXzEgPSByZXF1aXJlKFwiLi4vLi4vZmFjYWRlL2xhbmdcIik7XG4vKipcbiAqIEFsbG93cyB0byByZWZlciB0byByZWZlcmVuY2VzIHdoaWNoIGFyZSBub3QgeWV0IGRlZmluZWQuXG4gKlxuICogRm9yIGluc3RhbmNlLCBgZm9yd2FyZFJlZmAgaXMgdXNlZCB3aGVuIHRoZSBgdG9rZW5gIHdoaWNoIHdlIG5lZWQgdG8gcmVmZXIgdG8gZm9yIHRoZSBwdXJwb3NlcyBvZlxuICogREkgaXMgZGVjbGFyZWQsXG4gKiBidXQgbm90IHlldCBkZWZpbmVkLiBJdCBpcyBhbHNvIHVzZWQgd2hlbiB0aGUgYHRva2VuYCB3aGljaCB3ZSB1c2Ugd2hlbiBjcmVhdGluZyBhIHF1ZXJ5IGlzIG5vdFxuICogeWV0IGRlZmluZWQuXG4gKlxuICogIyMjIEV4YW1wbGVcbiAqIHtAZXhhbXBsZSBjb3JlL2RpL3RzL2ZvcndhcmRfcmVmL2ZvcndhcmRfcmVmLnRzIHJlZ2lvbj0nZm9yd2FyZF9yZWYnfVxuICovXG5mdW5jdGlvbiBmb3J3YXJkUmVmKGZvcndhcmRSZWZGbikge1xuICAgIGZvcndhcmRSZWZGbi5fX2ZvcndhcmRfcmVmX18gPSBmb3J3YXJkUmVmO1xuICAgIGZvcndhcmRSZWZGbi50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxhbmdfMS5zdHJpbmdpZnkodGhpcygpKTsgfTtcbiAgICByZXR1cm4gZm9yd2FyZFJlZkZuO1xufVxuZXhwb3J0cy5mb3J3YXJkUmVmID0gZm9yd2FyZFJlZjtcbi8qKlxuICogTGF6aWx5IHJldHJpZXZlcyB0aGUgcmVmZXJlbmNlIHZhbHVlIGZyb20gYSBmb3J3YXJkUmVmLlxuICpcbiAqIEFjdHMgYXMgdGhlIGlkZW50aXR5IGZ1bmN0aW9uIHdoZW4gZ2l2ZW4gYSBub24tZm9yd2FyZC1yZWYgdmFsdWUuXG4gKlxuICogIyMjIEV4YW1wbGUgKFtsaXZlIGRlbW9dKGh0dHA6Ly9wbG5rci5jby9lZGl0L0dVNzJtSnJrMWZpb2RDaGNtaURSP3A9cHJldmlldykpXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogdmFyIHJlZiA9IGZvcndhcmRSZWYoKCkgPT4gXCJyZWZWYWx1ZVwiKTtcbiAqIGV4cGVjdChyZXNvbHZlRm9yd2FyZFJlZihyZWYpKS50b0VxdWFsKFwicmVmVmFsdWVcIik7XG4gKiBleHBlY3QocmVzb2x2ZUZvcndhcmRSZWYoXCJyZWd1bGFyVmFsdWVcIikpLnRvRXF1YWwoXCJyZWd1bGFyVmFsdWVcIik7XG4gKiBgYGBcbiAqXG4gKiBTZWU6IHtAbGluayBmb3J3YXJkUmVmfVxuICovXG5mdW5jdGlvbiByZXNvbHZlRm9yd2FyZFJlZih0eXBlKSB7XG4gICAgaWYgKF9pc0ZvcndhcmRSZWYodHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIHR5cGUoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB0eXBlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBfaXNGb3J3YXJkUmVmKHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIGxhbmdfMS5pc0Z1bmN0aW9uKHR5cGUpICYmIHR5cGUuaGFzT3duUHJvcGVydHkoJ19fZm9yd2FyZF9yZWZfXycpICYmIHR5cGUuX19mb3J3YXJkX3JlZl9fID09PSBmb3J3YXJkUmVmO1xuICAgIH1cbn1cbmV4cG9ydHMucmVzb2x2ZUZvcndhcmRSZWYgPSByZXNvbHZlRm9yd2FyZFJlZjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcndhcmRfcmVmLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9kaS9mb3J3YXJkX3JlZi5qc1xuLy8gbW9kdWxlIGlkID0gNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 7 */
/* unknown exports provided */
/* all exports used */
/*!****************************************************!*\
  !*** ./~/ng-metadata/src/core/di/provider_util.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar metadata_directives_1 = __webpack_require__(/*! ../directives/metadata_directives */ 3);\nvar metadata_1 = __webpack_require__(/*! ../pipes/metadata */ 14);\nvar provider_1 = __webpack_require__(/*! ./provider */ 5);\nvar opaque_token_1 = __webpack_require__(/*! ./opaque_token */ 20);\nvar metadata_2 = __webpack_require__(/*! ./metadata */ 2);\nfunction isProviderLiteral(obj) {\n    return obj && typeof obj == 'object' && obj.provide;\n}\nexports.isProviderLiteral = isProviderLiteral;\nfunction createProvider(obj) {\n    return new provider_1.Provider(obj.provide, obj);\n}\nexports.createProvider = createProvider;\nfunction isOpaqueToken(obj) {\n    return obj instanceof opaque_token_1.OpaqueToken;\n}\nexports.isOpaqueToken = isOpaqueToken;\nfunction isDirectiveLike(annotation) {\n    return lang_1.isString(annotation.selector) && annotation instanceof metadata_directives_1.DirectiveMetadata;\n}\nexports.isDirectiveLike = isDirectiveLike;\nfunction isDirective(annotation) {\n    return isDirectiveLike(annotation) && !_hasTemplate(annotation);\n}\nexports.isDirective = isDirective;\nfunction isComponent(annotation) {\n    return lang_1.isString(annotation.selector) && _hasTemplate(annotation) && annotation instanceof metadata_directives_1.ComponentMetadata;\n}\nexports.isComponent = isComponent;\nfunction _hasTemplate(annotation) {\n    return lang_1.isPresent(annotation.template || annotation.templateUrl);\n}\nfunction isService(annotation) {\n    return annotation instanceof metadata_2.InjectableMetadata;\n}\nexports.isService = isService;\nfunction isPipe(annotation) {\n    return lang_1.isString(annotation.name) && annotation instanceof metadata_1.PipeMetadata;\n}\nexports.isPipe = isPipe;\nfunction isInjectMetadata(injectMeta) {\n    return injectMeta instanceof metadata_2.InjectMetadata;\n}\nexports.isInjectMetadata = isInjectMetadata;\nfunction isNgModule(annotation) {\n    return annotation instanceof metadata_directives_1.NgModuleMetadata;\n}\nexports.isNgModule = isNgModule;\n//# sourceMappingURL=provider_util.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvZGkvcHJvdmlkZXJfdXRpbC5qcz82YmNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIGxhbmdfMSA9IHJlcXVpcmUoXCIuLi8uLi9mYWNhZGUvbGFuZ1wiKTtcbnZhciBtZXRhZGF0YV9kaXJlY3RpdmVzXzEgPSByZXF1aXJlKFwiLi4vZGlyZWN0aXZlcy9tZXRhZGF0YV9kaXJlY3RpdmVzXCIpO1xudmFyIG1ldGFkYXRhXzEgPSByZXF1aXJlKFwiLi4vcGlwZXMvbWV0YWRhdGFcIik7XG52YXIgcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL3Byb3ZpZGVyXCIpO1xudmFyIG9wYXF1ZV90b2tlbl8xID0gcmVxdWlyZShcIi4vb3BhcXVlX3Rva2VuXCIpO1xudmFyIG1ldGFkYXRhXzIgPSByZXF1aXJlKFwiLi9tZXRhZGF0YVwiKTtcbmZ1bmN0aW9uIGlzUHJvdmlkZXJMaXRlcmFsKG9iaikge1xuICAgIHJldHVybiBvYmogJiYgdHlwZW9mIG9iaiA9PSAnb2JqZWN0JyAmJiBvYmoucHJvdmlkZTtcbn1cbmV4cG9ydHMuaXNQcm92aWRlckxpdGVyYWwgPSBpc1Byb3ZpZGVyTGl0ZXJhbDtcbmZ1bmN0aW9uIGNyZWF0ZVByb3ZpZGVyKG9iaikge1xuICAgIHJldHVybiBuZXcgcHJvdmlkZXJfMS5Qcm92aWRlcihvYmoucHJvdmlkZSwgb2JqKTtcbn1cbmV4cG9ydHMuY3JlYXRlUHJvdmlkZXIgPSBjcmVhdGVQcm92aWRlcjtcbmZ1bmN0aW9uIGlzT3BhcXVlVG9rZW4ob2JqKSB7XG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIG9wYXF1ZV90b2tlbl8xLk9wYXF1ZVRva2VuO1xufVxuZXhwb3J0cy5pc09wYXF1ZVRva2VuID0gaXNPcGFxdWVUb2tlbjtcbmZ1bmN0aW9uIGlzRGlyZWN0aXZlTGlrZShhbm5vdGF0aW9uKSB7XG4gICAgcmV0dXJuIGxhbmdfMS5pc1N0cmluZyhhbm5vdGF0aW9uLnNlbGVjdG9yKSAmJiBhbm5vdGF0aW9uIGluc3RhbmNlb2YgbWV0YWRhdGFfZGlyZWN0aXZlc18xLkRpcmVjdGl2ZU1ldGFkYXRhO1xufVxuZXhwb3J0cy5pc0RpcmVjdGl2ZUxpa2UgPSBpc0RpcmVjdGl2ZUxpa2U7XG5mdW5jdGlvbiBpc0RpcmVjdGl2ZShhbm5vdGF0aW9uKSB7XG4gICAgcmV0dXJuIGlzRGlyZWN0aXZlTGlrZShhbm5vdGF0aW9uKSAmJiAhX2hhc1RlbXBsYXRlKGFubm90YXRpb24pO1xufVxuZXhwb3J0cy5pc0RpcmVjdGl2ZSA9IGlzRGlyZWN0aXZlO1xuZnVuY3Rpb24gaXNDb21wb25lbnQoYW5ub3RhdGlvbikge1xuICAgIHJldHVybiBsYW5nXzEuaXNTdHJpbmcoYW5ub3RhdGlvbi5zZWxlY3RvcikgJiYgX2hhc1RlbXBsYXRlKGFubm90YXRpb24pICYmIGFubm90YXRpb24gaW5zdGFuY2VvZiBtZXRhZGF0YV9kaXJlY3RpdmVzXzEuQ29tcG9uZW50TWV0YWRhdGE7XG59XG5leHBvcnRzLmlzQ29tcG9uZW50ID0gaXNDb21wb25lbnQ7XG5mdW5jdGlvbiBfaGFzVGVtcGxhdGUoYW5ub3RhdGlvbikge1xuICAgIHJldHVybiBsYW5nXzEuaXNQcmVzZW50KGFubm90YXRpb24udGVtcGxhdGUgfHwgYW5ub3RhdGlvbi50ZW1wbGF0ZVVybCk7XG59XG5mdW5jdGlvbiBpc1NlcnZpY2UoYW5ub3RhdGlvbikge1xuICAgIHJldHVybiBhbm5vdGF0aW9uIGluc3RhbmNlb2YgbWV0YWRhdGFfMi5JbmplY3RhYmxlTWV0YWRhdGE7XG59XG5leHBvcnRzLmlzU2VydmljZSA9IGlzU2VydmljZTtcbmZ1bmN0aW9uIGlzUGlwZShhbm5vdGF0aW9uKSB7XG4gICAgcmV0dXJuIGxhbmdfMS5pc1N0cmluZyhhbm5vdGF0aW9uLm5hbWUpICYmIGFubm90YXRpb24gaW5zdGFuY2VvZiBtZXRhZGF0YV8xLlBpcGVNZXRhZGF0YTtcbn1cbmV4cG9ydHMuaXNQaXBlID0gaXNQaXBlO1xuZnVuY3Rpb24gaXNJbmplY3RNZXRhZGF0YShpbmplY3RNZXRhKSB7XG4gICAgcmV0dXJuIGluamVjdE1ldGEgaW5zdGFuY2VvZiBtZXRhZGF0YV8yLkluamVjdE1ldGFkYXRhO1xufVxuZXhwb3J0cy5pc0luamVjdE1ldGFkYXRhID0gaXNJbmplY3RNZXRhZGF0YTtcbmZ1bmN0aW9uIGlzTmdNb2R1bGUoYW5ub3RhdGlvbikge1xuICAgIHJldHVybiBhbm5vdGF0aW9uIGluc3RhbmNlb2YgbWV0YWRhdGFfZGlyZWN0aXZlc18xLk5nTW9kdWxlTWV0YWRhdGE7XG59XG5leHBvcnRzLmlzTmdNb2R1bGUgPSBpc05nTW9kdWxlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvdmlkZXJfdXRpbC5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvZGkvcHJvdmlkZXJfdXRpbC5qc1xuLy8gbW9kdWxlIGlkID0gN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 8 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/metadata_di.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar forward_ref_1 = __webpack_require__(/*! ../di/forward_ref */ 6);\nvar metadata_1 = __webpack_require__(/*! ../di/metadata */ 2);\n/**\n * Declares an injectable parameter to be a live list of directives or variable\n * bindings from the content children of a directive.\n *\n * ### Example ([live demo](http://plnkr.co/edit/lY9m8HLy7z06vDoUaSN2?p=preview))\n *\n * Assume that `<tabs>` component would like to get a list its children `<pane>`\n * components as shown in this example:\n *\n * ```html\n * <tabs>\n *   <pane title=\"Overview\">...</pane>\n *   <pane *ngFor=\"#o of objects\" [title]=\"o.title\">{{o.text}}</pane>\n * </tabs>\n * ```\n *\n * The preferred solution is to query for `Pane` directives using this decorator.\n *\n * ```javascript\n * @Component({\n *   selector: 'pane',\n *   inputs: ['title']\n * })\n * class Pane {\n *   title:string;\n * }\n *\n * @Component({\n *  selector: 'tabs',\n *  template: `\n *    <ul>\n *      <li *ngFor=\"#pane of panes\">{{pane.title}}</li>\n *    </ul>\n *    <content></content>\n *  `\n * })\n * class Tabs {\n *   panes: QueryList<Pane>;\n *   constructor(@Query(Pane) panes:QueryList<Pane>) {\n  *    this.panes = panes;\n  *  }\n * }\n * ```\n *\n * A query can look for variable bindings by passing in a string with desired binding symbol.\n *\n * ### Example ([live demo](http://plnkr.co/edit/sT2j25cH1dURAyBRCKx1?p=preview))\n * ```html\n * <seeker>\n *   <div #findme>...</div>\n * </seeker>\n *\n * @Component({ selector: 'seeker' })\n * class Seeker {\n *   constructor(@Query('findme') elList: QueryList<ElementRef>) {...}\n * }\n * ```\n *\n * In this case the object that is injected depend on the type of the variable\n * binding. It can be an ElementRef, a directive or a component.\n *\n * Passing in a comma separated list of variable bindings will query for all of them.\n *\n * ```html\n * <seeker>\n *   <div #find-me>...</div>\n *   <div #find-me-too>...</div>\n * </seeker>\n *\n *  @Component({\n *   selector: 'seeker'\n * })\n * class Seeker {\n *   constructor(@Query('findMe, findMeToo') elList: QueryList<ElementRef>) {...}\n * }\n * ```\n *\n * Configure whether query looks for direct children or all descendants\n * of the querying element, by using the `descendants` parameter.\n * It is set to `false` by default.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wtGeB977bv7qvA5FTYl9?p=preview))\n * ```html\n * <container #first>\n *   <item>a</item>\n *   <item>b</item>\n *   <container #second>\n *     <item>c</item>\n *   </container>\n * </container>\n * ```\n *\n * When querying for items, the first container will see only `a` and `b` by default,\n * but with `Query(TextDirective, {descendants: true})` it will see `c` too.\n *\n * The queried directives are kept in a depth-first pre-order with respect to their\n * positions in the DOM.\n *\n * Query does not look deep into any subcomponent views.\n *\n * Query is updated as part of the change-detection cycle. Since change detection\n * happens after construction of a directive, QueryList will always be empty when observed in the\n * constructor.\n *\n * The injected object is an unmodifiable live list.\n * See {@link QueryList} for more details.\n */\nvar QueryMetadata = (function (_super) {\n    __extends(QueryMetadata, _super);\n    function QueryMetadata(_selector, _a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.descendants, descendants = _c === void 0 ? false : _c, _d = _b.first, first = _d === void 0 ? false : _d;\n        var _this = _super.call(this) || this;\n        _this._selector = _selector;\n        _this.descendants = descendants;\n        _this.first = first;\n        return _this;\n    }\n    Object.defineProperty(QueryMetadata.prototype, \"isViewQuery\", {\n        /**\n         * always `false` to differentiate it with {@link ViewQueryMetadata}.\n         */\n        get: function () { return false; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryMetadata.prototype, \"selector\", {\n        /**\n         * what this is querying for.\n         */\n        get: function () { return forward_ref_1.resolveForwardRef(this._selector); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryMetadata.prototype, \"isVarBindingQuery\", {\n        /**\n         * whether this is querying for a variable binding or a directive.\n         */\n        get: function () { return lang_1.isString(this.selector); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryMetadata.prototype, \"varBindings\", {\n        /**\n         * returns a list of variable bindings this is querying for.\n         * Only applicable if this is a variable bindings query.\n         */\n        get: function () {\n            return this.isVarBindingQuery\n                ? this.selector.split(',')\n                : [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    QueryMetadata.prototype.toString = function () { return \"@Query(\" + lang_1.stringify(this.selector) + \")\"; };\n    return QueryMetadata;\n}(metadata_1.DependencyMetadata));\nexports.QueryMetadata = QueryMetadata;\n/**\n * Configures a content query.\n *\n * Content queries are set before the `ngAfterContentInit` callback is called.\n *\n * ### Example\n *\n * ```\n * @Directive({\n *   selector: 'someDir'\n * })\n * class SomeDir {\n *   @ContentChildren(ChildDirective) contentChildren: QueryList<ChildDirective>;\n *\n *   ngAfterContentInit() {\n *     // contentChildren is set\n *   }\n * }\n * ```\n */\nvar ContentChildrenMetadata = (function (_super) {\n    __extends(ContentChildrenMetadata, _super);\n    function ContentChildrenMetadata(_selector, _a) {\n        var _b = (_a === void 0 ? {} : _a).descendants, descendants = _b === void 0 ? false : _b;\n        return _super.call(this, _selector, { descendants: descendants }) || this;\n    }\n    return ContentChildrenMetadata;\n}(QueryMetadata));\nexports.ContentChildrenMetadata = ContentChildrenMetadata;\n/**\n * Configures a content query.\n *\n * Content queries are set before the `ngAfterContentInit` callback is called.\n *\n * ### Example\n *\n * ```\n * @Directive({\n *   selector: 'someDir'\n * })\n * class SomeDir {\n *   @ContentChild(ChildDirective) contentChild;\n *\n *   ngAfterContentInit() {\n *     // contentChild is set\n *   }\n * }\n * ```\n */\nvar ContentChildMetadata = (function (_super) {\n    __extends(ContentChildMetadata, _super);\n    function ContentChildMetadata(_selector) {\n        return _super.call(this, _selector, { descendants: true, first: true }) || this;\n    }\n    return ContentChildMetadata;\n}(QueryMetadata));\nexports.ContentChildMetadata = ContentChildMetadata;\n/**\n * Similar to {@link QueryMetadata}, but querying the component view, instead of\n * the content children.\n *\n * ### Example ([live demo](http://plnkr.co/edit/eNsFHDf7YjyM6IzKxM1j?p=preview))\n *\n * ```javascript\n * @Component({...})\n * @View({\n *   template: `\n *     <item> a </item>\n *     <item> b </item>\n *     <item> c </item>\n *   `\n * })\n * class MyComponent {\n *   shown: boolean;\n *\n *   constructor(private @Query(Item) items:QueryList<Item>) {\n *     items.onChange(() => console.log(items.length));\n *   }\n * }\n * ```\n *\n * Supports the same querying parameters as {@link QueryMetadata}, except\n * `descendants`. This always queries the whole view.\n *\n * As `shown` is flipped between true and false, items will contain zero of one\n * items.\n *\n * Specifies that a {@link QueryList} should be injected.\n *\n * The injected object is an iterable and observable live list.\n * See {@link QueryList} for more details.\n */\nvar ViewQueryMetadata = (function (_super) {\n    __extends(ViewQueryMetadata, _super);\n    function ViewQueryMetadata(_selector, _a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.descendants, descendants = _c === void 0 ? false : _c, _d = _b.first, first = _d === void 0 ? false : _d;\n        return _super.call(this, _selector, { descendants: descendants, first: first }) || this;\n    }\n    Object.defineProperty(ViewQueryMetadata.prototype, \"isViewQuery\", {\n        /**\n         * always `true` to differentiate it with {@link QueryMetadata}.\n         */\n        get: function () { return true; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewQueryMetadata.prototype.toString = function () { return \"@ViewQuery(\" + lang_1.stringify(this.selector) + \")\"; };\n    return ViewQueryMetadata;\n}(QueryMetadata));\nexports.ViewQueryMetadata = ViewQueryMetadata;\n/**\n * Configures a view query.\n *\n * View queries are set before the `ngAfterViewInit` callback is called.\n *\n * ### Example\n *\n * ```\n * @Component({\n *   selector: 'someDir',\n *   templateUrl: 'someTemplate',\n *   directives: [ItemDirective]\n * })\n * class SomeDir {\n *   @ViewChildren(ItemDirective) viewChildren: QueryList<ItemDirective>;\n *\n *   ngAfterViewInit() {\n *     // viewChildren is set\n *   }\n * }\n * ```\n */\nvar ViewChildrenMetadata = (function (_super) {\n    __extends(ViewChildrenMetadata, _super);\n    function ViewChildrenMetadata(_selector) {\n        return _super.call(this, _selector, { descendants: true }) || this;\n    }\n    return ViewChildrenMetadata;\n}(ViewQueryMetadata));\nexports.ViewChildrenMetadata = ViewChildrenMetadata;\n/**\n * Configures a view query.\n *\n * View queries are set before the `ngAfterViewInit` callback is called.\n *\n * ### Example\n *\n * ```\n * @Component({\n *   selector: 'someDir',\n *   templateUrl: 'someTemplate',\n *   directives: [ItemDirective]\n * })\n * class SomeDir {\n *   @ViewChild(ItemDirective) viewChild:ItemDirective;\n *\n *   ngAfterViewInit() {\n *     // viewChild is set\n *   }\n * }\n * ```\n */\nvar ViewChildMetadata = (function (_super) {\n    __extends(ViewChildMetadata, _super);\n    function ViewChildMetadata(_selector) {\n        return _super.call(this, _selector, { descendants: true, first: true }) || this;\n    }\n    return ViewChildMetadata;\n}(ViewQueryMetadata));\nexports.ViewChildMetadata = ViewChildMetadata;\n//# sourceMappingURL=metadata_di.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 9 */
/* unknown exports provided */
/* all exports used */
/*!***************************************************!*\
  !*** ./~/ng-metadata/src/core/util/decorators.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar reflection_1 = __webpack_require__(/*! ../reflection/reflection */ 4);\nvar metadata_1 = __webpack_require__(/*! ../di/metadata */ 2);\nvar key_1 = __webpack_require__(/*! ../di/key */ 41);\nfunction makeDecorator(AnnotationCls, chainFn) {\n    if (chainFn === void 0) { chainFn = null; }\n    function DecoratorFactory(objOrType) {\n        var annotationInstance = new AnnotationCls(objOrType);\n        if (this instanceof AnnotationCls) {\n            return annotationInstance;\n        }\n        else {\n            //var chainAnnotation = isFunction( this ) && this.annotations instanceof Array\n            //  ? this.annotations\n            //  : [];\n            //chainAnnotation.push(annotationInstance);\n            if (chainFn) {\n                chainFn(TypeDecorator);\n            }\n            return TypeDecorator;\n        }\n        function TypeDecorator(cls) {\n            /**\n             * here we are creating generated name for Services\n             * so we can acquire the key for AngularJS DI\n             * and we have unique names after mangling our JS\n             */\n            if (annotationInstance instanceof metadata_1.InjectableMetadata) {\n                // set id if it was explicitly provided by user @Injectable('mySvc') otherwise generate\n                annotationInstance.id = annotationInstance.id || key_1.globalKeyRegistry.get(cls);\n            }\n            var annotations = reflection_1.reflector.ownAnnotations(cls);\n            annotations = annotations || [];\n            annotations.push(annotationInstance);\n            reflection_1.reflector.registerAnnotations(annotations, cls);\n            return cls;\n        }\n    }\n    DecoratorFactory.prototype = Object.create(AnnotationCls.prototype);\n    return DecoratorFactory;\n}\nexports.makeDecorator = makeDecorator;\nfunction makeParamDecorator(annotationCls, overrideParamDecorator) {\n    if (overrideParamDecorator === void 0) { overrideParamDecorator = null; }\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // create new annotation instance with annotation decorator on proto\n        var annotationInstance = Object.create(annotationCls.prototype);\n        annotationCls.apply(annotationInstance, args);\n        if (this instanceof annotationCls) {\n            return annotationInstance;\n        }\n        else {\n            //(ParamDecorator as any).annotation = annotationInstance;\n            return ParamDecorator;\n        }\n        /**\n         * paramDecorators are 2 dimensional arrays\n         * @param cls\n         * @param unusedKey\n         * @param index\n         * @returns {any}\n         * @constructor\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // this is special behaviour for non constructor param Injection\n            if (lang_1.isFunction(overrideParamDecorator) && lang_1.isPresent(unusedKey)) {\n                return overrideParamDecorator(annotationInstance, cls, unusedKey, index);\n            }\n            var parameters = reflection_1.reflector.rawParameters(cls);\n            parameters = parameters || [];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            parameters[index] = parameters[index] || [];\n            var annotationsForParam = parameters[index];\n            annotationsForParam.push(annotationInstance);\n            reflection_1.reflector.registerParameters(parameters, cls);\n            return cls;\n        }\n    }\n    ParamDecoratorFactory.prototype = Object.create(annotationCls.prototype);\n    return ParamDecoratorFactory;\n}\nexports.makeParamDecorator = makeParamDecorator;\nfunction makePropDecorator(decoratorCls) {\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var decoratorInstance = Object.create(decoratorCls.prototype);\n        decoratorCls.apply(decoratorInstance, args);\n        // check if this decorator was already invoked\n        // - if it was return it again, just with newly applied arguments\n        // - this is possible thanks to PropDecoratorFactory.prototype = Object.create(decoratorCls.prototype);\n        if (this instanceof decoratorCls) {\n            return decoratorInstance;\n        }\n        else {\n            return function PropDecorator(target, name) {\n                var meta = reflection_1.reflector.ownPropMetadata(target.constructor);\n                meta = meta || {};\n                meta[name] = meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                reflection_1.reflector.registerPropMetadata(meta, target.constructor);\n            };\n        }\n    }\n    // caching\n    PropDecoratorFactory.prototype = Object.create(decoratorCls.prototype);\n    return PropDecoratorFactory;\n}\nexports.makePropDecorator = makePropDecorator;\n//# sourceMappingURL=decorators.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 10 */
/* unknown exports provided */
/* all exports used */
/*!*******************************!*\
  !*** ./~/ng-metadata/core.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./src/core/di */ 40));\nvar util_1 = __webpack_require__(/*! ./src/core/util */ 62);\nexports.bundle = util_1.bundle;\nvar directives_1 = __webpack_require__(/*! ./src/core/directives */ 43);\nexports.Directive = directives_1.Directive;\nexports.Component = directives_1.Component;\nexports.NgModule = directives_1.NgModule;\nexports.Attr = directives_1.Attr;\nexports.Input = directives_1.Input;\nexports.Output = directives_1.Output;\nexports.HostBinding = directives_1.HostBinding;\nexports.HostListener = directives_1.HostListener;\nexports.ViewChild = directives_1.ViewChild;\nexports.ViewChildren = directives_1.ViewChildren;\nexports.ContentChild = directives_1.ContentChild;\nexports.ContentChildren = directives_1.ContentChildren;\nvar pipes_1 = __webpack_require__(/*! ./src/core/pipes */ 56);\nexports.Pipe = pipes_1.Pipe;\n__export(__webpack_require__(/*! ./src/core/change_detection */ 37));\nvar lang_1 = __webpack_require__(/*! ./src/facade/lang */ 0);\nexports.enableProdMode = lang_1.enableProdMode;\nvar facade_1 = __webpack_require__(/*! ./src/facade/facade */ 63);\nexports.EventEmitter = facade_1.EventEmitter;\n//# sourceMappingURL=core.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL2NvcmUuanM/NDlmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9zcmMvY29yZS9kaVwiKSk7XG52YXIgdXRpbF8xID0gcmVxdWlyZShcIi4vc3JjL2NvcmUvdXRpbFwiKTtcbmV4cG9ydHMuYnVuZGxlID0gdXRpbF8xLmJ1bmRsZTtcbnZhciBkaXJlY3RpdmVzXzEgPSByZXF1aXJlKFwiLi9zcmMvY29yZS9kaXJlY3RpdmVzXCIpO1xuZXhwb3J0cy5EaXJlY3RpdmUgPSBkaXJlY3RpdmVzXzEuRGlyZWN0aXZlO1xuZXhwb3J0cy5Db21wb25lbnQgPSBkaXJlY3RpdmVzXzEuQ29tcG9uZW50O1xuZXhwb3J0cy5OZ01vZHVsZSA9IGRpcmVjdGl2ZXNfMS5OZ01vZHVsZTtcbmV4cG9ydHMuQXR0ciA9IGRpcmVjdGl2ZXNfMS5BdHRyO1xuZXhwb3J0cy5JbnB1dCA9IGRpcmVjdGl2ZXNfMS5JbnB1dDtcbmV4cG9ydHMuT3V0cHV0ID0gZGlyZWN0aXZlc18xLk91dHB1dDtcbmV4cG9ydHMuSG9zdEJpbmRpbmcgPSBkaXJlY3RpdmVzXzEuSG9zdEJpbmRpbmc7XG5leHBvcnRzLkhvc3RMaXN0ZW5lciA9IGRpcmVjdGl2ZXNfMS5Ib3N0TGlzdGVuZXI7XG5leHBvcnRzLlZpZXdDaGlsZCA9IGRpcmVjdGl2ZXNfMS5WaWV3Q2hpbGQ7XG5leHBvcnRzLlZpZXdDaGlsZHJlbiA9IGRpcmVjdGl2ZXNfMS5WaWV3Q2hpbGRyZW47XG5leHBvcnRzLkNvbnRlbnRDaGlsZCA9IGRpcmVjdGl2ZXNfMS5Db250ZW50Q2hpbGQ7XG5leHBvcnRzLkNvbnRlbnRDaGlsZHJlbiA9IGRpcmVjdGl2ZXNfMS5Db250ZW50Q2hpbGRyZW47XG52YXIgcGlwZXNfMSA9IHJlcXVpcmUoXCIuL3NyYy9jb3JlL3BpcGVzXCIpO1xuZXhwb3J0cy5QaXBlID0gcGlwZXNfMS5QaXBlO1xuX19leHBvcnQocmVxdWlyZShcIi4vc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvblwiKSk7XG52YXIgbGFuZ18xID0gcmVxdWlyZShcIi4vc3JjL2ZhY2FkZS9sYW5nXCIpO1xuZXhwb3J0cy5lbmFibGVQcm9kTW9kZSA9IGxhbmdfMS5lbmFibGVQcm9kTW9kZTtcbnZhciBmYWNhZGVfMSA9IHJlcXVpcmUoXCIuL3NyYy9mYWNhZGUvZmFjYWRlXCIpO1xuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBmYWNhZGVfMS5FdmVudEVtaXR0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb3JlLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9jb3JlLmpzXG4vLyBtb2R1bGUgaWQgPSAxMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 11 */
/* unknown exports provided */
/* all exports used */
/*!*************************************************!*\
  !*** ./~/ng-metadata/src/core/di/decorators.js ***!
  \*************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar metadata_1 = __webpack_require__(/*! ./metadata */ 2);\nvar decorators_1 = __webpack_require__(/*! ../util/decorators */ 9);\n/**\n * Factory for creating {@link InjectMetadata}.\n */\nexports.Inject = decorators_1.makeParamDecorator(metadata_1.InjectMetadata, metadata_1.InjectMetadata.paramDecoratorForNonConstructor);\n/**\n * Factory for creating {@link OptionalMetadata}.\n */\nexports.Optional = decorators_1.makeParamDecorator(metadata_1.OptionalMetadata);\n/**\n * Factory for creating {@link InjectableMetadata}.\n */\nexports.Injectable = decorators_1.makeDecorator(metadata_1.InjectableMetadata);\n/**\n * Factory for creating {@link SelfMetadata}.\n */\nexports.Self = decorators_1.makeParamDecorator(metadata_1.SelfMetadata);\n/**\n * Factory for creating {@link HostMetadata}.\n */\nexports.Host = decorators_1.makeParamDecorator(metadata_1.HostMetadata);\n/**\n * Factory for creating {@link SkipSelfMetadata}.\n */\nexports.SkipSelf = decorators_1.makeParamDecorator(metadata_1.SkipSelfMetadata);\n//# sourceMappingURL=decorators.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpL2RlY29yYXRvcnMuanM/MmIwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBtZXRhZGF0YV8xID0gcmVxdWlyZShcIi4vbWV0YWRhdGFcIik7XG52YXIgZGVjb3JhdG9yc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZGVjb3JhdG9yc1wiKTtcbi8qKlxuICogRmFjdG9yeSBmb3IgY3JlYXRpbmcge0BsaW5rIEluamVjdE1ldGFkYXRhfS5cbiAqL1xuZXhwb3J0cy5JbmplY3QgPSBkZWNvcmF0b3JzXzEubWFrZVBhcmFtRGVjb3JhdG9yKG1ldGFkYXRhXzEuSW5qZWN0TWV0YWRhdGEsIG1ldGFkYXRhXzEuSW5qZWN0TWV0YWRhdGEucGFyYW1EZWNvcmF0b3JGb3JOb25Db25zdHJ1Y3Rvcik7XG4vKipcbiAqIEZhY3RvcnkgZm9yIGNyZWF0aW5nIHtAbGluayBPcHRpb25hbE1ldGFkYXRhfS5cbiAqL1xuZXhwb3J0cy5PcHRpb25hbCA9IGRlY29yYXRvcnNfMS5tYWtlUGFyYW1EZWNvcmF0b3IobWV0YWRhdGFfMS5PcHRpb25hbE1ldGFkYXRhKTtcbi8qKlxuICogRmFjdG9yeSBmb3IgY3JlYXRpbmcge0BsaW5rIEluamVjdGFibGVNZXRhZGF0YX0uXG4gKi9cbmV4cG9ydHMuSW5qZWN0YWJsZSA9IGRlY29yYXRvcnNfMS5tYWtlRGVjb3JhdG9yKG1ldGFkYXRhXzEuSW5qZWN0YWJsZU1ldGFkYXRhKTtcbi8qKlxuICogRmFjdG9yeSBmb3IgY3JlYXRpbmcge0BsaW5rIFNlbGZNZXRhZGF0YX0uXG4gKi9cbmV4cG9ydHMuU2VsZiA9IGRlY29yYXRvcnNfMS5tYWtlUGFyYW1EZWNvcmF0b3IobWV0YWRhdGFfMS5TZWxmTWV0YWRhdGEpO1xuLyoqXG4gKiBGYWN0b3J5IGZvciBjcmVhdGluZyB7QGxpbmsgSG9zdE1ldGFkYXRhfS5cbiAqL1xuZXhwb3J0cy5Ib3N0ID0gZGVjb3JhdG9yc18xLm1ha2VQYXJhbURlY29yYXRvcihtZXRhZGF0YV8xLkhvc3RNZXRhZGF0YSk7XG4vKipcbiAqIEZhY3RvcnkgZm9yIGNyZWF0aW5nIHtAbGluayBTa2lwU2VsZk1ldGFkYXRhfS5cbiAqL1xuZXhwb3J0cy5Ta2lwU2VsZiA9IGRlY29yYXRvcnNfMS5tYWtlUGFyYW1EZWNvcmF0b3IobWV0YWRhdGFfMS5Ta2lwU2VsZk1ldGFkYXRhKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29yYXRvcnMuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpL2RlY29yYXRvcnMuanNcbi8vIG1vZHVsZSBpZCA9IDExXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 12 */
/* unknown exports provided */
/* all exports used */
/*!***************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/directives_utils.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar metadata_directives_1 = __webpack_require__(/*! ./metadata_directives */ 3);\n/**\n * use #isDirective instead\n * @deprecated\n */\nfunction isAttrDirective(metadata) {\n    return metadata instanceof metadata_directives_1.DirectiveMetadata && !(metadata instanceof metadata_directives_1.ComponentMetadata);\n}\nexports.isAttrDirective = isAttrDirective;\n/**\n * use #isComponent instead\n * @deprecated\n */\nfunction isComponentDirective(metadata) {\n    return metadata instanceof metadata_directives_1.ComponentMetadata;\n}\nexports.isComponentDirective = isComponentDirective;\n/**\n *\n * @param scope\n * @param element\n * @param ctrl\n * @param implementsNgOnDestroy\n * @param watchersToDispose\n * @param observersToDispose\n * @private\n */\nfunction _setupDestroyHandler(scope, element, ctrl, implementsNgOnDestroy, watchersToDispose, observersToDispose) {\n    if (watchersToDispose === void 0) { watchersToDispose = []; }\n    if (observersToDispose === void 0) { observersToDispose = []; }\n    scope.$on('$destroy', function () {\n        if (implementsNgOnDestroy) {\n            ctrl.ngOnDestroy();\n        }\n        watchersToDispose.forEach(function (_watcherDispose) { return _watcherDispose(); });\n        observersToDispose.forEach(function (_observerDispose) { return _observerDispose(); });\n    });\n}\nexports._setupDestroyHandler = _setupDestroyHandler;\n//# sourceMappingURL=directives_utils.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvZGlyZWN0aXZlc191dGlscy5qcz9kYTFmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIG1ldGFkYXRhX2RpcmVjdGl2ZXNfMSA9IHJlcXVpcmUoXCIuL21ldGFkYXRhX2RpcmVjdGl2ZXNcIik7XG4vKipcbiAqIHVzZSAjaXNEaXJlY3RpdmUgaW5zdGVhZFxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZnVuY3Rpb24gaXNBdHRyRGlyZWN0aXZlKG1ldGFkYXRhKSB7XG4gICAgcmV0dXJuIG1ldGFkYXRhIGluc3RhbmNlb2YgbWV0YWRhdGFfZGlyZWN0aXZlc18xLkRpcmVjdGl2ZU1ldGFkYXRhICYmICEobWV0YWRhdGEgaW5zdGFuY2VvZiBtZXRhZGF0YV9kaXJlY3RpdmVzXzEuQ29tcG9uZW50TWV0YWRhdGEpO1xufVxuZXhwb3J0cy5pc0F0dHJEaXJlY3RpdmUgPSBpc0F0dHJEaXJlY3RpdmU7XG4vKipcbiAqIHVzZSAjaXNDb21wb25lbnQgaW5zdGVhZFxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZnVuY3Rpb24gaXNDb21wb25lbnREaXJlY3RpdmUobWV0YWRhdGEpIHtcbiAgICByZXR1cm4gbWV0YWRhdGEgaW5zdGFuY2VvZiBtZXRhZGF0YV9kaXJlY3RpdmVzXzEuQ29tcG9uZW50TWV0YWRhdGE7XG59XG5leHBvcnRzLmlzQ29tcG9uZW50RGlyZWN0aXZlID0gaXNDb21wb25lbnREaXJlY3RpdmU7XG4vKipcbiAqXG4gKiBAcGFyYW0gc2NvcGVcbiAqIEBwYXJhbSBlbGVtZW50XG4gKiBAcGFyYW0gY3RybFxuICogQHBhcmFtIGltcGxlbWVudHNOZ09uRGVzdHJveVxuICogQHBhcmFtIHdhdGNoZXJzVG9EaXNwb3NlXG4gKiBAcGFyYW0gb2JzZXJ2ZXJzVG9EaXNwb3NlXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBfc2V0dXBEZXN0cm95SGFuZGxlcihzY29wZSwgZWxlbWVudCwgY3RybCwgaW1wbGVtZW50c05nT25EZXN0cm95LCB3YXRjaGVyc1RvRGlzcG9zZSwgb2JzZXJ2ZXJzVG9EaXNwb3NlKSB7XG4gICAgaWYgKHdhdGNoZXJzVG9EaXNwb3NlID09PSB2b2lkIDApIHsgd2F0Y2hlcnNUb0Rpc3Bvc2UgPSBbXTsgfVxuICAgIGlmIChvYnNlcnZlcnNUb0Rpc3Bvc2UgPT09IHZvaWQgMCkgeyBvYnNlcnZlcnNUb0Rpc3Bvc2UgPSBbXTsgfVxuICAgIHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpbXBsZW1lbnRzTmdPbkRlc3Ryb3kpIHtcbiAgICAgICAgICAgIGN0cmwubmdPbkRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgICAgICB3YXRjaGVyc1RvRGlzcG9zZS5mb3JFYWNoKGZ1bmN0aW9uIChfd2F0Y2hlckRpc3Bvc2UpIHsgcmV0dXJuIF93YXRjaGVyRGlzcG9zZSgpOyB9KTtcbiAgICAgICAgb2JzZXJ2ZXJzVG9EaXNwb3NlLmZvckVhY2goZnVuY3Rpb24gKF9vYnNlcnZlckRpc3Bvc2UpIHsgcmV0dXJuIF9vYnNlcnZlckRpc3Bvc2UoKTsgfSk7XG4gICAgfSk7XG59XG5leHBvcnRzLl9zZXR1cERlc3Ryb3lIYW5kbGVyID0gX3NldHVwRGVzdHJveUhhbmRsZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaXJlY3RpdmVzX3V0aWxzLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9kaXJlY3RpdmVzL2RpcmVjdGl2ZXNfdXRpbHMuanNcbi8vIG1vZHVsZSBpZCA9IDEyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 13 */
/* unknown exports provided */
/* all exports used */
/*!*************************************************************************!*\
  !*** ./~/ng-metadata/src/core/linker/directive_lifecycle_interfaces.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar LifecycleHooks;\n(function (LifecycleHooks) {\n    LifecycleHooks[LifecycleHooks[\"OnInit\"] = 0] = \"OnInit\";\n    LifecycleHooks[LifecycleHooks[\"OnDestroy\"] = 1] = \"OnDestroy\";\n    LifecycleHooks[LifecycleHooks[\"DoCheck\"] = 2] = \"DoCheck\";\n    LifecycleHooks[LifecycleHooks[\"OnChanges\"] = 3] = \"OnChanges\";\n    LifecycleHooks[LifecycleHooks[\"AfterContentInit\"] = 4] = \"AfterContentInit\";\n    LifecycleHooks[LifecycleHooks[\"AfterContentChecked\"] = 5] = \"AfterContentChecked\";\n    LifecycleHooks[LifecycleHooks[\"AfterViewInit\"] = 6] = \"AfterViewInit\";\n    LifecycleHooks[LifecycleHooks[\"AfterViewChecked\"] = 7] = \"AfterViewChecked\";\n    LifecycleHooks[LifecycleHooks[\"_OnChildrenChanged\"] = 8] = \"_OnChildrenChanged\";\n})(LifecycleHooks = exports.LifecycleHooks || (exports.LifecycleHooks = {}));\n/**\n * @internal\n */\nexports.LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit,\n    LifecycleHooks.OnDestroy,\n    LifecycleHooks.DoCheck,\n    LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit,\n    LifecycleHooks.AfterContentChecked,\n    LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked,\n    LifecycleHooks._OnChildrenChanged\n];\nvar ChildrenChangeHook;\n(function (ChildrenChangeHook) {\n    ChildrenChangeHook[ChildrenChangeHook[\"FromView\"] = 0] = \"FromView\";\n    ChildrenChangeHook[ChildrenChangeHook[\"FromContent\"] = 1] = \"FromContent\";\n})(ChildrenChangeHook = exports.ChildrenChangeHook || (exports.ChildrenChangeHook = {}));\n//# sourceMappingURL=directive_lifecycle_interfaces.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2xpbmtlci9kaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXMuanM/ZDg5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBMaWZlY3ljbGVIb29rcztcbihmdW5jdGlvbiAoTGlmZWN5Y2xlSG9va3MpIHtcbiAgICBMaWZlY3ljbGVIb29rc1tMaWZlY3ljbGVIb29rc1tcIk9uSW5pdFwiXSA9IDBdID0gXCJPbkluaXRcIjtcbiAgICBMaWZlY3ljbGVIb29rc1tMaWZlY3ljbGVIb29rc1tcIk9uRGVzdHJveVwiXSA9IDFdID0gXCJPbkRlc3Ryb3lcIjtcbiAgICBMaWZlY3ljbGVIb29rc1tMaWZlY3ljbGVIb29rc1tcIkRvQ2hlY2tcIl0gPSAyXSA9IFwiRG9DaGVja1wiO1xuICAgIExpZmVjeWNsZUhvb2tzW0xpZmVjeWNsZUhvb2tzW1wiT25DaGFuZ2VzXCJdID0gM10gPSBcIk9uQ2hhbmdlc1wiO1xuICAgIExpZmVjeWNsZUhvb2tzW0xpZmVjeWNsZUhvb2tzW1wiQWZ0ZXJDb250ZW50SW5pdFwiXSA9IDRdID0gXCJBZnRlckNvbnRlbnRJbml0XCI7XG4gICAgTGlmZWN5Y2xlSG9va3NbTGlmZWN5Y2xlSG9va3NbXCJBZnRlckNvbnRlbnRDaGVja2VkXCJdID0gNV0gPSBcIkFmdGVyQ29udGVudENoZWNrZWRcIjtcbiAgICBMaWZlY3ljbGVIb29rc1tMaWZlY3ljbGVIb29rc1tcIkFmdGVyVmlld0luaXRcIl0gPSA2XSA9IFwiQWZ0ZXJWaWV3SW5pdFwiO1xuICAgIExpZmVjeWNsZUhvb2tzW0xpZmVjeWNsZUhvb2tzW1wiQWZ0ZXJWaWV3Q2hlY2tlZFwiXSA9IDddID0gXCJBZnRlclZpZXdDaGVja2VkXCI7XG4gICAgTGlmZWN5Y2xlSG9va3NbTGlmZWN5Y2xlSG9va3NbXCJfT25DaGlsZHJlbkNoYW5nZWRcIl0gPSA4XSA9IFwiX09uQ2hpbGRyZW5DaGFuZ2VkXCI7XG59KShMaWZlY3ljbGVIb29rcyA9IGV4cG9ydHMuTGlmZWN5Y2xlSG9va3MgfHwgKGV4cG9ydHMuTGlmZWN5Y2xlSG9va3MgPSB7fSkpO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0cy5MSUZFQ1lDTEVfSE9PS1NfVkFMVUVTID0gW1xuICAgIExpZmVjeWNsZUhvb2tzLk9uSW5pdCxcbiAgICBMaWZlY3ljbGVIb29rcy5PbkRlc3Ryb3ksXG4gICAgTGlmZWN5Y2xlSG9va3MuRG9DaGVjayxcbiAgICBMaWZlY3ljbGVIb29rcy5PbkNoYW5nZXMsXG4gICAgTGlmZWN5Y2xlSG9va3MuQWZ0ZXJDb250ZW50SW5pdCxcbiAgICBMaWZlY3ljbGVIb29rcy5BZnRlckNvbnRlbnRDaGVja2VkLFxuICAgIExpZmVjeWNsZUhvb2tzLkFmdGVyVmlld0luaXQsXG4gICAgTGlmZWN5Y2xlSG9va3MuQWZ0ZXJWaWV3Q2hlY2tlZCxcbiAgICBMaWZlY3ljbGVIb29rcy5fT25DaGlsZHJlbkNoYW5nZWRcbl07XG52YXIgQ2hpbGRyZW5DaGFuZ2VIb29rO1xuKGZ1bmN0aW9uIChDaGlsZHJlbkNoYW5nZUhvb2spIHtcbiAgICBDaGlsZHJlbkNoYW5nZUhvb2tbQ2hpbGRyZW5DaGFuZ2VIb29rW1wiRnJvbVZpZXdcIl0gPSAwXSA9IFwiRnJvbVZpZXdcIjtcbiAgICBDaGlsZHJlbkNoYW5nZUhvb2tbQ2hpbGRyZW5DaGFuZ2VIb29rW1wiRnJvbUNvbnRlbnRcIl0gPSAxXSA9IFwiRnJvbUNvbnRlbnRcIjtcbn0pKENoaWxkcmVuQ2hhbmdlSG9vayA9IGV4cG9ydHMuQ2hpbGRyZW5DaGFuZ2VIb29rIHx8IChleHBvcnRzLkNoaWxkcmVuQ2hhbmdlSG9vayA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXMuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2xpbmtlci9kaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXMuanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 14 */
/* unknown exports provided */
/* all exports used */
/*!**************************************************!*\
  !*** ./~/ng-metadata/src/core/pipes/metadata.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar metadata_1 = __webpack_require__(/*! ../di/metadata */ 2);\n/**\n * Declare reusable pipe function.\n *\n * A \"pure\" pipe is only re-evaluated when either the input or any of the arguments change.\n *\n * When not specified, pipes default to being pure.\n *\n * ### Example\n *\n * {@example core/ts/metadata/metadata.ts region='pipe'}\n */\nvar PipeMetadata = (function (_super) {\n    __extends(PipeMetadata, _super);\n    function PipeMetadata(_a) {\n        var name = _a.name, pure = _a.pure;\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this._pure = pure;\n        return _this;\n    }\n    Object.defineProperty(PipeMetadata.prototype, \"pure\", {\n        get: function () { return lang_1.isPresent(this._pure) ? this._pure : true; },\n        enumerable: true,\n        configurable: true\n    });\n    return PipeMetadata;\n}(metadata_1.InjectableMetadata));\nexports.PipeMetadata = PipeMetadata;\n//# sourceMappingURL=metadata.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3BpcGVzL21ldGFkYXRhLmpzPzJhZGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07XG4gICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xufTtcbnZhciBsYW5nXzEgPSByZXF1aXJlKFwiLi4vLi4vZmFjYWRlL2xhbmdcIik7XG52YXIgbWV0YWRhdGFfMSA9IHJlcXVpcmUoXCIuLi9kaS9tZXRhZGF0YVwiKTtcbi8qKlxuICogRGVjbGFyZSByZXVzYWJsZSBwaXBlIGZ1bmN0aW9uLlxuICpcbiAqIEEgXCJwdXJlXCIgcGlwZSBpcyBvbmx5IHJlLWV2YWx1YXRlZCB3aGVuIGVpdGhlciB0aGUgaW5wdXQgb3IgYW55IG9mIHRoZSBhcmd1bWVudHMgY2hhbmdlLlxuICpcbiAqIFdoZW4gbm90IHNwZWNpZmllZCwgcGlwZXMgZGVmYXVsdCB0byBiZWluZyBwdXJlLlxuICpcbiAqICMjIyBFeGFtcGxlXG4gKlxuICoge0BleGFtcGxlIGNvcmUvdHMvbWV0YWRhdGEvbWV0YWRhdGEudHMgcmVnaW9uPSdwaXBlJ31cbiAqL1xudmFyIFBpcGVNZXRhZGF0YSA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFBpcGVNZXRhZGF0YSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBQaXBlTWV0YWRhdGEoX2EpIHtcbiAgICAgICAgdmFyIG5hbWUgPSBfYS5uYW1lLCBwdXJlID0gX2EucHVyZTtcbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcykgfHwgdGhpcztcbiAgICAgICAgX3RoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIF90aGlzLl9wdXJlID0gcHVyZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUGlwZU1ldGFkYXRhLnByb3RvdHlwZSwgXCJwdXJlXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsYW5nXzEuaXNQcmVzZW50KHRoaXMuX3B1cmUpID8gdGhpcy5fcHVyZSA6IHRydWU7IH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBQaXBlTWV0YWRhdGE7XG59KG1ldGFkYXRhXzEuSW5qZWN0YWJsZU1ldGFkYXRhKSk7XG5leHBvcnRzLlBpcGVNZXRhZGF0YSA9IFBpcGVNZXRhZGF0YTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ldGFkYXRhLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9waXBlcy9tZXRhZGF0YS5qc1xuLy8gbW9kdWxlIGlkID0gMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 15 */
/* unknown exports provided */
/* all exports used */
/*!********************************!*\
  !*** ./~/rxjs/Subscription.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar isArray_1 = __webpack_require__(/*! ./util/isArray */ 73);\nvar isObject_1 = __webpack_require__(/*! ./util/isObject */ 74);\nvar isFunction_1 = __webpack_require__(/*! ./util/isFunction */ 30);\nvar tryCatch_1 = __webpack_require__(/*! ./util/tryCatch */ 76);\nvar errorObject_1 = __webpack_require__(/*! ./util/errorObject */ 29);\nvar UnsubscriptionError_1 = __webpack_require__(/*! ./util/UnsubscriptionError */ 72);\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject_1.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors) : [errorObject_1.errorObject.e]);\n            }\n        }\n        if (isArray_1.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject_1.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject_1.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexports.Subscription = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 16 */
/* unknown exports provided */
/* all exports used */
/*!***************************************!*\
  !*** ./~/rxjs/symbol/rxSubscriber.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar root_1 = __webpack_require__(/*! ../util/root */ 17);\nvar Symbol = root_1.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvc3ltYm9sL3J4U3Vic2NyaWJlci5qcz8xMTJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIHJvb3RfMSA9IHJlcXVpcmUoJy4uL3V0aWwvcm9vdCcpO1xudmFyIFN5bWJvbCA9IHJvb3RfMS5yb290LlN5bWJvbDtcbmV4cG9ydHMucnhTdWJzY3JpYmVyID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbC5mb3IgPT09ICdmdW5jdGlvbicpID9cbiAgICBTeW1ib2wuZm9yKCdyeFN1YnNjcmliZXInKSA6ICdAQHJ4U3Vic2NyaWJlcic7XG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSByeFN1YnNjcmliZXIgaW5zdGVhZFxuICovXG5leHBvcnRzLiQkcnhTdWJzY3JpYmVyID0gZXhwb3J0cy5yeFN1YnNjcmliZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yeFN1YnNjcmliZXIuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvc3ltYm9sL3J4U3Vic2NyaWJlci5qc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 17 */
/* unknown exports provided */
/* all exports used */
/*!*****************************!*\
  !*** ./~/rxjs/util/root.js ***!
  \*****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {\n/**\n * window: browser in DOM main thread\n * self: browser in WebWorker\n * global: Node.js/other\n */\nexports.root = (typeof window == 'object' && window.window === window && window\n    || typeof self == 'object' && self.self === self && self\n    || typeof global == 'object' && global.global === global && global);\nif (!exports.root) {\n    throw new Error('RxJS could not find any global context (window, self, global)');\n}\n//# sourceMappingURL=root.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(/*! ./../../webpack/buildin/global.js */ 31)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC9yb290LmpzPzkzYzMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIHdpbmRvdzogYnJvd3NlciBpbiBET00gbWFpbiB0aHJlYWRcbiAqIHNlbGY6IGJyb3dzZXIgaW4gV2ViV29ya2VyXG4gKiBnbG9iYWw6IE5vZGUuanMvb3RoZXJcbiAqL1xuZXhwb3J0cy5yb290ID0gKHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgJiYgd2luZG93LndpbmRvdyA9PT0gd2luZG93ICYmIHdpbmRvd1xuICAgIHx8IHR5cGVvZiBzZWxmID09ICdvYmplY3QnICYmIHNlbGYuc2VsZiA9PT0gc2VsZiAmJiBzZWxmXG4gICAgfHwgdHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWwuZ2xvYmFsID09PSBnbG9iYWwgJiYgZ2xvYmFsKTtcbmlmICghZXhwb3J0cy5yb290KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdSeEpTIGNvdWxkIG5vdCBmaW5kIGFueSBnbG9iYWwgY29udGV4dCAod2luZG93LCBzZWxmLCBnbG9iYWwpJyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb290LmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9yeGpzL3V0aWwvcm9vdC5qc1xuLy8gbW9kdWxlIGlkID0gMTdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 18 */
/* unknown exports provided */
/* all exports used */
/*!**************************************************************************!*\
  !*** ./~/ng-metadata/src/core/change_detection/change_detection_util.js ***!
  \**************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar UninitializedValue = (function () {\n    function UninitializedValue() {\n    }\n    return UninitializedValue;\n}());\nexports.UninitializedValue = UninitializedValue;\nvar uninitialized = new UninitializedValue();\n/**\n * Represents a basic change from a previous to a new value.\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    SimpleChange.prototype.isFirstChange = function () { return this.previousValue === uninitialized; };\n    return SimpleChange;\n}());\nexports.SimpleChange = SimpleChange;\nvar ChangeDetectionUtil = (function () {\n    function ChangeDetectionUtil() {\n    }\n    ChangeDetectionUtil.simpleChange = function (previousValue, currentValue) {\n        return new SimpleChange(previousValue, currentValue);\n    };\n    ChangeDetectionUtil.isOnPushChangeDetectionStrategy = function (changeDetectionStrategy) {\n        return lang_1.isPresent(changeDetectionStrategy) && changeDetectionStrategy === 0 /* OnPush */;\n    };\n    return ChangeDetectionUtil;\n}());\nChangeDetectionUtil.uninitialized = uninitialized;\nexports.ChangeDetectionUtil = ChangeDetectionUtil;\n//# sourceMappingURL=change_detection_util.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vY2hhbmdlX2RldGVjdGlvbl91dGlsLmpzP2U2ZDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgbGFuZ18xID0gcmVxdWlyZShcIi4uLy4uL2ZhY2FkZS9sYW5nXCIpO1xudmFyIFVuaW5pdGlhbGl6ZWRWYWx1ZSA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gVW5pbml0aWFsaXplZFZhbHVlKCkge1xuICAgIH1cbiAgICByZXR1cm4gVW5pbml0aWFsaXplZFZhbHVlO1xufSgpKTtcbmV4cG9ydHMuVW5pbml0aWFsaXplZFZhbHVlID0gVW5pbml0aWFsaXplZFZhbHVlO1xudmFyIHVuaW5pdGlhbGl6ZWQgPSBuZXcgVW5pbml0aWFsaXplZFZhbHVlKCk7XG4vKipcbiAqIFJlcHJlc2VudHMgYSBiYXNpYyBjaGFuZ2UgZnJvbSBhIHByZXZpb3VzIHRvIGEgbmV3IHZhbHVlLlxuICovXG52YXIgU2ltcGxlQ2hhbmdlID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTaW1wbGVDaGFuZ2UocHJldmlvdXNWYWx1ZSwgY3VycmVudFZhbHVlKSB7XG4gICAgICAgIHRoaXMucHJldmlvdXNWYWx1ZSA9IHByZXZpb3VzVmFsdWU7XG4gICAgICAgIHRoaXMuY3VycmVudFZhbHVlID0gY3VycmVudFZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVjayB3aGV0aGVyIHRoZSBuZXcgdmFsdWUgaXMgdGhlIGZpcnN0IHZhbHVlIGFzc2lnbmVkLlxuICAgICAqL1xuICAgIFNpbXBsZUNoYW5nZS5wcm90b3R5cGUuaXNGaXJzdENoYW5nZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMucHJldmlvdXNWYWx1ZSA9PT0gdW5pbml0aWFsaXplZDsgfTtcbiAgICByZXR1cm4gU2ltcGxlQ2hhbmdlO1xufSgpKTtcbmV4cG9ydHMuU2ltcGxlQ2hhbmdlID0gU2ltcGxlQ2hhbmdlO1xudmFyIENoYW5nZURldGVjdGlvblV0aWwgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIENoYW5nZURldGVjdGlvblV0aWwoKSB7XG4gICAgfVxuICAgIENoYW5nZURldGVjdGlvblV0aWwuc2ltcGxlQ2hhbmdlID0gZnVuY3Rpb24gKHByZXZpb3VzVmFsdWUsIGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICByZXR1cm4gbmV3IFNpbXBsZUNoYW5nZShwcmV2aW91c1ZhbHVlLCBjdXJyZW50VmFsdWUpO1xuICAgIH07XG4gICAgQ2hhbmdlRGV0ZWN0aW9uVXRpbC5pc09uUHVzaENoYW5nZURldGVjdGlvblN0cmF0ZWd5ID0gZnVuY3Rpb24gKGNoYW5nZURldGVjdGlvblN0cmF0ZWd5KSB7XG4gICAgICAgIHJldHVybiBsYW5nXzEuaXNQcmVzZW50KGNoYW5nZURldGVjdGlvblN0cmF0ZWd5KSAmJiBjaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSA9PT0gMCAvKiBPblB1c2ggKi87XG4gICAgfTtcbiAgICByZXR1cm4gQ2hhbmdlRGV0ZWN0aW9uVXRpbDtcbn0oKSk7XG5DaGFuZ2VEZXRlY3Rpb25VdGlsLnVuaW5pdGlhbGl6ZWQgPSB1bmluaXRpYWxpemVkO1xuZXhwb3J0cy5DaGFuZ2VEZXRlY3Rpb25VdGlsID0gQ2hhbmdlRGV0ZWN0aW9uVXRpbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYW5nZV9kZXRlY3Rpb25fdXRpbC5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0aW9uX3V0aWwuanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 19 */
/* unknown exports provided */
/* all exports used */
/*!************************************************************************!*\
  !*** ./~/ng-metadata/src/core/change_detection/change_detector_ref.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar decorators_1 = __webpack_require__(/*! ../di/decorators */ 11);\nvar ChangeDetectorRef = ChangeDetectorRef_1 = (function () {\n    function ChangeDetectorRef($scope) {\n        this.$scope = $scope;\n    }\n    ChangeDetectorRef.create = function ($scope) {\n        return new ChangeDetectorRef_1($scope);\n    };\n    /**\n     * Marks all {@link ChangeDetectionStrategy#OnPush} ancestors as to be checked.\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/GC512b?p=preview))\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'cmp',\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     * })\n     * class Cmp {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks ++\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     *   template: `\n     *     <cmp><cmp>\n     *   `,\n     *   directives: [Cmp]\n     * })\n     * class App {\n     * }\n     *\n     * bootstrap(App);\n     * ```\n     */\n    ChangeDetectorRef.prototype.markForCheck = function () { this.$scope.$applyAsync(); };\n    /**\n     * Detaches the change detector from the change detector tree.\n     *\n     * The detached change detector will not be checked until it is reattached.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detectChanges} to implement\n     * local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</lig>\n     *   `,\n     *   directives: [NgFor]\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     *   directives: [GiantList]\n     * })\n     * class App {\n     * }\n     *\n     * bootstrap(App);\n     * ```\n     */\n    ChangeDetectorRef.prototype.detach = function () { disconnectScope(this.$scope); };\n    /**\n     * Checks the change detector and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach} to implement local\n     * change detection\n     * checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check\n     * every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach} for more information.\n     */\n    ChangeDetectorRef.prototype.detectChanges = function () { this.$scope.$digest(); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't introduce\n     * other changes.\n     */\n    ChangeDetectorRef.prototype.checkNoChanges = function () { };\n    /**\n     * Reattach the change detector to the change detector tree.\n     *\n     * This also marks OnPush ancestors as to be checked. This reattached change detector will be\n     * checked during the next change detection run.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/aUhZha?p=preview))\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: `Data: {{dataProvider.data}}`\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider:DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value)\n     *       this.ref.reattach();\n     *     else\n     *       this.ref.detach();\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     *   directives: [LiveData, FORM_DIRECTIVES]\n     * })\n     * class App {\n     *   live = true;\n     * }\n     *\n     * bootstrap(App);\n     * ```\n     */\n    ChangeDetectorRef.prototype.reattach = function () { reconnectScope(this.$scope); };\n    return ChangeDetectorRef;\n}());\nChangeDetectorRef = ChangeDetectorRef_1 = __decorate([\n    decorators_1.Injectable('changeDetectorRef'),\n    __metadata(\"design:paramtypes\", [Object])\n], ChangeDetectorRef);\nexports.ChangeDetectorRef = ChangeDetectorRef;\n// Stop watchers and events from firing on a scope without destroying it,\n// by disconnecting it from its parent and its siblings' linked lists.\nfunction disconnectScope(scope) {\n    if (!scope)\n        return;\n    // we can't destroy the root scope or a scope that has been already destroyed\n    if (scope.$root === scope)\n        return;\n    if (scope.$$destroyed)\n        return;\n    var parent = scope.$parent;\n    scope.$$disconnected = true;\n    // See Scope.$destroy\n    if (parent.$$childHead === scope)\n        parent.$$childHead = scope.$$nextSibling;\n    if (parent.$$childTail === scope)\n        parent.$$childTail = scope.$$prevSibling;\n    if (scope.$$prevSibling)\n        scope.$$prevSibling.$$nextSibling = scope.$$nextSibling;\n    if (scope.$$nextSibling)\n        scope.$$nextSibling.$$prevSibling = scope.$$prevSibling;\n    scope.$$nextSibling = scope.$$prevSibling = null;\n}\n// Undo the effects of disconnectScope above.\nfunction reconnectScope(scope) {\n    if (!scope)\n        return;\n    // we can't disconnect the root node or scope already disconnected\n    if (scope.$root === scope)\n        return;\n    if (!scope.$$disconnected)\n        return;\n    var child = scope;\n    var parent = child.$parent;\n    child.$$disconnected = false;\n    // See Scope.$new for this logic...\n    child.$$prevSibling = parent.$$childTail;\n    if (parent.$$childHead) {\n        parent.$$childTail.$$nextSibling = child;\n        parent.$$childTail = child;\n    }\n    else {\n        parent.$$childHead = parent.$$childTail = child;\n    }\n}\nvar ChangeDetectorRef_1;\n//# sourceMappingURL=change_detector_ref.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 20 */
/* unknown exports provided */
/* all exports used */
/*!***************************************************!*\
  !*** ./~/ng-metadata/src/core/di/opaque_token.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * ### Example ([live demo](http://plnkr.co/edit/Ys9ezXpj2Mnoy3Uc8KBp?p=preview))\n *\n * ```typescript\n * var t = new OpaqueToken(\"value\");\n *\n * var injector = Injector.resolveAndCreate([\n *   provide(t, {useValue: \"providedValue\"})\n * ]);\n *\n * expect(injector.get(t)).toEqual(\"providedValue\");\n * ```\n *\n * Using an `OpaqueToken` is preferable to using strings as tokens because of possible collisions\n * caused by multiple providers using the same string as two different tokens.\n *\n * Using an `OpaqueToken` is preferable to using an `Object` as tokens because it provides better\n * error messages.\n */\nvar OpaqueToken = (function () {\n    function OpaqueToken(_desc) {\n        this._desc = _desc;\n    }\n    Object.defineProperty(OpaqueToken.prototype, \"desc\", {\n        get: function () { return this._desc; },\n        enumerable: true,\n        configurable: true\n    });\n    OpaqueToken.prototype.toString = function () { return \"Token \" + this._desc; };\n    return OpaqueToken;\n}());\nexports.OpaqueToken = OpaqueToken;\n//# sourceMappingURL=opaque_token.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpL29wYXF1ZV90b2tlbi5qcz84ODgxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBDcmVhdGVzIGEgdG9rZW4gdGhhdCBjYW4gYmUgdXNlZCBpbiBhIERJIFByb3ZpZGVyLlxuICpcbiAqICMjIyBFeGFtcGxlIChbbGl2ZSBkZW1vXShodHRwOi8vcGxua3IuY28vZWRpdC9ZczllelhwajJNbm95M1VjOEtCcD9wPXByZXZpZXcpKVxuICpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIHZhciB0ID0gbmV3IE9wYXF1ZVRva2VuKFwidmFsdWVcIik7XG4gKlxuICogdmFyIGluamVjdG9yID0gSW5qZWN0b3IucmVzb2x2ZUFuZENyZWF0ZShbXG4gKiAgIHByb3ZpZGUodCwge3VzZVZhbHVlOiBcInByb3ZpZGVkVmFsdWVcIn0pXG4gKiBdKTtcbiAqXG4gKiBleHBlY3QoaW5qZWN0b3IuZ2V0KHQpKS50b0VxdWFsKFwicHJvdmlkZWRWYWx1ZVwiKTtcbiAqIGBgYFxuICpcbiAqIFVzaW5nIGFuIGBPcGFxdWVUb2tlbmAgaXMgcHJlZmVyYWJsZSB0byB1c2luZyBzdHJpbmdzIGFzIHRva2VucyBiZWNhdXNlIG9mIHBvc3NpYmxlIGNvbGxpc2lvbnNcbiAqIGNhdXNlZCBieSBtdWx0aXBsZSBwcm92aWRlcnMgdXNpbmcgdGhlIHNhbWUgc3RyaW5nIGFzIHR3byBkaWZmZXJlbnQgdG9rZW5zLlxuICpcbiAqIFVzaW5nIGFuIGBPcGFxdWVUb2tlbmAgaXMgcHJlZmVyYWJsZSB0byB1c2luZyBhbiBgT2JqZWN0YCBhcyB0b2tlbnMgYmVjYXVzZSBpdCBwcm92aWRlcyBiZXR0ZXJcbiAqIGVycm9yIG1lc3NhZ2VzLlxuICovXG52YXIgT3BhcXVlVG9rZW4gPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE9wYXF1ZVRva2VuKF9kZXNjKSB7XG4gICAgICAgIHRoaXMuX2Rlc2MgPSBfZGVzYztcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE9wYXF1ZVRva2VuLnByb3RvdHlwZSwgXCJkZXNjXCIsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLl9kZXNjOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPcGFxdWVUb2tlbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBcIlRva2VuIFwiICsgdGhpcy5fZGVzYzsgfTtcbiAgICByZXR1cm4gT3BhcXVlVG9rZW47XG59KCkpO1xuZXhwb3J0cy5PcGFxdWVUb2tlbiA9IE9wYXF1ZVRva2VuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b3BhcXVlX3Rva2VuLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9kaS9vcGFxdWVfdG9rZW4uanNcbi8vIG1vZHVsZSBpZCA9IDIwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 21 */
/* unknown exports provided */
/* all exports used */
/*!****************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/binding/constants.js ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.INPUT_MODE_REGEX = /^(<|=|@)?(\\??)(\\w*)$/;\nexports.BINDING_MODE = Object.freeze({\n    oneWay: '<',\n    twoWay: '=',\n    output: '&',\n    attr: '@',\n    optional: '?'\n});\n//# sourceMappingURL=constants.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvYmluZGluZy9jb25zdGFudHMuanM/MTIwYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuSU5QVVRfTU9ERV9SRUdFWCA9IC9eKDx8PXxAKT8oXFw/PykoXFx3KikkLztcbmV4cG9ydHMuQklORElOR19NT0RFID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgb25lV2F5OiAnPCcsXG4gICAgdHdvV2F5OiAnPScsXG4gICAgb3V0cHV0OiAnJicsXG4gICAgYXR0cjogJ0AnLFxuICAgIG9wdGlvbmFsOiAnPydcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9kaXJlY3RpdmVzL2JpbmRpbmcvY29uc3RhbnRzLmpzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 22 */
/* unknown exports provided */
/* all exports used */
/*!************************************************!*\
  !*** ./~/ng-metadata/src/core/util/bundler.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar reflection_1 = __webpack_require__(/*! ../reflection/reflection */ 4);\nvar provider_1 = __webpack_require__(/*! ../di/provider */ 5);\nvar provider_util_1 = __webpack_require__(/*! ../di/provider_util */ 7);\nvar reflective_provider_1 = __webpack_require__(/*! ../di/reflective_provider */ 42);\nvar collections_1 = __webpack_require__(/*! ../../facade/collections */ 1);\nfunction _bundleComponent(ComponentClass, otherProviders, existingAngular1Module) {\n    if (otherProviders === void 0) { otherProviders = []; }\n    // Support registering downgraded ng2 components directly\n    var downgradedNgComponentName = reflection_1.reflector.downgradedNg2ComponentName(ComponentClass);\n    if (downgradedNgComponentName) {\n        var angular1Module_1 = existingAngular1Module || lang_1.global.angular.module(downgradedNgComponentName, []);\n        angular1Module_1.directive(downgradedNgComponentName, ComponentClass);\n        return angular1Module_1;\n    }\n    var angular1ModuleName = provider_1.getInjectableName(ComponentClass);\n    var angular1Module = existingAngular1Module || lang_1.global.angular.module(angular1ModuleName, []);\n    var annotations = reflection_1.reflector.annotations(ComponentClass);\n    var cmpAnnotation = annotations[0];\n    var _a = cmpAnnotation.providers, providers = _a === void 0 ? [] : _a, _b = cmpAnnotation.viewProviders, viewProviders = _b === void 0 ? [] : _b;\n    // process component\n    var _c = provider_1.provide(ComponentClass), cmpName = _c[0], cmpFactoryFn = _c[1];\n    var _d = reflective_provider_1._getAngular1ModuleMetadataByType(ComponentClass), providerName = _d.providerName, providerMethod = _d.providerMethod, moduleMethod = _d.moduleMethod;\n    if (reflective_provider_1._isTypeRegistered(cmpName, angular1Module, providerName, providerMethod)) {\n        return angular1Module;\n    }\n    // @TODO register via this once requires are resolved for 3 types of attr directive from template\n    // _registerTypeProvider( angular1Module, ComponentClass, { moduleMethod, name: cmpName, value: cmpFactoryFn } );\n    angular1Module[moduleMethod](cmpName, cmpFactoryFn);\n    // 1. process component/directive decorator providers/viewProviders\n    reflective_provider_1._normalizeProviders(angular1Module, providers);\n    reflective_provider_1._normalizeProviders(angular1Module, viewProviders);\n    // 2. process otherProviders argument\n    // - providers can be string(angular1Module reference), Type, StringMap(providerLiteral)\n    // - directives can't be registered as via global providers only @Injectable,@Pipe,{provide:any,use*:any}\n    // registerProviders(angular1Module, otherProviders);\n    reflective_provider_1._normalizeProviders(angular1Module, otherProviders);\n    return angular1Module;\n}\nfunction bundle(NgModuleClass, otherProviders, existingAngular1Module) {\n    if (otherProviders === void 0) { otherProviders = []; }\n    var angular1ModuleName = provider_1.getInjectableName(NgModuleClass);\n    var angular1Module = existingAngular1Module || lang_1.global.angular.module(angular1ModuleName, []);\n    var annotations = reflection_1.reflector.annotations(NgModuleClass);\n    var ngModuleAnnotation = annotations[0];\n    if (!provider_util_1.isNgModule(ngModuleAnnotation)) {\n        throw new Error(\"bundle() requires a decorated NgModule as its first argument\");\n    }\n    var _a = ngModuleAnnotation.declarations, declarations = _a === void 0 ? [] : _a, _b = ngModuleAnnotation.providers, providers = _b === void 0 ? [] : _b, _c = ngModuleAnnotation.imports, imports = _c === void 0 ? [] : _c;\n    /**\n     * Process `declarations`\n     */\n    collections_1.ListWrapper.flattenDeep(declarations).forEach(function (directiveType) {\n        _bundleComponent(directiveType, [], angular1Module);\n    });\n    /**\n     * Process `providers`\n     */\n    reflective_provider_1._normalizeProviders(angular1Module, providers);\n    /**\n     * Process `imports`\n     */\n    // 1. imports which are not NgModules\n    var nonNgModuleImports = imports.filter(function (imported) {\n        if (!lang_1.isFunction(imported)) {\n            return true;\n        }\n        var annotations = reflection_1.reflector.annotations(imported);\n        return !provider_util_1.isNgModule(ngModuleAnnotation);\n    });\n    reflective_provider_1._normalizeProviders(angular1Module, nonNgModuleImports);\n    // 2.imports which are NgModules\n    var NgModuleImports = imports.filter(function (imported) {\n        if (!lang_1.isFunction(imported)) {\n            return false;\n        }\n        var annotations = reflection_1.reflector.annotations(imported);\n        return provider_util_1.isNgModule(ngModuleAnnotation);\n    });\n    NgModuleImports.forEach(function (importedNgModule) {\n        bundle(importedNgModule, [], angular1Module);\n    });\n    /**\n     * Process `otherProviders`\n     */\n    reflective_provider_1._normalizeProviders(angular1Module, otherProviders);\n    return angular1Module;\n}\nexports.bundle = bundle;\n//# sourceMappingURL=bundler.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3V0aWwvYnVuZGxlci5qcz81M2MwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIGxhbmdfMSA9IHJlcXVpcmUoXCIuLi8uLi9mYWNhZGUvbGFuZ1wiKTtcbnZhciByZWZsZWN0aW9uXzEgPSByZXF1aXJlKFwiLi4vcmVmbGVjdGlvbi9yZWZsZWN0aW9uXCIpO1xudmFyIHByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi4vZGkvcHJvdmlkZXJcIik7XG52YXIgcHJvdmlkZXJfdXRpbF8xID0gcmVxdWlyZShcIi4uL2RpL3Byb3ZpZGVyX3V0aWxcIik7XG52YXIgcmVmbGVjdGl2ZV9wcm92aWRlcl8xID0gcmVxdWlyZShcIi4uL2RpL3JlZmxlY3RpdmVfcHJvdmlkZXJcIik7XG52YXIgY29sbGVjdGlvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9mYWNhZGUvY29sbGVjdGlvbnNcIik7XG5mdW5jdGlvbiBfYnVuZGxlQ29tcG9uZW50KENvbXBvbmVudENsYXNzLCBvdGhlclByb3ZpZGVycywgZXhpc3RpbmdBbmd1bGFyMU1vZHVsZSkge1xuICAgIGlmIChvdGhlclByb3ZpZGVycyA9PT0gdm9pZCAwKSB7IG90aGVyUHJvdmlkZXJzID0gW107IH1cbiAgICAvLyBTdXBwb3J0IHJlZ2lzdGVyaW5nIGRvd25ncmFkZWQgbmcyIGNvbXBvbmVudHMgZGlyZWN0bHlcbiAgICB2YXIgZG93bmdyYWRlZE5nQ29tcG9uZW50TmFtZSA9IHJlZmxlY3Rpb25fMS5yZWZsZWN0b3IuZG93bmdyYWRlZE5nMkNvbXBvbmVudE5hbWUoQ29tcG9uZW50Q2xhc3MpO1xuICAgIGlmIChkb3duZ3JhZGVkTmdDb21wb25lbnROYW1lKSB7XG4gICAgICAgIHZhciBhbmd1bGFyMU1vZHVsZV8xID0gZXhpc3RpbmdBbmd1bGFyMU1vZHVsZSB8fCBsYW5nXzEuZ2xvYmFsLmFuZ3VsYXIubW9kdWxlKGRvd25ncmFkZWROZ0NvbXBvbmVudE5hbWUsIFtdKTtcbiAgICAgICAgYW5ndWxhcjFNb2R1bGVfMS5kaXJlY3RpdmUoZG93bmdyYWRlZE5nQ29tcG9uZW50TmFtZSwgQ29tcG9uZW50Q2xhc3MpO1xuICAgICAgICByZXR1cm4gYW5ndWxhcjFNb2R1bGVfMTtcbiAgICB9XG4gICAgdmFyIGFuZ3VsYXIxTW9kdWxlTmFtZSA9IHByb3ZpZGVyXzEuZ2V0SW5qZWN0YWJsZU5hbWUoQ29tcG9uZW50Q2xhc3MpO1xuICAgIHZhciBhbmd1bGFyMU1vZHVsZSA9IGV4aXN0aW5nQW5ndWxhcjFNb2R1bGUgfHwgbGFuZ18xLmdsb2JhbC5hbmd1bGFyLm1vZHVsZShhbmd1bGFyMU1vZHVsZU5hbWUsIFtdKTtcbiAgICB2YXIgYW5ub3RhdGlvbnMgPSByZWZsZWN0aW9uXzEucmVmbGVjdG9yLmFubm90YXRpb25zKENvbXBvbmVudENsYXNzKTtcbiAgICB2YXIgY21wQW5ub3RhdGlvbiA9IGFubm90YXRpb25zWzBdO1xuICAgIHZhciBfYSA9IGNtcEFubm90YXRpb24ucHJvdmlkZXJzLCBwcm92aWRlcnMgPSBfYSA9PT0gdm9pZCAwID8gW10gOiBfYSwgX2IgPSBjbXBBbm5vdGF0aW9uLnZpZXdQcm92aWRlcnMsIHZpZXdQcm92aWRlcnMgPSBfYiA9PT0gdm9pZCAwID8gW10gOiBfYjtcbiAgICAvLyBwcm9jZXNzIGNvbXBvbmVudFxuICAgIHZhciBfYyA9IHByb3ZpZGVyXzEucHJvdmlkZShDb21wb25lbnRDbGFzcyksIGNtcE5hbWUgPSBfY1swXSwgY21wRmFjdG9yeUZuID0gX2NbMV07XG4gICAgdmFyIF9kID0gcmVmbGVjdGl2ZV9wcm92aWRlcl8xLl9nZXRBbmd1bGFyMU1vZHVsZU1ldGFkYXRhQnlUeXBlKENvbXBvbmVudENsYXNzKSwgcHJvdmlkZXJOYW1lID0gX2QucHJvdmlkZXJOYW1lLCBwcm92aWRlck1ldGhvZCA9IF9kLnByb3ZpZGVyTWV0aG9kLCBtb2R1bGVNZXRob2QgPSBfZC5tb2R1bGVNZXRob2Q7XG4gICAgaWYgKHJlZmxlY3RpdmVfcHJvdmlkZXJfMS5faXNUeXBlUmVnaXN0ZXJlZChjbXBOYW1lLCBhbmd1bGFyMU1vZHVsZSwgcHJvdmlkZXJOYW1lLCBwcm92aWRlck1ldGhvZCkpIHtcbiAgICAgICAgcmV0dXJuIGFuZ3VsYXIxTW9kdWxlO1xuICAgIH1cbiAgICAvLyBAVE9ETyByZWdpc3RlciB2aWEgdGhpcyBvbmNlIHJlcXVpcmVzIGFyZSByZXNvbHZlZCBmb3IgMyB0eXBlcyBvZiBhdHRyIGRpcmVjdGl2ZSBmcm9tIHRlbXBsYXRlXG4gICAgLy8gX3JlZ2lzdGVyVHlwZVByb3ZpZGVyKCBhbmd1bGFyMU1vZHVsZSwgQ29tcG9uZW50Q2xhc3MsIHsgbW9kdWxlTWV0aG9kLCBuYW1lOiBjbXBOYW1lLCB2YWx1ZTogY21wRmFjdG9yeUZuIH0gKTtcbiAgICBhbmd1bGFyMU1vZHVsZVttb2R1bGVNZXRob2RdKGNtcE5hbWUsIGNtcEZhY3RvcnlGbik7XG4gICAgLy8gMS4gcHJvY2VzcyBjb21wb25lbnQvZGlyZWN0aXZlIGRlY29yYXRvciBwcm92aWRlcnMvdmlld1Byb3ZpZGVyc1xuICAgIHJlZmxlY3RpdmVfcHJvdmlkZXJfMS5fbm9ybWFsaXplUHJvdmlkZXJzKGFuZ3VsYXIxTW9kdWxlLCBwcm92aWRlcnMpO1xuICAgIHJlZmxlY3RpdmVfcHJvdmlkZXJfMS5fbm9ybWFsaXplUHJvdmlkZXJzKGFuZ3VsYXIxTW9kdWxlLCB2aWV3UHJvdmlkZXJzKTtcbiAgICAvLyAyLiBwcm9jZXNzIG90aGVyUHJvdmlkZXJzIGFyZ3VtZW50XG4gICAgLy8gLSBwcm92aWRlcnMgY2FuIGJlIHN0cmluZyhhbmd1bGFyMU1vZHVsZSByZWZlcmVuY2UpLCBUeXBlLCBTdHJpbmdNYXAocHJvdmlkZXJMaXRlcmFsKVxuICAgIC8vIC0gZGlyZWN0aXZlcyBjYW4ndCBiZSByZWdpc3RlcmVkIGFzIHZpYSBnbG9iYWwgcHJvdmlkZXJzIG9ubHkgQEluamVjdGFibGUsQFBpcGUse3Byb3ZpZGU6YW55LHVzZSo6YW55fVxuICAgIC8vIHJlZ2lzdGVyUHJvdmlkZXJzKGFuZ3VsYXIxTW9kdWxlLCBvdGhlclByb3ZpZGVycyk7XG4gICAgcmVmbGVjdGl2ZV9wcm92aWRlcl8xLl9ub3JtYWxpemVQcm92aWRlcnMoYW5ndWxhcjFNb2R1bGUsIG90aGVyUHJvdmlkZXJzKTtcbiAgICByZXR1cm4gYW5ndWxhcjFNb2R1bGU7XG59XG5mdW5jdGlvbiBidW5kbGUoTmdNb2R1bGVDbGFzcywgb3RoZXJQcm92aWRlcnMsIGV4aXN0aW5nQW5ndWxhcjFNb2R1bGUpIHtcbiAgICBpZiAob3RoZXJQcm92aWRlcnMgPT09IHZvaWQgMCkgeyBvdGhlclByb3ZpZGVycyA9IFtdOyB9XG4gICAgdmFyIGFuZ3VsYXIxTW9kdWxlTmFtZSA9IHByb3ZpZGVyXzEuZ2V0SW5qZWN0YWJsZU5hbWUoTmdNb2R1bGVDbGFzcyk7XG4gICAgdmFyIGFuZ3VsYXIxTW9kdWxlID0gZXhpc3RpbmdBbmd1bGFyMU1vZHVsZSB8fCBsYW5nXzEuZ2xvYmFsLmFuZ3VsYXIubW9kdWxlKGFuZ3VsYXIxTW9kdWxlTmFtZSwgW10pO1xuICAgIHZhciBhbm5vdGF0aW9ucyA9IHJlZmxlY3Rpb25fMS5yZWZsZWN0b3IuYW5ub3RhdGlvbnMoTmdNb2R1bGVDbGFzcyk7XG4gICAgdmFyIG5nTW9kdWxlQW5ub3RhdGlvbiA9IGFubm90YXRpb25zWzBdO1xuICAgIGlmICghcHJvdmlkZXJfdXRpbF8xLmlzTmdNb2R1bGUobmdNb2R1bGVBbm5vdGF0aW9uKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJidW5kbGUoKSByZXF1aXJlcyBhIGRlY29yYXRlZCBOZ01vZHVsZSBhcyBpdHMgZmlyc3QgYXJndW1lbnRcIik7XG4gICAgfVxuICAgIHZhciBfYSA9IG5nTW9kdWxlQW5ub3RhdGlvbi5kZWNsYXJhdGlvbnMsIGRlY2xhcmF0aW9ucyA9IF9hID09PSB2b2lkIDAgPyBbXSA6IF9hLCBfYiA9IG5nTW9kdWxlQW5ub3RhdGlvbi5wcm92aWRlcnMsIHByb3ZpZGVycyA9IF9iID09PSB2b2lkIDAgPyBbXSA6IF9iLCBfYyA9IG5nTW9kdWxlQW5ub3RhdGlvbi5pbXBvcnRzLCBpbXBvcnRzID0gX2MgPT09IHZvaWQgMCA/IFtdIDogX2M7XG4gICAgLyoqXG4gICAgICogUHJvY2VzcyBgZGVjbGFyYXRpb25zYFxuICAgICAqL1xuICAgIGNvbGxlY3Rpb25zXzEuTGlzdFdyYXBwZXIuZmxhdHRlbkRlZXAoZGVjbGFyYXRpb25zKS5mb3JFYWNoKGZ1bmN0aW9uIChkaXJlY3RpdmVUeXBlKSB7XG4gICAgICAgIF9idW5kbGVDb21wb25lbnQoZGlyZWN0aXZlVHlwZSwgW10sIGFuZ3VsYXIxTW9kdWxlKTtcbiAgICB9KTtcbiAgICAvKipcbiAgICAgKiBQcm9jZXNzIGBwcm92aWRlcnNgXG4gICAgICovXG4gICAgcmVmbGVjdGl2ZV9wcm92aWRlcl8xLl9ub3JtYWxpemVQcm92aWRlcnMoYW5ndWxhcjFNb2R1bGUsIHByb3ZpZGVycyk7XG4gICAgLyoqXG4gICAgICogUHJvY2VzcyBgaW1wb3J0c2BcbiAgICAgKi9cbiAgICAvLyAxLiBpbXBvcnRzIHdoaWNoIGFyZSBub3QgTmdNb2R1bGVzXG4gICAgdmFyIG5vbk5nTW9kdWxlSW1wb3J0cyA9IGltcG9ydHMuZmlsdGVyKGZ1bmN0aW9uIChpbXBvcnRlZCkge1xuICAgICAgICBpZiAoIWxhbmdfMS5pc0Z1bmN0aW9uKGltcG9ydGVkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGFubm90YXRpb25zID0gcmVmbGVjdGlvbl8xLnJlZmxlY3Rvci5hbm5vdGF0aW9ucyhpbXBvcnRlZCk7XG4gICAgICAgIHJldHVybiAhcHJvdmlkZXJfdXRpbF8xLmlzTmdNb2R1bGUobmdNb2R1bGVBbm5vdGF0aW9uKTtcbiAgICB9KTtcbiAgICByZWZsZWN0aXZlX3Byb3ZpZGVyXzEuX25vcm1hbGl6ZVByb3ZpZGVycyhhbmd1bGFyMU1vZHVsZSwgbm9uTmdNb2R1bGVJbXBvcnRzKTtcbiAgICAvLyAyLmltcG9ydHMgd2hpY2ggYXJlIE5nTW9kdWxlc1xuICAgIHZhciBOZ01vZHVsZUltcG9ydHMgPSBpbXBvcnRzLmZpbHRlcihmdW5jdGlvbiAoaW1wb3J0ZWQpIHtcbiAgICAgICAgaWYgKCFsYW5nXzEuaXNGdW5jdGlvbihpbXBvcnRlZCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYW5ub3RhdGlvbnMgPSByZWZsZWN0aW9uXzEucmVmbGVjdG9yLmFubm90YXRpb25zKGltcG9ydGVkKTtcbiAgICAgICAgcmV0dXJuIHByb3ZpZGVyX3V0aWxfMS5pc05nTW9kdWxlKG5nTW9kdWxlQW5ub3RhdGlvbik7XG4gICAgfSk7XG4gICAgTmdNb2R1bGVJbXBvcnRzLmZvckVhY2goZnVuY3Rpb24gKGltcG9ydGVkTmdNb2R1bGUpIHtcbiAgICAgICAgYnVuZGxlKGltcG9ydGVkTmdNb2R1bGUsIFtdLCBhbmd1bGFyMU1vZHVsZSk7XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogUHJvY2VzcyBgb3RoZXJQcm92aWRlcnNgXG4gICAgICovXG4gICAgcmVmbGVjdGl2ZV9wcm92aWRlcl8xLl9ub3JtYWxpemVQcm92aWRlcnMoYW5ndWxhcjFNb2R1bGUsIG90aGVyUHJvdmlkZXJzKTtcbiAgICByZXR1cm4gYW5ndWxhcjFNb2R1bGU7XG59XG5leHBvcnRzLmJ1bmRsZSA9IGJ1bmRsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJ1bmRsZXIuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3V0aWwvYnVuZGxlci5qc1xuLy8gbW9kdWxlIGlkID0gMjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 23 */
/* unknown exports provided */
/* all exports used */
/*!*******************************************!*\
  !*** ./~/ng-metadata/src/facade/async.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar lang_1 = __webpack_require__(/*! ./lang */ 0);\nvar Subject_1 = __webpack_require__(/*! rxjs/Subject */ 68);\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `ZippyComponent` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div ng-click=\"$ctrl.toggle()\">Toggle</div>\n *     <div ng-hide=\"!$ctrl.visible\">\n *       <ng-transclude></ng-transclude>\n *     </div>\n *  </div>`\n * })\n * export class ZippyComponent {\n *   visible: boolean = true;\n *\n *   @Output() open = new EventEmitter<boolean>();\n *   @Output() close = new EventEmitter<boolean>();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit( this.visible );\n *     } else {\n *       this.close.emit( this.visible );\n *     }\n *   }\n * }\n * ```\n *\n * Use Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of [EventEmitter], which depending on [isAsync],\n     * delivers events synchronously or asynchronously.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        /** @internal */\n        _this._ngExpressionBindingCb = lang_1.noop;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /** @internal */\n    EventEmitter.prototype.wrapNgExpBindingToEmitter = function (cb) {\n        //used in reassignBindingsAndCreteEventEmitters to attach the original @Output binding to the instance new EventEmitter\n        this._ngExpressionBindingCb = cb;\n        // this could create memory leaks because the subscription would be never terminated\n        // super.subscribe((newValue)=>this._ngExpressionBindingCb({$event:newValue}));\n    };\n    EventEmitter.prototype.emit = function (value) {\n        var payload = { $event: value };\n        // push just the value\n        _super.prototype.next.call(this, value);\n        // our & binding needs to be called via { $event: value } because Angular 1 locals\n        this._ngExpressionBindingCb(payload);\n    };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn /** TODO #9100 */;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync\n                ? function (value /** TODO #9100 */) { setTimeout(function () { return generatorOrNext.next(value); }); }\n                : function (value /** TODO #9100 */) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync\n                    ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); }\n                    : function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync\n                    ? function () { setTimeout(function () { return generatorOrNext.complete(); }); }\n                    : function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync\n                ? function (value /** TODO #9100 */) { setTimeout(function () { return generatorOrNext(value); }); }\n                : function (value /** TODO #9100 */) { generatorOrNext(value); };\n            if (error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject_1.Subject));\nexports.EventEmitter = EventEmitter;\n//# sourceMappingURL=async.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9mYWNhZGUvYXN5bmMuanM/MDIxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgZnVuY3Rpb24gKGQsIGIpIHtcbiAgICBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTtcbiAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG59O1xudmFyIGxhbmdfMSA9IHJlcXVpcmUoXCIuL2xhbmdcIik7XG52YXIgU3ViamVjdF8xID0gcmVxdWlyZShcInJ4anMvU3ViamVjdFwiKTtcbi8qKlxuICogVXNlIGJ5IGRpcmVjdGl2ZXMgYW5kIGNvbXBvbmVudHMgdG8gZW1pdCBjdXN0b20gRXZlbnRzLlxuICpcbiAqICMjIyBFeGFtcGxlc1xuICpcbiAqIEluIHRoZSBmb2xsb3dpbmcgZXhhbXBsZSwgYFppcHB5Q29tcG9uZW50YCBhbHRlcm5hdGl2ZWx5IGVtaXRzIGBvcGVuYCBhbmQgYGNsb3NlYCBldmVudHMgd2hlbiBpdHNcbiAqIHRpdGxlIGdldHMgY2xpY2tlZDpcbiAqXG4gKiBgYGBcbiAqIEBDb21wb25lbnQoe1xuICogICBzZWxlY3RvcjogJ3ppcHB5JyxcbiAqICAgdGVtcGxhdGU6IGBcbiAqICAgPGRpdiBjbGFzcz1cInppcHB5XCI+XG4gKiAgICAgPGRpdiBuZy1jbGljaz1cIiRjdHJsLnRvZ2dsZSgpXCI+VG9nZ2xlPC9kaXY+XG4gKiAgICAgPGRpdiBuZy1oaWRlPVwiISRjdHJsLnZpc2libGVcIj5cbiAqICAgICAgIDxuZy10cmFuc2NsdWRlPjwvbmctdHJhbnNjbHVkZT5cbiAqICAgICA8L2Rpdj5cbiAqICA8L2Rpdj5gXG4gKiB9KVxuICogZXhwb3J0IGNsYXNzIFppcHB5Q29tcG9uZW50IHtcbiAqICAgdmlzaWJsZTogYm9vbGVhbiA9IHRydWU7XG4gKlxuICogICBAT3V0cHV0KCkgb3BlbiA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcbiAqICAgQE91dHB1dCgpIGNsb3NlID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuICpcbiAqICAgdG9nZ2xlKCkge1xuICogICAgIHRoaXMudmlzaWJsZSA9ICF0aGlzLnZpc2libGU7XG4gKiAgICAgaWYgKHRoaXMudmlzaWJsZSkge1xuICogICAgICAgdGhpcy5vcGVuLmVtaXQoIHRoaXMudmlzaWJsZSApO1xuICogICAgIH0gZWxzZSB7XG4gKiAgICAgICB0aGlzLmNsb3NlLmVtaXQoIHRoaXMudmlzaWJsZSApO1xuICogICAgIH1cbiAqICAgfVxuICogfVxuICogYGBgXG4gKlxuICogVXNlIFJ4Lk9ic2VydmFibGUgYnV0IHByb3ZpZGVzIGFuIGFkYXB0ZXIgdG8gbWFrZSBpdCB3b3JrIGFzIHNwZWNpZmllZCBoZXJlOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2podXNhaW4vb2JzZXJ2YWJsZS1zcGVjXG4gKlxuICogT25jZSBhIHJlZmVyZW5jZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgc3BlYyBpcyBhdmFpbGFibGUsIHN3aXRjaCB0byBpdC5cbiAqL1xudmFyIEV2ZW50RW1pdHRlciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEV2ZW50RW1pdHRlciwgX3N1cGVyKTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGluc3RhbmNlIG9mIFtFdmVudEVtaXR0ZXJdLCB3aGljaCBkZXBlbmRpbmcgb24gW2lzQXN5bmNdLFxuICAgICAqIGRlbGl2ZXJzIGV2ZW50cyBzeW5jaHJvbm91c2x5IG9yIGFzeW5jaHJvbm91c2x5LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIEV2ZW50RW1pdHRlcihpc0FzeW5jKSB7XG4gICAgICAgIGlmIChpc0FzeW5jID09PSB2b2lkIDApIHsgaXNBc3luYyA9IGZhbHNlOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICAgICAgX3RoaXMuX25nRXhwcmVzc2lvbkJpbmRpbmdDYiA9IGxhbmdfMS5ub29wO1xuICAgICAgICBfdGhpcy5fX2lzQXN5bmMgPSBpc0FzeW5jO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLndyYXBOZ0V4cEJpbmRpbmdUb0VtaXR0ZXIgPSBmdW5jdGlvbiAoY2IpIHtcbiAgICAgICAgLy91c2VkIGluIHJlYXNzaWduQmluZGluZ3NBbmRDcmV0ZUV2ZW50RW1pdHRlcnMgdG8gYXR0YWNoIHRoZSBvcmlnaW5hbCBAT3V0cHV0IGJpbmRpbmcgdG8gdGhlIGluc3RhbmNlIG5ldyBFdmVudEVtaXR0ZXJcbiAgICAgICAgdGhpcy5fbmdFeHByZXNzaW9uQmluZGluZ0NiID0gY2I7XG4gICAgICAgIC8vIHRoaXMgY291bGQgY3JlYXRlIG1lbW9yeSBsZWFrcyBiZWNhdXNlIHRoZSBzdWJzY3JpcHRpb24gd291bGQgYmUgbmV2ZXIgdGVybWluYXRlZFxuICAgICAgICAvLyBzdXBlci5zdWJzY3JpYmUoKG5ld1ZhbHVlKT0+dGhpcy5fbmdFeHByZXNzaW9uQmluZGluZ0NiKHskZXZlbnQ6bmV3VmFsdWV9KSk7XG4gICAgfTtcbiAgICBFdmVudEVtaXR0ZXIucHJvdG90eXBlLmVtaXQgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgdmFyIHBheWxvYWQgPSB7ICRldmVudDogdmFsdWUgfTtcbiAgICAgICAgLy8gcHVzaCBqdXN0IHRoZSB2YWx1ZVxuICAgICAgICBfc3VwZXIucHJvdG90eXBlLm5leHQuY2FsbCh0aGlzLCB2YWx1ZSk7XG4gICAgICAgIC8vIG91ciAmIGJpbmRpbmcgbmVlZHMgdG8gYmUgY2FsbGVkIHZpYSB7ICRldmVudDogdmFsdWUgfSBiZWNhdXNlIEFuZ3VsYXIgMSBsb2NhbHNcbiAgICAgICAgdGhpcy5fbmdFeHByZXNzaW9uQmluZGluZ0NiKHBheWxvYWQpO1xuICAgIH07XG4gICAgRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5zdWJzY3JpYmUgPSBmdW5jdGlvbiAoZ2VuZXJhdG9yT3JOZXh0LCBlcnJvciwgY29tcGxldGUpIHtcbiAgICAgICAgdmFyIHNjaGVkdWxlckZuIC8qKiBUT0RPICM5MTAwICovO1xuICAgICAgICB2YXIgZXJyb3JGbiA9IGZ1bmN0aW9uIChlcnIpIHsgcmV0dXJuIG51bGw7IH07XG4gICAgICAgIHZhciBjb21wbGV0ZUZuID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gbnVsbDsgfTtcbiAgICAgICAgaWYgKGdlbmVyYXRvck9yTmV4dCAmJiB0eXBlb2YgZ2VuZXJhdG9yT3JOZXh0ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgc2NoZWR1bGVyRm4gPSB0aGlzLl9faXNBc3luY1xuICAgICAgICAgICAgICAgID8gZnVuY3Rpb24gKHZhbHVlIC8qKiBUT0RPICM5MTAwICovKSB7IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2VuZXJhdG9yT3JOZXh0Lm5leHQodmFsdWUpOyB9KTsgfVxuICAgICAgICAgICAgICAgIDogZnVuY3Rpb24gKHZhbHVlIC8qKiBUT0RPICM5MTAwICovKSB7IGdlbmVyYXRvck9yTmV4dC5uZXh0KHZhbHVlKTsgfTtcbiAgICAgICAgICAgIGlmIChnZW5lcmF0b3JPck5leHQuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBlcnJvckZuID0gdGhpcy5fX2lzQXN5bmNcbiAgICAgICAgICAgICAgICAgICAgPyBmdW5jdGlvbiAoZXJyKSB7IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2VuZXJhdG9yT3JOZXh0LmVycm9yKGVycik7IH0pOyB9XG4gICAgICAgICAgICAgICAgICAgIDogZnVuY3Rpb24gKGVycikgeyBnZW5lcmF0b3JPck5leHQuZXJyb3IoZXJyKTsgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChnZW5lcmF0b3JPck5leHQuY29tcGxldGUpIHtcbiAgICAgICAgICAgICAgICBjb21wbGV0ZUZuID0gdGhpcy5fX2lzQXN5bmNcbiAgICAgICAgICAgICAgICAgICAgPyBmdW5jdGlvbiAoKSB7IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2VuZXJhdG9yT3JOZXh0LmNvbXBsZXRlKCk7IH0pOyB9XG4gICAgICAgICAgICAgICAgICAgIDogZnVuY3Rpb24gKCkgeyBnZW5lcmF0b3JPck5leHQuY29tcGxldGUoKTsgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHNjaGVkdWxlckZuID0gdGhpcy5fX2lzQXN5bmNcbiAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uICh2YWx1ZSAvKiogVE9ETyAjOTEwMCAqLykgeyBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIGdlbmVyYXRvck9yTmV4dCh2YWx1ZSk7IH0pOyB9XG4gICAgICAgICAgICAgICAgOiBmdW5jdGlvbiAodmFsdWUgLyoqIFRPRE8gIzkxMDAgKi8pIHsgZ2VuZXJhdG9yT3JOZXh0KHZhbHVlKTsgfTtcbiAgICAgICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGVycm9yRm4gPSB0aGlzLl9faXNBc3luYyA/IGZ1bmN0aW9uIChlcnIpIHsgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcihlcnIpOyB9KTsgfSA6IGZ1bmN0aW9uIChlcnIpIHsgZXJyb3IoZXJyKTsgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjb21wbGV0ZSkge1xuICAgICAgICAgICAgICAgIGNvbXBsZXRlRm4gPSB0aGlzLl9faXNBc3luYyA/IGZ1bmN0aW9uICgpIHsgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7IHJldHVybiBjb21wbGV0ZSgpOyB9KTsgfSA6IGZ1bmN0aW9uICgpIHsgY29tcGxldGUoKTsgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gX3N1cGVyLnByb3RvdHlwZS5zdWJzY3JpYmUuY2FsbCh0aGlzLCBzY2hlZHVsZXJGbiwgZXJyb3JGbiwgY29tcGxldGVGbik7XG4gICAgfTtcbiAgICByZXR1cm4gRXZlbnRFbWl0dGVyO1xufShTdWJqZWN0XzEuU3ViamVjdCkpO1xuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBFdmVudEVtaXR0ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3luYy5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2ZhY2FkZS9hc3luYy5qc1xuLy8gbW9kdWxlIGlkID0gMjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 24 */
/* unknown exports provided */
/* all exports used */
/*!************************************************!*\
  !*** ./~/ng-metadata/src/facade/exceptions.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar lang_1 = __webpack_require__(/*! ./lang */ 0);\nvar BaseException = (function (_super) {\n    __extends(BaseException, _super);\n    function BaseException(message) {\n        if (message === void 0) { message = \"--\"; }\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.stack = new Error(message).stack;\n        return _this;\n    }\n    BaseException.prototype.toString = function () { return this.message; };\n    return BaseException;\n}(Error));\nexports.BaseException = BaseException;\nfunction getErrorMsg(typeOrFunc, msg) {\n    return \"\\n      \" + lang_1.getFuncName(typeOrFunc) + \":\\n      ===========================\\n      \" + msg + \"\\n    \";\n}\nexports.getErrorMsg = getErrorMsg;\n//# sourceMappingURL=exceptions.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9mYWNhZGUvZXhjZXB0aW9ucy5qcz9hZDcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCBmdW5jdGlvbiAoZCwgYikge1xuICAgIGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdO1xuICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbn07XG52YXIgbGFuZ18xID0gcmVxdWlyZShcIi4vbGFuZ1wiKTtcbnZhciBCYXNlRXhjZXB0aW9uID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoQmFzZUV4Y2VwdGlvbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBCYXNlRXhjZXB0aW9uKG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKG1lc3NhZ2UgPT09IHZvaWQgMCkgeyBtZXNzYWdlID0gXCItLVwiOyB9XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG1lc3NhZ2UpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICBfdGhpcy5zdGFjayA9IG5ldyBFcnJvcihtZXNzYWdlKS5zdGFjaztcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBCYXNlRXhjZXB0aW9uLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMubWVzc2FnZTsgfTtcbiAgICByZXR1cm4gQmFzZUV4Y2VwdGlvbjtcbn0oRXJyb3IpKTtcbmV4cG9ydHMuQmFzZUV4Y2VwdGlvbiA9IEJhc2VFeGNlcHRpb247XG5mdW5jdGlvbiBnZXRFcnJvck1zZyh0eXBlT3JGdW5jLCBtc2cpIHtcbiAgICByZXR1cm4gXCJcXG4gICAgICBcIiArIGxhbmdfMS5nZXRGdW5jTmFtZSh0eXBlT3JGdW5jKSArIFwiOlxcbiAgICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PVxcbiAgICAgIFwiICsgbXNnICsgXCJcXG4gICAgXCI7XG59XG5leHBvcnRzLmdldEVycm9yTXNnID0gZ2V0RXJyb3JNc2c7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leGNlcHRpb25zLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvZmFjYWRlL2V4Y2VwdGlvbnMuanNcbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 25 */
/* unknown exports provided */
/* all exports used */
/*!************************************************!*\
  !*** ./~/ng-metadata/src/facade/primitives.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ./lang */ 0);\nvar _kebabCase = _caseTransformerFactory('-');\nvar _snakeCase = _caseTransformerFactory('_');\nvar StringWrapper = (function () {\n    function StringWrapper() {\n    }\n    StringWrapper.fromCharCode = function (code) { return String.fromCharCode(code); };\n    StringWrapper.charCodeAt = function (s, index) { return s.charCodeAt(index); };\n    StringWrapper.split = function (s, regExp) { return s.split(regExp); };\n    StringWrapper.equals = function (s, s2) { return s === s2; };\n    StringWrapper.stripLeft = function (s, charVal) {\n        if (s && s.length) {\n            var pos = 0;\n            for (var i = 0; i < s.length; i++) {\n                if (s[i] != charVal)\n                    break;\n                pos++;\n            }\n            s = s.substring(pos);\n        }\n        return s;\n    };\n    StringWrapper.stripRight = function (s, charVal) {\n        if (s && s.length) {\n            var pos = s.length;\n            for (var i = s.length - 1; i >= 0; i--) {\n                if (s[i] != charVal)\n                    break;\n                pos--;\n            }\n            s = s.substring(0, pos);\n        }\n        return s;\n    };\n    StringWrapper.replace = function (s, from, replace) {\n        return s.replace(from, replace);\n    };\n    StringWrapper.replaceAll = function (s, from, replace) {\n        return s.replace(from, replace);\n    };\n    StringWrapper.slice = function (s, from, to) {\n        if (from === void 0) { from = 0; }\n        if (to === void 0) { to = null; }\n        return s.slice(from, to === null\n            ? undefined\n            : to);\n    };\n    StringWrapper.replaceAllMapped = function (s, from, cb) {\n        return s.replace(from, function () {\n            var matches = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                matches[_i] = arguments[_i];\n            }\n            // Remove offset & string from the result array\n            matches.splice(-2, 2);\n            // The callback receives match, p1, ..., pn\n            return cb(matches);\n        });\n    };\n    StringWrapper.compare = function (a, b) {\n        if (a < b) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    };\n    StringWrapper.includes = function (str, searchString, position) {\n        if (position === void 0) { position = 0; }\n        if (String.prototype.includes) {\n            return str.includes(searchString, position);\n        }\n        return str.indexOf(searchString, position) === position;\n    };\n    StringWrapper.startsWith = function (str, searchString, position) {\n        if (position === void 0) { position = 0; }\n        if (String.prototype.startsWith) {\n            return str.startsWith(searchString, position);\n        }\n        return str.indexOf(searchString, position) === position;\n    };\n    StringWrapper.endsWith = function (str, searchString, position) {\n        if (String.prototype.endsWith) {\n            return str.endsWith(searchString, position);\n        }\n        var subjectString = str.toString();\n        if (!lang_1.isNumber(position) || !isFinite(position)\n            || Math.floor(position) !== position || position > subjectString.length) {\n            position = subjectString.length;\n        }\n        position -= searchString.length;\n        var lastIndex = subjectString.indexOf(searchString, position);\n        return lastIndex !== -1 && lastIndex === position;\n    };\n    StringWrapper.kebabCase = function (name) {\n        return _kebabCase(name);\n    };\n    StringWrapper.snakeCase = function (name) {\n        return _snakeCase(name);\n    };\n    return StringWrapper;\n}());\nexports.StringWrapper = StringWrapper;\nfunction _caseTransformerFactory(separator) {\n    var SNAKE_CASE_REGEXP = /[A-Z]/g;\n    return _caseTransform;\n    function _caseTransform(name) {\n        return name.replace(SNAKE_CASE_REGEXP, function (match, offset) {\n            return (offset\n                ? separator\n                : '') + match.toLowerCase();\n        });\n    }\n}\n//# sourceMappingURL=primitives.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9mYWNhZGUvcHJpbWl0aXZlcy5qcz8wY2NkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIGxhbmdfMSA9IHJlcXVpcmUoXCIuL2xhbmdcIik7XG52YXIgX2tlYmFiQ2FzZSA9IF9jYXNlVHJhbnNmb3JtZXJGYWN0b3J5KCctJyk7XG52YXIgX3NuYWtlQ2FzZSA9IF9jYXNlVHJhbnNmb3JtZXJGYWN0b3J5KCdfJyk7XG52YXIgU3RyaW5nV3JhcHBlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gU3RyaW5nV3JhcHBlcigpIHtcbiAgICB9XG4gICAgU3RyaW5nV3JhcHBlci5mcm9tQ2hhckNvZGUgPSBmdW5jdGlvbiAoY29kZSkgeyByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjb2RlKTsgfTtcbiAgICBTdHJpbmdXcmFwcGVyLmNoYXJDb2RlQXQgPSBmdW5jdGlvbiAocywgaW5kZXgpIHsgcmV0dXJuIHMuY2hhckNvZGVBdChpbmRleCk7IH07XG4gICAgU3RyaW5nV3JhcHBlci5zcGxpdCA9IGZ1bmN0aW9uIChzLCByZWdFeHApIHsgcmV0dXJuIHMuc3BsaXQocmVnRXhwKTsgfTtcbiAgICBTdHJpbmdXcmFwcGVyLmVxdWFscyA9IGZ1bmN0aW9uIChzLCBzMikgeyByZXR1cm4gcyA9PT0gczI7IH07XG4gICAgU3RyaW5nV3JhcHBlci5zdHJpcExlZnQgPSBmdW5jdGlvbiAocywgY2hhclZhbCkge1xuICAgICAgICBpZiAocyAmJiBzLmxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIHBvcyA9IDA7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoc1tpXSAhPSBjaGFyVmFsKVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBwb3MrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHMgPSBzLnN1YnN0cmluZyhwb3MpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzO1xuICAgIH07XG4gICAgU3RyaW5nV3JhcHBlci5zdHJpcFJpZ2h0ID0gZnVuY3Rpb24gKHMsIGNoYXJWYWwpIHtcbiAgICAgICAgaWYgKHMgJiYgcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBwb3MgPSBzLmxlbmd0aDtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICAgICAgaWYgKHNbaV0gIT0gY2hhclZhbClcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgcG9zLS07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzID0gcy5zdWJzdHJpbmcoMCwgcG9zKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcztcbiAgICB9O1xuICAgIFN0cmluZ1dyYXBwZXIucmVwbGFjZSA9IGZ1bmN0aW9uIChzLCBmcm9tLCByZXBsYWNlKSB7XG4gICAgICAgIHJldHVybiBzLnJlcGxhY2UoZnJvbSwgcmVwbGFjZSk7XG4gICAgfTtcbiAgICBTdHJpbmdXcmFwcGVyLnJlcGxhY2VBbGwgPSBmdW5jdGlvbiAocywgZnJvbSwgcmVwbGFjZSkge1xuICAgICAgICByZXR1cm4gcy5yZXBsYWNlKGZyb20sIHJlcGxhY2UpO1xuICAgIH07XG4gICAgU3RyaW5nV3JhcHBlci5zbGljZSA9IGZ1bmN0aW9uIChzLCBmcm9tLCB0bykge1xuICAgICAgICBpZiAoZnJvbSA9PT0gdm9pZCAwKSB7IGZyb20gPSAwOyB9XG4gICAgICAgIGlmICh0byA9PT0gdm9pZCAwKSB7IHRvID0gbnVsbDsgfVxuICAgICAgICByZXR1cm4gcy5zbGljZShmcm9tLCB0byA9PT0gbnVsbFxuICAgICAgICAgICAgPyB1bmRlZmluZWRcbiAgICAgICAgICAgIDogdG8pO1xuICAgIH07XG4gICAgU3RyaW5nV3JhcHBlci5yZXBsYWNlQWxsTWFwcGVkID0gZnVuY3Rpb24gKHMsIGZyb20sIGNiKSB7XG4gICAgICAgIHJldHVybiBzLnJlcGxhY2UoZnJvbSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICAgICAgbWF0Y2hlc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gUmVtb3ZlIG9mZnNldCAmIHN0cmluZyBmcm9tIHRoZSByZXN1bHQgYXJyYXlcbiAgICAgICAgICAgIG1hdGNoZXMuc3BsaWNlKC0yLCAyKTtcbiAgICAgICAgICAgIC8vIFRoZSBjYWxsYmFjayByZWNlaXZlcyBtYXRjaCwgcDEsIC4uLiwgcG5cbiAgICAgICAgICAgIHJldHVybiBjYihtYXRjaGVzKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBTdHJpbmdXcmFwcGVyLmNvbXBhcmUgPSBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgICBpZiAoYSA8IGIpIHtcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChhID4gYikge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuICAgIH07XG4gICAgU3RyaW5nV3JhcHBlci5pbmNsdWRlcyA9IGZ1bmN0aW9uIChzdHIsIHNlYXJjaFN0cmluZywgcG9zaXRpb24pIHtcbiAgICAgICAgaWYgKHBvc2l0aW9uID09PSB2b2lkIDApIHsgcG9zaXRpb24gPSAwOyB9XG4gICAgICAgIGlmIChTdHJpbmcucHJvdG90eXBlLmluY2x1ZGVzKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyLmluY2x1ZGVzKHNlYXJjaFN0cmluZywgcG9zaXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdHIuaW5kZXhPZihzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKSA9PT0gcG9zaXRpb247XG4gICAgfTtcbiAgICBTdHJpbmdXcmFwcGVyLnN0YXJ0c1dpdGggPSBmdW5jdGlvbiAoc3RyLCBzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKSB7XG4gICAgICAgIGlmIChwb3NpdGlvbiA9PT0gdm9pZCAwKSB7IHBvc2l0aW9uID0gMDsgfVxuICAgICAgICBpZiAoU3RyaW5nLnByb3RvdHlwZS5zdGFydHNXaXRoKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyLnN0YXJ0c1dpdGgoc2VhcmNoU3RyaW5nLCBwb3NpdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN0ci5pbmRleE9mKHNlYXJjaFN0cmluZywgcG9zaXRpb24pID09PSBwb3NpdGlvbjtcbiAgICB9O1xuICAgIFN0cmluZ1dyYXBwZXIuZW5kc1dpdGggPSBmdW5jdGlvbiAoc3RyLCBzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKSB7XG4gICAgICAgIGlmIChTdHJpbmcucHJvdG90eXBlLmVuZHNXaXRoKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RyLmVuZHNXaXRoKHNlYXJjaFN0cmluZywgcG9zaXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzdWJqZWN0U3RyaW5nID0gc3RyLnRvU3RyaW5nKCk7XG4gICAgICAgIGlmICghbGFuZ18xLmlzTnVtYmVyKHBvc2l0aW9uKSB8fCAhaXNGaW5pdGUocG9zaXRpb24pXG4gICAgICAgICAgICB8fCBNYXRoLmZsb29yKHBvc2l0aW9uKSAhPT0gcG9zaXRpb24gfHwgcG9zaXRpb24gPiBzdWJqZWN0U3RyaW5nLmxlbmd0aCkge1xuICAgICAgICAgICAgcG9zaXRpb24gPSBzdWJqZWN0U3RyaW5nLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBwb3NpdGlvbiAtPSBzZWFyY2hTdHJpbmcubGVuZ3RoO1xuICAgICAgICB2YXIgbGFzdEluZGV4ID0gc3ViamVjdFN0cmluZy5pbmRleE9mKHNlYXJjaFN0cmluZywgcG9zaXRpb24pO1xuICAgICAgICByZXR1cm4gbGFzdEluZGV4ICE9PSAtMSAmJiBsYXN0SW5kZXggPT09IHBvc2l0aW9uO1xuICAgIH07XG4gICAgU3RyaW5nV3JhcHBlci5rZWJhYkNhc2UgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICByZXR1cm4gX2tlYmFiQ2FzZShuYW1lKTtcbiAgICB9O1xuICAgIFN0cmluZ1dyYXBwZXIuc25ha2VDYXNlID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIF9zbmFrZUNhc2UobmFtZSk7XG4gICAgfTtcbiAgICByZXR1cm4gU3RyaW5nV3JhcHBlcjtcbn0oKSk7XG5leHBvcnRzLlN0cmluZ1dyYXBwZXIgPSBTdHJpbmdXcmFwcGVyO1xuZnVuY3Rpb24gX2Nhc2VUcmFuc2Zvcm1lckZhY3Rvcnkoc2VwYXJhdG9yKSB7XG4gICAgdmFyIFNOQUtFX0NBU0VfUkVHRVhQID0gL1tBLVpdL2c7XG4gICAgcmV0dXJuIF9jYXNlVHJhbnNmb3JtO1xuICAgIGZ1bmN0aW9uIF9jYXNlVHJhbnNmb3JtKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5hbWUucmVwbGFjZShTTkFLRV9DQVNFX1JFR0VYUCwgZnVuY3Rpb24gKG1hdGNoLCBvZmZzZXQpIHtcbiAgICAgICAgICAgIHJldHVybiAob2Zmc2V0XG4gICAgICAgICAgICAgICAgPyBzZXBhcmF0b3JcbiAgICAgICAgICAgICAgICA6ICcnKSArIG1hdGNoLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByaW1pdGl2ZXMuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9mYWNhZGUvcHJpbWl0aXZlcy5qc1xuLy8gbW9kdWxlIGlkID0gMjVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 26 */
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ./~/ng-metadata/src/facade/type.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @whatItDoes Represents a type that a Component or other object is instances of.\n *\n * @description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @stable\n */\nexports.Type = Function;\n//# sourceMappingURL=type.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9mYWNhZGUvdHlwZS5qcz9kMTQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBAd2hhdEl0RG9lcyBSZXByZXNlbnRzIGEgdHlwZSB0aGF0IGEgQ29tcG9uZW50IG9yIG90aGVyIG9iamVjdCBpcyBpbnN0YW5jZXMgb2YuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQW4gZXhhbXBsZSBvZiBhIGBUeXBlYCBpcyBgTXlDdXN0b21Db21wb25lbnRgIGNsYXNzLCB3aGljaCBpbiBKYXZhU2NyaXB0IGlzIGJlIHJlcHJlc2VudGVkIGJ5XG4gKiB0aGUgYE15Q3VzdG9tQ29tcG9uZW50YCBjb25zdHJ1Y3RvciBmdW5jdGlvbi5cbiAqXG4gKiBAc3RhYmxlXG4gKi9cbmV4cG9ydHMuVHlwZSA9IEZ1bmN0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZS5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2ZhY2FkZS90eXBlLmpzXG4vLyBtb2R1bGUgaWQgPSAyNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 27 */
/* unknown exports provided */
/* all exports used */
/*!****************************!*\
  !*** ./~/rxjs/Observer.js ***!
  \****************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvT2JzZXJ2ZXIuanM/ZjA5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuZW1wdHkgPSB7XG4gICAgY2xvc2VkOiB0cnVlLFxuICAgIG5leHQ6IGZ1bmN0aW9uICh2YWx1ZSkgeyB9LFxuICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyKSB7IHRocm93IGVycjsgfSxcbiAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkgeyB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T2JzZXJ2ZXIuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvT2JzZXJ2ZXIuanNcbi8vIG1vZHVsZSBpZCA9IDI3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 28 */
/* unknown exports provided */
/* all exports used */
/*!******************************!*\
  !*** ./~/rxjs/Subscriber.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isFunction_1 = __webpack_require__(/*! ./util/isFunction */ 30);\nvar Subscription_1 = __webpack_require__(/*! ./Subscription */ 15);\nvar Observer_1 = __webpack_require__(/*! ./Observer */ 27);\nvar rxSubscriber_1 = __webpack_require__(/*! ./symbol/rxSubscriber */ 16);\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer_1.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer_1.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nexports.Subscriber = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer_1.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._complete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._complete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n//# sourceMappingURL=Subscriber.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 29 */
/* unknown exports provided */
/* all exports used */
/*!************************************!*\
  !*** ./~/rxjs/util/errorObject.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// typeof any so that it we don't have to cast when comparing a result to the error object\nexports.errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC9lcnJvck9iamVjdC5qcz9mNDliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gdHlwZW9mIGFueSBzbyB0aGF0IGl0IHdlIGRvbid0IGhhdmUgdG8gY2FzdCB3aGVuIGNvbXBhcmluZyBhIHJlc3VsdCB0byB0aGUgZXJyb3Igb2JqZWN0XG5leHBvcnRzLmVycm9yT2JqZWN0ID0geyBlOiB7fSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JPYmplY3QuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvdXRpbC9lcnJvck9iamVjdC5qc1xuLy8gbW9kdWxlIGlkID0gMjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 30 */
/* unknown exports provided */
/* all exports used */
/*!***********************************!*\
  !*** ./~/rxjs/util/isFunction.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nexports.isFunction = isFunction;\n//# sourceMappingURL=isFunction.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC9pc0Z1bmN0aW9uLmpzPzUxYzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHggPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNGdW5jdGlvbi5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vcnhqcy91dGlsL2lzRnVuY3Rpb24uanNcbi8vIG1vZHVsZSBpZCA9IDMwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 31 */
/* unknown exports provided */
/* all exports used */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XHJcblxyXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxyXG5nID0gKGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB0aGlzO1xyXG59KSgpO1xyXG5cclxudHJ5IHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcclxuXHRnID0gZyB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkgfHwgKDEsZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpXHJcblx0XHRnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSAzMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 32 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./src/app.module.ts ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(/*! ng-metadata/core */ 10);\r\nvar app_component_1 = __webpack_require__(/*! ./app.component */ 34);\r\nvar horaire_component_1 = __webpack_require__(/*! ./component/horaire.component */ 35);\r\nvar AppModule = (function () {\r\n    function AppModule() {\r\n    }\r\n    return AppModule;\r\n}());\r\nAppModule = __decorate([\r\n    core_1.NgModule({\r\n        declarations: [app_component_1.AppComponent, horaire_component_1.HoraireComponent]\r\n    })\r\n], AppModule);\r\nexports.AppModule = AppModule;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2FwcC5tb2R1bGUudHM/YzE0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ25nLW1ldGFkYXRhL2NvcmUnO1xyXG5pbXBvcnQgeyBBcHBDb21wb25lbnQgfSBmcm9tICcuL2FwcC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBIb3JhaXJlQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnQvaG9yYWlyZS5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGRlY2xhcmF0aW9uczogW0FwcENvbXBvbmVudCxIb3JhaXJlQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXBwTW9kdWxlIHtcclxuXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9hcHAubW9kdWxlLnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUtBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFGQTtBQUhBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 33 */
/* unknown exports provided */
/* all exports used */
/*!***************************************************!*\
  !*** ./~/ng-metadata/platform-browser-dynamic.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./src/platform/browser */ 64));\n//# sourceMappingURL=platform-browser-dynamic.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3BsYXRmb3JtLWJyb3dzZXItZHluYW1pYy5qcz85MTI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gX19leHBvcnQobSkge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKCFleHBvcnRzLmhhc093blByb3BlcnR5KHApKSBleHBvcnRzW3BdID0gbVtwXTtcbn1cbl9fZXhwb3J0KHJlcXVpcmUoXCIuL3NyYy9wbGF0Zm9ybS9icm93c2VyXCIpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBsYXRmb3JtLWJyb3dzZXItZHluYW1pYy5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvcGxhdGZvcm0tYnJvd3Nlci1keW5hbWljLmpzXG4vLyBtb2R1bGUgaWQgPSAzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 34 */
/* unknown exports provided */
/* all exports used */
/*!******************************!*\
  !*** ./src/app.component.ts ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(/*! ng-metadata/core */ 10);\r\nvar AppComponent = (function () {\r\n    function AppComponent() {\r\n        this.name = 'Martin';\r\n    }\r\n    AppComponent.prototype.onCall = function () { };\r\n    return AppComponent;\r\n}());\r\nAppComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'my-app',\r\n        moduleId: module.i,\r\n        template: \"\"\r\n    })\r\n], AppComponent);\r\nexports.AppComponent = AppComponent;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2FwcC5jb21wb25lbnQudHM/OWQxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICduZy1tZXRhZGF0YS9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdteS1hcHAnLFxyXG4gICAgbW9kdWxlSWQ6IG1vZHVsZS5pZCxcclxuICAgIHRlbXBsYXRlOiBgYFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXBwQ29tcG9uZW50IHtcclxuICAgIG5hbWUgPSAnTWFydGluJztcclxuICAgIG9uQ2FsbCgpeyAvKi4uLiovIH1cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2FwcC5jb21wb25lbnQudHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFPQTtBQUxBO0FBTUE7QUFFQTtBQURBO0FBQ0E7QUFBQTtBQUhBO0FBTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 35 */
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ./src/component/horaire.component.ts ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(/*! ng-metadata/core */ 10);\r\nvar HoraireComponent = (function () {\r\n    function HoraireComponent() {\r\n    }\r\n    return HoraireComponent;\r\n}());\r\nHoraireComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'horaires',\r\n        template: \"\"\r\n    })\r\n], HoraireComponent);\r\nexports.HoraireComponent = HoraireComponent;\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudC9ob3JhaXJlLmNvbXBvbmVudC50cz8yMmUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ25nLW1ldGFkYXRhL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2hvcmFpcmVzJyxcclxuICAgIHRlbXBsYXRlOiBgYFxyXG59KVxyXG5leHBvcnQgY2xhc3MgSG9yYWlyZUNvbXBvbmVudCB7XHJcblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29tcG9uZW50L2hvcmFpcmUuY29tcG9uZW50LnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBTUE7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUZBO0FBSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 36 */
/* unknown exports provided */
/* all exports used */
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_dynamic_1 = __webpack_require__(/*! ng-metadata/platform-browser-dynamic */ 33);\r\nvar app_module_1 = __webpack_require__(/*! ./app.module */ 32);\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21haW4udHM/OGNmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwbGF0Zm9ybUJyb3dzZXJEeW5hbWljIH0gZnJvbSAnbmctbWV0YWRhdGEvcGxhdGZvcm0tYnJvd3Nlci1keW5hbWljJztcclxuaW1wb3J0IHsgQXBwTW9kdWxlIH0gZnJvbSAnLi9hcHAubW9kdWxlJztcclxuXHJcbnBsYXRmb3JtQnJvd3NlckR5bmFtaWMoKS5ib290c3RyYXBNb2R1bGUoQXBwTW9kdWxlKTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tYWluLnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7QUFFQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 37 */
/* unknown exports provided */
/* all exports used */
/*!****************************************************!*\
  !*** ./~/ng-metadata/src/core/change_detection.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar change_detection_util_1 = __webpack_require__(/*! ./change_detection/change_detection_util */ 18);\nexports.SimpleChange = change_detection_util_1.SimpleChange;\nvar constants_1 = __webpack_require__(/*! ./change_detection/constants */ 39);\nexports.ChangeDetectionStrategy = constants_1.ChangeDetectionStrategy;\nvar change_detector_ref_1 = __webpack_require__(/*! ./change_detection/change_detector_ref */ 19);\nexports.ChangeDetectorRef = change_detector_ref_1.ChangeDetectorRef;\n//# sourceMappingURL=change_detection.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24uanM/OWYxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBjaGFuZ2VfZGV0ZWN0aW9uX3V0aWxfMSA9IHJlcXVpcmUoXCIuL2NoYW5nZV9kZXRlY3Rpb24vY2hhbmdlX2RldGVjdGlvbl91dGlsXCIpO1xuZXhwb3J0cy5TaW1wbGVDaGFuZ2UgPSBjaGFuZ2VfZGV0ZWN0aW9uX3V0aWxfMS5TaW1wbGVDaGFuZ2U7XG52YXIgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jaGFuZ2VfZGV0ZWN0aW9uL2NvbnN0YW50c1wiKTtcbmV4cG9ydHMuQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgPSBjb25zdGFudHNfMS5DaGFuZ2VEZXRlY3Rpb25TdHJhdGVneTtcbnZhciBjaGFuZ2VfZGV0ZWN0b3JfcmVmXzEgPSByZXF1aXJlKFwiLi9jaGFuZ2VfZGV0ZWN0aW9uL2NoYW5nZV9kZXRlY3Rvcl9yZWZcIik7XG5leHBvcnRzLkNoYW5nZURldGVjdG9yUmVmID0gY2hhbmdlX2RldGVjdG9yX3JlZl8xLkNoYW5nZURldGVjdG9yUmVmO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hhbmdlX2RldGVjdGlvbi5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvY2hhbmdlX2RldGVjdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gMzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 38 */
/* unknown exports provided */
/* all exports used */
/*!******************************************************************!*\
  !*** ./~/ng-metadata/src/core/change_detection/changes_queue.js ***!
  \******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n// @TODO this needs to be in a singleton\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar TTL = 10;\nvar onChangesTtl = TTL;\nvar ChangesQueue = (function () {\n    function ChangesQueue() {\n    }\n    ChangesQueue.prototype.buildFlushOnChanges = function ($rootScope) {\n        var _context = this;\n        buildFlushOnChangesCb($rootScope);\n        function buildFlushOnChangesCb($rootScope) {\n            if (lang_1.isFunction(_context.flushOnChangesQueue)) {\n                return _context.flushOnChangesQueue;\n            }\n            _context.flushOnChangesQueue = getFlushOnChangesQueueCb($rootScope);\n            return _context.flushOnChangesQueue;\n        }\n        function getFlushOnChangesQueueCb($rootScope) {\n            // This function is called in a $$postDigest to trigger all the onChanges hooks in a single digest\n            return function _flushOnChangesQueue() {\n                try {\n                    if (!(--onChangesTtl)) {\n                        // We have hit the TTL limit so reset everything\n                        _context.onChangesQueue = undefined;\n                        throw new Error(\"infchng, \" + TTL + \" ngOnChanges() iterations reached. Aborting!\\n\");\n                    }\n                    // We must run this hook in an apply since the $$postDigest runs outside apply\n                    $rootScope.$apply(function () {\n                        for (var i = 0, ii = _context.onChangesQueue.length; i < ii; ++i) {\n                            _context.onChangesQueue[i]();\n                        }\n                        // Reset the queue to trigger a new schedule next time there is a change\n                        _context.onChangesQueue = undefined;\n                    });\n                }\n                finally {\n                    onChangesTtl++;\n                }\n            };\n        }\n    };\n    return ChangesQueue;\n}());\nexports.ChangesQueue = ChangesQueue;\nexports.changesQueueService = new ChangesQueue();\n//# sourceMappingURL=changes_queue.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vY2hhbmdlc19xdWV1ZS5qcz83NWRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQFRPRE8gdGhpcyBuZWVkcyB0byBiZSBpbiBhIHNpbmdsZXRvblxudmFyIGxhbmdfMSA9IHJlcXVpcmUoXCIuLi8uLi9mYWNhZGUvbGFuZ1wiKTtcbnZhciBUVEwgPSAxMDtcbnZhciBvbkNoYW5nZXNUdGwgPSBUVEw7XG52YXIgQ2hhbmdlc1F1ZXVlID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBDaGFuZ2VzUXVldWUoKSB7XG4gICAgfVxuICAgIENoYW5nZXNRdWV1ZS5wcm90b3R5cGUuYnVpbGRGbHVzaE9uQ2hhbmdlcyA9IGZ1bmN0aW9uICgkcm9vdFNjb3BlKSB7XG4gICAgICAgIHZhciBfY29udGV4dCA9IHRoaXM7XG4gICAgICAgIGJ1aWxkRmx1c2hPbkNoYW5nZXNDYigkcm9vdFNjb3BlKTtcbiAgICAgICAgZnVuY3Rpb24gYnVpbGRGbHVzaE9uQ2hhbmdlc0NiKCRyb290U2NvcGUpIHtcbiAgICAgICAgICAgIGlmIChsYW5nXzEuaXNGdW5jdGlvbihfY29udGV4dC5mbHVzaE9uQ2hhbmdlc1F1ZXVlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5mbHVzaE9uQ2hhbmdlc1F1ZXVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX2NvbnRleHQuZmx1c2hPbkNoYW5nZXNRdWV1ZSA9IGdldEZsdXNoT25DaGFuZ2VzUXVldWVDYigkcm9vdFNjb3BlKTtcbiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5mbHVzaE9uQ2hhbmdlc1F1ZXVlO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGdldEZsdXNoT25DaGFuZ2VzUXVldWVDYigkcm9vdFNjb3BlKSB7XG4gICAgICAgICAgICAvLyBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBpbiBhICQkcG9zdERpZ2VzdCB0byB0cmlnZ2VyIGFsbCB0aGUgb25DaGFuZ2VzIGhvb2tzIGluIGEgc2luZ2xlIGRpZ2VzdFxuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIF9mbHVzaE9uQ2hhbmdlc1F1ZXVlKCkge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKC0tb25DaGFuZ2VzVHRsKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2UgaGF2ZSBoaXQgdGhlIFRUTCBsaW1pdCBzbyByZXNldCBldmVyeXRoaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5vbkNoYW5nZXNRdWV1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImluZmNobmcsIFwiICsgVFRMICsgXCIgbmdPbkNoYW5nZXMoKSBpdGVyYXRpb25zIHJlYWNoZWQuIEFib3J0aW5nIVxcblwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAvLyBXZSBtdXN0IHJ1biB0aGlzIGhvb2sgaW4gYW4gYXBwbHkgc2luY2UgdGhlICQkcG9zdERpZ2VzdCBydW5zIG91dHNpZGUgYXBwbHlcbiAgICAgICAgICAgICAgICAgICAgJHJvb3RTY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGlpID0gX2NvbnRleHQub25DaGFuZ2VzUXVldWUubGVuZ3RoOyBpIDwgaWk7ICsraSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm9uQ2hhbmdlc1F1ZXVlW2ldKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXNldCB0aGUgcXVldWUgdG8gdHJpZ2dlciBhIG5ldyBzY2hlZHVsZSBuZXh0IHRpbWUgdGhlcmUgaXMgYSBjaGFuZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm9uQ2hhbmdlc1F1ZXVlID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlc1R0bCsrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBDaGFuZ2VzUXVldWU7XG59KCkpO1xuZXhwb3J0cy5DaGFuZ2VzUXVldWUgPSBDaGFuZ2VzUXVldWU7XG5leHBvcnRzLmNoYW5nZXNRdWV1ZVNlcnZpY2UgPSBuZXcgQ2hhbmdlc1F1ZXVlKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaGFuZ2VzX3F1ZXVlLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9jaGFuZ2VfZGV0ZWN0aW9uL2NoYW5nZXNfcXVldWUuanNcbi8vIG1vZHVsZSBpZCA9IDM4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 39 */
/* unknown exports provided */
/* all exports used */
/*!**************************************************************!*\
  !*** ./~/ng-metadata/src/core/change_detection/constants.js ***!
  \**************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\n/**\n * Describes the current state of the change detector.\n */\nvar ChangeDetectorState;\n(function (ChangeDetectorState) {\n    /**\n     * `NeverChecked` means that the change detector has not been checked yet, and\n     * initialization methods should be called during detection.\n     */\n    ChangeDetectorState[ChangeDetectorState[\"NeverChecked\"] = 0] = \"NeverChecked\";\n    /**\n     * `CheckedBefore` means that the change detector has successfully completed at least\n     * one detection previously.\n     */\n    ChangeDetectorState[ChangeDetectorState[\"CheckedBefore\"] = 1] = \"CheckedBefore\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorState[ChangeDetectorState[\"Errored\"] = 2] = \"Errored\";\n})(ChangeDetectorState = exports.ChangeDetectorState || (exports.ChangeDetectorState = {}));\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n */\nvar ChangeDetectionStrategy;\n(function (ChangeDetectionStrategy) {\n    /**\n     * `CheckedOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    // CheckOnce,\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    // Checked,\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    // CheckAlways,\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    // Detached,\n    /**\n     * `OnPush` means that the change detector's mode will be set to `CheckOnce` during hydration.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be set to `CheckAlways` during hydration.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(ChangeDetectionStrategy = exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * List of possible {@link ChangeDetectionStrategy} values.\n */\nexports.CHANGE_DETECTION_STRATEGY_VALUES = [\n    // ChangeDetectionStrategy.CheckOnce,\n    // ChangeDetectionStrategy.Checked,\n    // ChangeDetectionStrategy.CheckAlways,\n    // ChangeDetectionStrategy.Detached,\n    0 /* OnPush */,\n    1 /* Default */\n];\n/**\n * List of possible {@link ChangeDetectorState} values.\n */\nexports.CHANGE_DETECTOR_STATE_VALUES = [\n    0 /* NeverChecked */,\n    1 /* CheckedBefore */,\n    2 /* Errored */\n];\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return lang_1.isBlank(changeDetectionStrategy) || changeDetectionStrategy === 1 /* Default */;\n}\nexports.isDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n//# sourceMappingURL=constants.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vY29uc3RhbnRzLmpzP2Y0YzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgbGFuZ18xID0gcmVxdWlyZShcIi4uLy4uL2ZhY2FkZS9sYW5nXCIpO1xuLyoqXG4gKiBEZXNjcmliZXMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGNoYW5nZSBkZXRlY3Rvci5cbiAqL1xudmFyIENoYW5nZURldGVjdG9yU3RhdGU7XG4oZnVuY3Rpb24gKENoYW5nZURldGVjdG9yU3RhdGUpIHtcbiAgICAvKipcbiAgICAgKiBgTmV2ZXJDaGVja2VkYCBtZWFucyB0aGF0IHRoZSBjaGFuZ2UgZGV0ZWN0b3IgaGFzIG5vdCBiZWVuIGNoZWNrZWQgeWV0LCBhbmRcbiAgICAgKiBpbml0aWFsaXphdGlvbiBtZXRob2RzIHNob3VsZCBiZSBjYWxsZWQgZHVyaW5nIGRldGVjdGlvbi5cbiAgICAgKi9cbiAgICBDaGFuZ2VEZXRlY3RvclN0YXRlW0NoYW5nZURldGVjdG9yU3RhdGVbXCJOZXZlckNoZWNrZWRcIl0gPSAwXSA9IFwiTmV2ZXJDaGVja2VkXCI7XG4gICAgLyoqXG4gICAgICogYENoZWNrZWRCZWZvcmVgIG1lYW5zIHRoYXQgdGhlIGNoYW5nZSBkZXRlY3RvciBoYXMgc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlZCBhdCBsZWFzdFxuICAgICAqIG9uZSBkZXRlY3Rpb24gcHJldmlvdXNseS5cbiAgICAgKi9cbiAgICBDaGFuZ2VEZXRlY3RvclN0YXRlW0NoYW5nZURldGVjdG9yU3RhdGVbXCJDaGVja2VkQmVmb3JlXCJdID0gMV0gPSBcIkNoZWNrZWRCZWZvcmVcIjtcbiAgICAvKipcbiAgICAgKiBgRXJyb3JlZGAgbWVhbnMgdGhhdCB0aGUgY2hhbmdlIGRldGVjdG9yIGVuY291bnRlcmVkIGFuIGVycm9yIGNoZWNraW5nIGEgYmluZGluZ1xuICAgICAqIG9yIGNhbGxpbmcgYSBkaXJlY3RpdmUgbGlmZWN5Y2xlIG1ldGhvZCBhbmQgaXMgbm93IGluIGFuIGluY29uc2lzdGVudCBzdGF0ZS4gQ2hhbmdlXG4gICAgICogZGV0ZWN0b3JzIGluIHRoaXMgc3RhdGUgd2lsbCBubyBsb25nZXIgZGV0ZWN0IGNoYW5nZXMuXG4gICAgICovXG4gICAgQ2hhbmdlRGV0ZWN0b3JTdGF0ZVtDaGFuZ2VEZXRlY3RvclN0YXRlW1wiRXJyb3JlZFwiXSA9IDJdID0gXCJFcnJvcmVkXCI7XG59KShDaGFuZ2VEZXRlY3RvclN0YXRlID0gZXhwb3J0cy5DaGFuZ2VEZXRlY3RvclN0YXRlIHx8IChleHBvcnRzLkNoYW5nZURldGVjdG9yU3RhdGUgPSB7fSkpO1xuLyoqXG4gKiBEZXNjcmliZXMgd2l0aGluIHRoZSBjaGFuZ2UgZGV0ZWN0b3Igd2hpY2ggc3RyYXRlZ3kgd2lsbCBiZSB1c2VkIHRoZSBuZXh0IHRpbWUgY2hhbmdlXG4gKiBkZXRlY3Rpb24gaXMgdHJpZ2dlcmVkLlxuICovXG52YXIgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3k7XG4oZnVuY3Rpb24gKENoYW5nZURldGVjdGlvblN0cmF0ZWd5KSB7XG4gICAgLyoqXG4gICAgICogYENoZWNrZWRPbmNlYCBtZWFucyB0aGF0IGFmdGVyIGNhbGxpbmcgZGV0ZWN0Q2hhbmdlcyB0aGUgbW9kZSBvZiB0aGUgY2hhbmdlIGRldGVjdG9yXG4gICAgICogd2lsbCBiZWNvbWUgYENoZWNrZWRgLlxuICAgICAqL1xuICAgIC8vIENoZWNrT25jZSxcbiAgICAvKipcbiAgICAgKiBgQ2hlY2tlZGAgbWVhbnMgdGhhdCB0aGUgY2hhbmdlIGRldGVjdG9yIHNob3VsZCBiZSBza2lwcGVkIHVudGlsIGl0cyBtb2RlIGNoYW5nZXMgdG9cbiAgICAgKiBgQ2hlY2tPbmNlYC5cbiAgICAgKi9cbiAgICAvLyBDaGVja2VkLFxuICAgIC8qKlxuICAgICAqIGBDaGVja0Fsd2F5c2AgbWVhbnMgdGhhdCBhZnRlciBjYWxsaW5nIGRldGVjdENoYW5nZXMgdGhlIG1vZGUgb2YgdGhlIGNoYW5nZSBkZXRlY3RvclxuICAgICAqIHdpbGwgcmVtYWluIGBDaGVja0Fsd2F5c2AuXG4gICAgICovXG4gICAgLy8gQ2hlY2tBbHdheXMsXG4gICAgLyoqXG4gICAgICogYERldGFjaGVkYCBtZWFucyB0aGF0IHRoZSBjaGFuZ2UgZGV0ZWN0b3Igc3ViIHRyZWUgaXMgbm90IGEgcGFydCBvZiB0aGUgbWFpbiB0cmVlIGFuZFxuICAgICAqIHNob3VsZCBiZSBza2lwcGVkLlxuICAgICAqL1xuICAgIC8vIERldGFjaGVkLFxuICAgIC8qKlxuICAgICAqIGBPblB1c2hgIG1lYW5zIHRoYXQgdGhlIGNoYW5nZSBkZXRlY3RvcidzIG1vZGUgd2lsbCBiZSBzZXQgdG8gYENoZWNrT25jZWAgZHVyaW5nIGh5ZHJhdGlvbi5cbiAgICAgKi9cbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneVtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneVtcIk9uUHVzaFwiXSA9IDBdID0gXCJPblB1c2hcIjtcbiAgICAvKipcbiAgICAgKiBgRGVmYXVsdGAgbWVhbnMgdGhhdCB0aGUgY2hhbmdlIGRldGVjdG9yJ3MgbW9kZSB3aWxsIGJlIHNldCB0byBgQ2hlY2tBbHdheXNgIGR1cmluZyBoeWRyYXRpb24uXG4gICAgICovXG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3lbQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3lbXCJEZWZhdWx0XCJdID0gMV0gPSBcIkRlZmF1bHRcIjtcbn0pKENoYW5nZURldGVjdGlvblN0cmF0ZWd5ID0gZXhwb3J0cy5DaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB8fCAoZXhwb3J0cy5DaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSA9IHt9KSk7XG4vKipcbiAqIExpc3Qgb2YgcG9zc2libGUge0BsaW5rIENoYW5nZURldGVjdGlvblN0cmF0ZWd5fSB2YWx1ZXMuXG4gKi9cbmV4cG9ydHMuQ0hBTkdFX0RFVEVDVElPTl9TVFJBVEVHWV9WQUxVRVMgPSBbXG4gICAgLy8gQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuQ2hlY2tPbmNlLFxuICAgIC8vIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LkNoZWNrZWQsXG4gICAgLy8gQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuQ2hlY2tBbHdheXMsXG4gICAgLy8gQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuRGV0YWNoZWQsXG4gICAgMCAvKiBPblB1c2ggKi8sXG4gICAgMSAvKiBEZWZhdWx0ICovXG5dO1xuLyoqXG4gKiBMaXN0IG9mIHBvc3NpYmxlIHtAbGluayBDaGFuZ2VEZXRlY3RvclN0YXRlfSB2YWx1ZXMuXG4gKi9cbmV4cG9ydHMuQ0hBTkdFX0RFVEVDVE9SX1NUQVRFX1ZBTFVFUyA9IFtcbiAgICAwIC8qIE5ldmVyQ2hlY2tlZCAqLyxcbiAgICAxIC8qIENoZWNrZWRCZWZvcmUgKi8sXG4gICAgMiAvKiBFcnJvcmVkICovXG5dO1xuZnVuY3Rpb24gaXNEZWZhdWx0Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3koY2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kpIHtcbiAgICByZXR1cm4gbGFuZ18xLmlzQmxhbmsoY2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kpIHx8IGNoYW5nZURldGVjdGlvblN0cmF0ZWd5ID09PSAxIC8qIERlZmF1bHQgKi87XG59XG5leHBvcnRzLmlzRGVmYXVsdENoYW5nZURldGVjdGlvblN0cmF0ZWd5ID0gaXNEZWZhdWx0Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3k7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2NoYW5nZV9kZXRlY3Rpb24vY29uc3RhbnRzLmpzXG4vLyBtb2R1bGUgaWQgPSAzOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 40 */
/* unknown exports provided */
/* all exports used */
/*!**************************************!*\
  !*** ./~/ng-metadata/src/core/di.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./di/decorators */ 11));\n__export(__webpack_require__(/*! ./di/metadata */ 2));\nvar opaque_token_1 = __webpack_require__(/*! ./di/opaque_token */ 20);\nexports.OpaqueToken = opaque_token_1.OpaqueToken;\nvar forward_ref_1 = __webpack_require__(/*! ./di/forward_ref */ 6);\nexports.forwardRef = forward_ref_1.forwardRef;\nvar provider_1 = __webpack_require__(/*! ./di/provider */ 5);\nexports.provide = provider_1.provide;\nexports.getInjectableName = provider_1.getInjectableName;\n//# sourceMappingURL=di.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpLmpzP2IxYWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxuX19leHBvcnQocmVxdWlyZShcIi4vZGkvZGVjb3JhdG9yc1wiKSk7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9kaS9tZXRhZGF0YVwiKSk7XG52YXIgb3BhcXVlX3Rva2VuXzEgPSByZXF1aXJlKFwiLi9kaS9vcGFxdWVfdG9rZW5cIik7XG5leHBvcnRzLk9wYXF1ZVRva2VuID0gb3BhcXVlX3Rva2VuXzEuT3BhcXVlVG9rZW47XG52YXIgZm9yd2FyZF9yZWZfMSA9IHJlcXVpcmUoXCIuL2RpL2ZvcndhcmRfcmVmXCIpO1xuZXhwb3J0cy5mb3J3YXJkUmVmID0gZm9yd2FyZF9yZWZfMS5mb3J3YXJkUmVmO1xudmFyIHByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9kaS9wcm92aWRlclwiKTtcbmV4cG9ydHMucHJvdmlkZSA9IHByb3ZpZGVyXzEucHJvdmlkZTtcbmV4cG9ydHMuZ2V0SW5qZWN0YWJsZU5hbWUgPSBwcm92aWRlcl8xLmdldEluamVjdGFibGVOYW1lO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGkuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpLmpzXG4vLyBtb2R1bGUgaWQgPSA0MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 41 */
/* unknown exports provided */
/* all exports used */
/*!******************************************!*\
  !*** ./~/ng-metadata/src/core/di/key.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar collections_1 = __webpack_require__(/*! ../../facade/collections */ 1);\nvar lang_2 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar lang_3 = __webpack_require__(/*! ../../facade/lang */ 0);\n/**\n * @TODO\n * this module is not used, we can leverage the Key creation for\n * caching @Inject token to string names for performance\n */\n/**\n * A unique object used for retrieving items from the {@link Injector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link Injector} because its system-wide unique `id` allows the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link Injector} creates keys automatically when resolving\n * providers.\n */\n//export class Key {\n//  /**\n//   * Private\n//   */\n//  constructor( public token: Object, public id: number ) {\n//    if ( isBlank( token ) ) {\n//      throw new Error( 'Token must be defined!' );\n//    }\n//  }\n//\n//  /**\n//   * Returns a stringified token.\n//   */\n//  get displayName(): string { return stringify( this.token ); }\n//\n//  /**\n//   * Retrieves a `Key` for a token.\n//   */\n//  static get( token: Object ): Key { return _globalKeyRegistry.get( resolveForwardRef( token ) ); }\n//\n//  /**\n//   * @returns the number of keys registered in the system.\n//   */\n//  static get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n//}\n/**\n * @internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = collections_1.ListWrapper.create();\n        this._idCounter = 0;\n    }\n    //get( token: string | OpaqueToken | Type ): string {\n    //  // Return it if it is already a string like `'$http'` or `'$state'`\n    //  if(isString(token)) {\n    //    return token;\n    //  }\n    //  if(token instanceof OpaqueToken){\n    //    return token.desc;\n    //  }\n    //\n    //  const tokenString = stringify( token );\n    //  const hasToken = StringMapWrapper.contains( this._allKeys, tokenString );\n    //\n    //  if ( hasToken ) {\n    //    return tokenString;\n    //  }\n    //\n    //  const newKey = `${ tokenString }${ this._uniqueId() }`;\n    //  StringMapWrapper.set( this._allKeys, newKey, token );\n    //  return newKey;\n    //}\n    /**\n     *\n     * @param token\n     * @returns {*}\n     */\n    KeyRegistry.prototype.get = function (token) {\n        if (!lang_2.isType(token)) {\n            throw new Error(\"KeyRegistry#get:\\n                        ================\\n                        you'v tried to create a key for `\" + token + \"`\\n                        creating and getting key tokens is avaialable only for Type\");\n        }\n        var newKey = \"\" + lang_3.getTypeName(token) + KeyRegistry._suffix + this._uniqueId();\n        this._allKeys.push(newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return collections_1.ListWrapper.size(this._allKeys); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(KeyRegistry.prototype, \"allKeys\", {\n        get: function () { return collections_1.ListWrapper.clone(this._allKeys); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * just for testing purposes\n     * @private\n     * @internal\n     */\n    KeyRegistry.prototype._reset = function () {\n        collections_1.ListWrapper.clear(this._allKeys);\n        this._idCounter = 0;\n    };\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _uniqueId();\n     * // => '105'\n     */\n    KeyRegistry.prototype._uniqueId = function (prefix) {\n        var id = ++this._idCounter;\n        return \"\" + lang_1.baseToString(prefix) + id;\n    };\n    return KeyRegistry;\n}());\nKeyRegistry._suffix = \"#\";\nexports.KeyRegistry = KeyRegistry;\nexports.globalKeyRegistry = new KeyRegistry();\n//# sourceMappingURL=key.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpL2tleS5qcz84ZDk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIGxhbmdfMSA9IHJlcXVpcmUoXCIuLi8uLi9mYWNhZGUvbGFuZ1wiKTtcbnZhciBjb2xsZWN0aW9uc18xID0gcmVxdWlyZShcIi4uLy4uL2ZhY2FkZS9jb2xsZWN0aW9uc1wiKTtcbnZhciBsYW5nXzIgPSByZXF1aXJlKFwiLi4vLi4vZmFjYWRlL2xhbmdcIik7XG52YXIgbGFuZ18zID0gcmVxdWlyZShcIi4uLy4uL2ZhY2FkZS9sYW5nXCIpO1xuLyoqXG4gKiBAVE9ET1xuICogdGhpcyBtb2R1bGUgaXMgbm90IHVzZWQsIHdlIGNhbiBsZXZlcmFnZSB0aGUgS2V5IGNyZWF0aW9uIGZvclxuICogY2FjaGluZyBASW5qZWN0IHRva2VuIHRvIHN0cmluZyBuYW1lcyBmb3IgcGVyZm9ybWFuY2VcbiAqL1xuLyoqXG4gKiBBIHVuaXF1ZSBvYmplY3QgdXNlZCBmb3IgcmV0cmlldmluZyBpdGVtcyBmcm9tIHRoZSB7QGxpbmsgSW5qZWN0b3J9LlxuICpcbiAqIEtleXMgaGF2ZTpcbiAqIC0gYSBzeXN0ZW0td2lkZSB1bmlxdWUgYGlkYC5cbiAqIC0gYSBgdG9rZW5gLlxuICpcbiAqIGBLZXlgIGlzIHVzZWQgaW50ZXJuYWxseSBieSB7QGxpbmsgSW5qZWN0b3J9IGJlY2F1c2UgaXRzIHN5c3RlbS13aWRlIHVuaXF1ZSBgaWRgIGFsbG93cyB0aGVcbiAqIGluamVjdG9yIHRvIHN0b3JlIGNyZWF0ZWQgb2JqZWN0cyBpbiBhIG1vcmUgZWZmaWNpZW50IHdheS5cbiAqXG4gKiBgS2V5YCBzaG91bGQgbm90IGJlIGNyZWF0ZWQgZGlyZWN0bHkuIHtAbGluayBJbmplY3Rvcn0gY3JlYXRlcyBrZXlzIGF1dG9tYXRpY2FsbHkgd2hlbiByZXNvbHZpbmdcbiAqIHByb3ZpZGVycy5cbiAqL1xuLy9leHBvcnQgY2xhc3MgS2V5IHtcbi8vICAvKipcbi8vICAgKiBQcml2YXRlXG4vLyAgICovXG4vLyAgY29uc3RydWN0b3IoIHB1YmxpYyB0b2tlbjogT2JqZWN0LCBwdWJsaWMgaWQ6IG51bWJlciApIHtcbi8vICAgIGlmICggaXNCbGFuayggdG9rZW4gKSApIHtcbi8vICAgICAgdGhyb3cgbmV3IEVycm9yKCAnVG9rZW4gbXVzdCBiZSBkZWZpbmVkIScgKTtcbi8vICAgIH1cbi8vICB9XG4vL1xuLy8gIC8qKlxuLy8gICAqIFJldHVybnMgYSBzdHJpbmdpZmllZCB0b2tlbi5cbi8vICAgKi9cbi8vICBnZXQgZGlzcGxheU5hbWUoKTogc3RyaW5nIHsgcmV0dXJuIHN0cmluZ2lmeSggdGhpcy50b2tlbiApOyB9XG4vL1xuLy8gIC8qKlxuLy8gICAqIFJldHJpZXZlcyBhIGBLZXlgIGZvciBhIHRva2VuLlxuLy8gICAqL1xuLy8gIHN0YXRpYyBnZXQoIHRva2VuOiBPYmplY3QgKTogS2V5IHsgcmV0dXJuIF9nbG9iYWxLZXlSZWdpc3RyeS5nZXQoIHJlc29sdmVGb3J3YXJkUmVmKCB0b2tlbiApICk7IH1cbi8vXG4vLyAgLyoqXG4vLyAgICogQHJldHVybnMgdGhlIG51bWJlciBvZiBrZXlzIHJlZ2lzdGVyZWQgaW4gdGhlIHN5c3RlbS5cbi8vICAgKi9cbi8vICBzdGF0aWMgZ2V0IG51bWJlck9mS2V5cygpOiBudW1iZXIgeyByZXR1cm4gX2dsb2JhbEtleVJlZ2lzdHJ5Lm51bWJlck9mS2V5czsgfVxuLy99XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG52YXIgS2V5UmVnaXN0cnkgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEtleVJlZ2lzdHJ5KCkge1xuICAgICAgICB0aGlzLl9hbGxLZXlzID0gY29sbGVjdGlvbnNfMS5MaXN0V3JhcHBlci5jcmVhdGUoKTtcbiAgICAgICAgdGhpcy5faWRDb3VudGVyID0gMDtcbiAgICB9XG4gICAgLy9nZXQoIHRva2VuOiBzdHJpbmcgfCBPcGFxdWVUb2tlbiB8IFR5cGUgKTogc3RyaW5nIHtcbiAgICAvLyAgLy8gUmV0dXJuIGl0IGlmIGl0IGlzIGFscmVhZHkgYSBzdHJpbmcgbGlrZSBgJyRodHRwJ2Agb3IgYCckc3RhdGUnYFxuICAgIC8vICBpZihpc1N0cmluZyh0b2tlbikpIHtcbiAgICAvLyAgICByZXR1cm4gdG9rZW47XG4gICAgLy8gIH1cbiAgICAvLyAgaWYodG9rZW4gaW5zdGFuY2VvZiBPcGFxdWVUb2tlbil7XG4gICAgLy8gICAgcmV0dXJuIHRva2VuLmRlc2M7XG4gICAgLy8gIH1cbiAgICAvL1xuICAgIC8vICBjb25zdCB0b2tlblN0cmluZyA9IHN0cmluZ2lmeSggdG9rZW4gKTtcbiAgICAvLyAgY29uc3QgaGFzVG9rZW4gPSBTdHJpbmdNYXBXcmFwcGVyLmNvbnRhaW5zKCB0aGlzLl9hbGxLZXlzLCB0b2tlblN0cmluZyApO1xuICAgIC8vXG4gICAgLy8gIGlmICggaGFzVG9rZW4gKSB7XG4gICAgLy8gICAgcmV0dXJuIHRva2VuU3RyaW5nO1xuICAgIC8vICB9XG4gICAgLy9cbiAgICAvLyAgY29uc3QgbmV3S2V5ID0gYCR7IHRva2VuU3RyaW5nIH0keyB0aGlzLl91bmlxdWVJZCgpIH1gO1xuICAgIC8vICBTdHJpbmdNYXBXcmFwcGVyLnNldCggdGhpcy5fYWxsS2V5cywgbmV3S2V5LCB0b2tlbiApO1xuICAgIC8vICByZXR1cm4gbmV3S2V5O1xuICAgIC8vfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHRva2VuXG4gICAgICogQHJldHVybnMgeyp9XG4gICAgICovXG4gICAgS2V5UmVnaXN0cnkucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uICh0b2tlbikge1xuICAgICAgICBpZiAoIWxhbmdfMi5pc1R5cGUodG9rZW4pKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJLZXlSZWdpc3RyeSNnZXQ6XFxuICAgICAgICAgICAgICAgICAgICAgICAgPT09PT09PT09PT09PT09PVxcbiAgICAgICAgICAgICAgICAgICAgICAgIHlvdSd2IHRyaWVkIHRvIGNyZWF0ZSBhIGtleSBmb3IgYFwiICsgdG9rZW4gKyBcImBcXG4gICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGluZyBhbmQgZ2V0dGluZyBrZXkgdG9rZW5zIGlzIGF2YWlhbGFibGUgb25seSBmb3IgVHlwZVwiKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbmV3S2V5ID0gXCJcIiArIGxhbmdfMy5nZXRUeXBlTmFtZSh0b2tlbikgKyBLZXlSZWdpc3RyeS5fc3VmZml4ICsgdGhpcy5fdW5pcXVlSWQoKTtcbiAgICAgICAgdGhpcy5fYWxsS2V5cy5wdXNoKG5ld0tleSk7XG4gICAgICAgIHJldHVybiBuZXdLZXk7XG4gICAgfTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoS2V5UmVnaXN0cnkucHJvdG90eXBlLCBcIm51bWJlck9mS2V5c1wiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29sbGVjdGlvbnNfMS5MaXN0V3JhcHBlci5zaXplKHRoaXMuX2FsbEtleXMpOyB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoS2V5UmVnaXN0cnkucHJvdG90eXBlLCBcImFsbEtleXNcIiwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbGxlY3Rpb25zXzEuTGlzdFdyYXBwZXIuY2xvbmUodGhpcy5fYWxsS2V5cyk7IH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIGp1c3QgZm9yIHRlc3RpbmcgcHVycG9zZXNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIEtleVJlZ2lzdHJ5LnByb3RvdHlwZS5fcmVzZXQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbGxlY3Rpb25zXzEuTGlzdFdyYXBwZXIuY2xlYXIodGhpcy5fYWxsS2V5cyk7XG4gICAgICAgIHRoaXMuX2lkQ291bnRlciA9IDA7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYSB1bmlxdWUgSUQuIElmIGBwcmVmaXhgIGlzIHByb3ZpZGVkIHRoZSBJRCBpcyBhcHBlbmRlZCB0byBpdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbcHJlZml4XSBUaGUgdmFsdWUgdG8gcHJlZml4IHRoZSBJRCB3aXRoLlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHVuaXF1ZSBJRC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogX3VuaXF1ZUlkKCdjb250YWN0XycpO1xuICAgICAqIC8vID0+ICdjb250YWN0XzEwNCdcbiAgICAgKlxuICAgICAqIF91bmlxdWVJZCgpO1xuICAgICAqIC8vID0+ICcxMDUnXG4gICAgICovXG4gICAgS2V5UmVnaXN0cnkucHJvdG90eXBlLl91bmlxdWVJZCA9IGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgICAgdmFyIGlkID0gKyt0aGlzLl9pZENvdW50ZXI7XG4gICAgICAgIHJldHVybiBcIlwiICsgbGFuZ18xLmJhc2VUb1N0cmluZyhwcmVmaXgpICsgaWQ7XG4gICAgfTtcbiAgICByZXR1cm4gS2V5UmVnaXN0cnk7XG59KCkpO1xuS2V5UmVnaXN0cnkuX3N1ZmZpeCA9IFwiI1wiO1xuZXhwb3J0cy5LZXlSZWdpc3RyeSA9IEtleVJlZ2lzdHJ5O1xuZXhwb3J0cy5nbG9iYWxLZXlSZWdpc3RyeSA9IG5ldyBLZXlSZWdpc3RyeSgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a2V5LmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9kaS9rZXkuanNcbi8vIG1vZHVsZSBpZCA9IDQxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 42 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************************!*\
  !*** ./~/ng-metadata/src/core/di/reflective_provider.js ***!
  \**********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar reflection_1 = __webpack_require__(/*! ../reflection/reflection */ 4);\nvar provider_1 = __webpack_require__(/*! ./provider */ 5);\nvar provider_util_1 = __webpack_require__(/*! ./provider_util */ 7);\n/**\n * process provider literals and return map for angular1Module consumption\n * @param provider\n * @returns {{method: string, name: string, value: any}}\n */\nfunction resolveReflectiveProvider(provider) {\n    var token = provider.token;\n    if (lang_1.isPresent(provider.useValue)) {\n        var _a = provider_1.provide(token, { useValue: provider.useValue }), name_1 = _a[0], value = _a[1];\n        var method = 'value';\n        return { method: method, name: name_1, value: value };\n    }\n    if (provider.useFactory) {\n        var _b = provider_1.provide(token, { useFactory: provider.useFactory, deps: provider.dependencies }), name_2 = _b[0], value = _b[1];\n        var method = 'factory';\n        return { method: method, name: name_2, value: value };\n    }\n    if (provider.useClass) {\n        var _c = provider_1.provide(token, { useClass: provider.useClass }), name_3 = _c[0], value = _c[1];\n        var method = 'service';\n        return { method: method, name: name_3, value: value };\n    }\n    if (provider.useExisting) {\n        var _d = provider_1.provide(provider.useExisting), name_4 = _d[0], value = _d[1];\n        var method = 'factory';\n        throw new Error('useExisting is unimplemented');\n    }\n    throw new Error('invalid provider type! please specify one of: [useValue,useFactory,useClass]');\n}\nexports.resolveReflectiveProvider = resolveReflectiveProvider;\n/**\n * returns StringMap of values needed for angular1Module registration and duplicity checks\n * @param injectable\n * @returns {any}\n * @private\n */\nfunction _getAngular1ModuleMetadataByType(injectable) {\n    // only the first class annotations is injectable\n    var annotation = reflection_1.reflector.annotations(injectable)[0];\n    if (lang_1.isBlank(annotation)) {\n        // support configPhase ( function or pure class )\n        if (lang_1.isType(injectable)) {\n            return {\n                providerName: '$injector',\n                providerMethod: 'invoke',\n                moduleMethod: 'config'\n            };\n        }\n        throw new Error(\"\\n        cannot get injectable name token from none decorated class \" + lang_1.getFuncName(injectable) + \"\\n        Only decorated classes by one of [ @Injectable,@Directive,@Component,@Pipe ], can be injected by reference\\n      \");\n    }\n    if (provider_util_1.isPipe(annotation)) {\n        return {\n            providerName: '$filterProvider',\n            providerMethod: 'register',\n            moduleMethod: 'filter'\n        };\n    }\n    if (provider_util_1.isDirectiveLike(annotation)) {\n        return {\n            providerName: '$compileProvider',\n            providerMethod: 'directive',\n            moduleMethod: 'directive'\n        };\n    }\n    if (provider_util_1.isService(annotation)) {\n        return {\n            providerName: '$provide',\n            providerMethod: 'service',\n            moduleMethod: 'service'\n        };\n    }\n}\nexports._getAngular1ModuleMetadataByType = _getAngular1ModuleMetadataByType;\n/**\n * run through Component tree and register everything that is registered via Metadata\n * - works for nested arrays like angular 2 does ;)\n * @param angular1Module\n * @param providers\n * @returns {ng.IModule}\n * @private\n */\nfunction _normalizeProviders(angular1Module, providers) {\n    providers.forEach(function (providerType) {\n        // this is for legacy Angular 1 module\n        if (lang_1.isString(providerType)) {\n            angular1Module.requires.push(providerType);\n            return;\n        }\n        // this works only for value,factory,aliased services\n        // you cannot register directive/pipe within provider literal\n        if (provider_util_1.isProviderLiteral(providerType)) {\n            var provider = provider_util_1.createProvider(providerType);\n            var _a = resolveReflectiveProvider(provider), method = _a.method, name_5 = _a.name, value = _a.value;\n            if (!_isTypeRegistered(name_5, angular1Module, '$provide', method)) {\n                angular1Module[method](name_5, value);\n            }\n            return;\n        }\n        // this is for pipes/directives/services\n        if (lang_1.isType(providerType)) {\n            // const provider = createProvider( {provide:b, useClass:b} );\n            // const { method, name, value } = resolveReflectiveProvider( provider );\n            var _b = provider_1.provide(providerType), name_6 = _b[0], value = _b[1];\n            var _c = _getAngular1ModuleMetadataByType(providerType), providerName = _c.providerName, providerMethod = _c.providerMethod, moduleMethod = _c.moduleMethod;\n            // config phase support\n            if (lang_1.isType(name_6)) {\n                angular1Module.config(name_6);\n                return;\n            }\n            if (!_isTypeRegistered(name_6, angular1Module, providerName, providerMethod)) {\n                // @TODO register via this once requires are resolved for 3 types of attr directive from template\n                // _registerTypeProvider( angular1Module, providerType, { moduleMethod, name, value } );\n                angular1Module[moduleMethod](name_6, value);\n            }\n            return;\n        }\n        // un flattened array, unwrap and parse next array level of providers\n        if (lang_1.isArray(providerType)) {\n            _normalizeProviders(angular1Module, providerType);\n        }\n        else {\n            throw new Error(\"InvalidProviderError(\" + providerType + \")\");\n        }\n    });\n    // return res;\n    return angular1Module;\n}\nexports._normalizeProviders = _normalizeProviders;\n/**\n * check if `findRegisteredType` is registered within angular1Module, so we don't have duplicates\n * @param findRegisteredType\n * @param angular1Module\n * @param instanceType\n * @param methodName\n * @returns {boolean}\n * @private\n */\nfunction _isTypeRegistered(findRegisteredType, angular1Module, instanceType, methodName) {\n    var invokeQueue = angular1Module._invokeQueue;\n    var types = invokeQueue\n        .filter(function (_a) {\n        var type = _a[0], fnName = _a[1];\n        return type === instanceType && fnName === methodName;\n    })\n        .map(function (_a) {\n        var type = _a[0], fnName = _a[1], registeredProvider = _a[2];\n        return registeredProvider;\n    });\n    return types.some(function (_a) {\n        var typeName = _a[0], typeFn = _a[1];\n        return findRegisteredType === typeName;\n    });\n}\nexports._isTypeRegistered = _isTypeRegistered;\n/**\n * we need to register 3 types of attribute directives, if we are registering directive,\n * because we need to allow all 3 types of binding on the defined directive [name],(name),name\n * @private\n */\nfunction _registerTypeProvider(angular1Module, provider, _a) {\n    var moduleMethod = _a.moduleMethod, name = _a.name, value = _a.value;\n    // only the first class annotations is injectable\n    var annotation = reflection_1.reflector.annotations(provider)[0];\n    if (lang_1.isBlank(annotation)) {\n        return;\n    }\n    // we need to register attr directives for all possible binding types\n    if (provider_util_1.isDirective(annotation)) {\n        angular1Module[moduleMethod](name, value);\n        angular1Module[moduleMethod](\"[\" + name + \"]\", value);\n        angular1Module[moduleMethod](\"(\" + name + \")\", value);\n    }\n    else {\n        angular1Module[moduleMethod](name, value);\n    }\n}\nexports._registerTypeProvider = _registerTypeProvider;\n//# sourceMappingURL=reflective_provider.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 43 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************!*\
  !*** ./~/ng-metadata/src/core/directives.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./directives/decorators */ 48));\n__export(__webpack_require__(/*! ./directives/metadata_di */ 8));\n__export(__webpack_require__(/*! ./directives/metadata_directives */ 3));\n//# sourceMappingURL=directives.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMuanM/OWViYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9kaXJlY3RpdmVzL2RlY29yYXRvcnNcIikpO1xuX19leHBvcnQocmVxdWlyZShcIi4vZGlyZWN0aXZlcy9tZXRhZGF0YV9kaVwiKSk7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi9kaXJlY3RpdmVzL21ldGFkYXRhX2RpcmVjdGl2ZXNcIikpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlyZWN0aXZlcy5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvZGlyZWN0aXZlcy5qc1xuLy8gbW9kdWxlIGlkID0gNDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 44 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/binding/binding_factory.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar directives_utils_1 = __webpack_require__(/*! ../directives_utils */ 12);\nvar change_detection_util_1 = __webpack_require__(/*! ../../change_detection/change_detection_util */ 18);\nvar changes_queue_1 = __webpack_require__(/*! ../../change_detection/changes_queue */ 38);\nvar collections_1 = __webpack_require__(/*! ../../../facade/collections */ 1);\nvar lang_1 = __webpack_require__(/*! ../../../facade/lang */ 0);\nvar async_1 = __webpack_require__(/*! ../../../facade/async */ 23);\nvar constants_1 = __webpack_require__(/*! ./constants */ 21);\nvar binding_parser_1 = __webpack_require__(/*! ./binding_parser */ 45);\n/**\n * Create Bindings manually for both Directive/Component\n * @returns {{watchers: Array, observers: Array}}\n * @internal\n * @private\n */\nfunction _createDirectiveBindings(hasIsolateScope, ngScope, ngAttrs, ctrl, metadata, _a) {\n    /*  let BOOLEAN_ATTR = {};\n     'multiple,selected,checked,disabled,readOnly,required,open'\n     .split(',')\n     .forEach(function(value) {\n     BOOLEAN_ATTR[value.toLocaleLowerCase()] = value;\n     });*/\n    var $interpolate = _a.$interpolate, $parse = _a.$parse, $rootScope = _a.$rootScope;\n    var isBindingImmutable = directives_utils_1.isComponentDirective(metadata) && change_detection_util_1.ChangeDetectionUtil.isOnPushChangeDetectionStrategy(metadata.changeDetection);\n    var scope = hasIsolateScope\n        ? ngScope.$parent\n        : ngScope;\n    var _b = metadata.inputs, inputs = _b === void 0 ? [] : _b, _c = metadata.outputs, outputs = _c === void 0 ? [] : _c;\n    var parsedBindings = binding_parser_1.setupFields(ngAttrs, inputs, outputs);\n    var _internalWatchers = [];\n    var _internalObservers = [];\n    // onChanges tmp vars\n    var initialChanges = {};\n    var changes;\n    // this will create flush queue internally only once\n    // we need to call this here because we need $rootScope service\n    changes_queue_1.changesQueueService.buildFlushOnChanges($rootScope);\n    // setup @Inputs '<' or '='\n    collections_1.StringMapWrapper.forEach(parsedBindings.inputs, function (config, propName) {\n        var exp = config.exp, attrName = config.attrName, mode = config.mode;\n        // support for TWO_WAY only for components\n        var hasTwoWayBinding = hasIsolateScope && mode === constants_1.BINDING_MODE.twoWay;\n        var removeWatch = hasTwoWayBinding\n            ? _createTwoWayBinding(propName, attrName, exp)\n            : _createOneWayBinding(propName, attrName, exp, isBindingImmutable);\n        _internalWatchers.push(removeWatch);\n    });\n    // setup @Input('@')\n    collections_1.StringMapWrapper.forEach(parsedBindings.attrs, function (config, propName) {\n        var attrName = config.attrName, exp = config.exp, mode = config.mode;\n        var removeObserver = _createAttrBinding(propName, attrName, exp);\n        _internalObservers.push(removeObserver);\n    });\n    // setup @Outputs\n    collections_1.StringMapWrapper.forEach(parsedBindings.outputs, function (config, propName) {\n        var exp = config.exp, attrName = config.attrName, mode = config.mode;\n        _createOutputBinding(propName, attrName, exp);\n    });\n    function _createOneWayBinding(propName, attrName, exp, isImmutable) {\n        if (isImmutable === void 0) { isImmutable = false; }\n        if (!exp)\n            return;\n        var parentGet = $parse(exp);\n        var initialValue = ctrl[propName] = parentGet(scope);\n        initialChanges[propName] = change_detection_util_1.ChangeDetectionUtil.simpleChange(change_detection_util_1.ChangeDetectionUtil.uninitialized, ctrl[propName]);\n        return scope.$watch(parentGet, function parentValueWatchAction(newValue, oldValue) {\n            // https://github.com/angular/angular.js/commit/d9448dcb9f901ceb04deda1d5f3d5aac8442a718\n            // https://github.com/angular/angular.js/commit/304796471292f9805b9cf77e51aacc9cfbb09921\n            if (oldValue === newValue) {\n                if (oldValue === initialValue)\n                    return;\n                oldValue = initialValue;\n            }\n            recordChanges(propName, newValue, oldValue);\n            ctrl[propName] = isImmutable ? lang_1.global.angular.copy(newValue) : newValue;\n        }, parentGet.literal);\n    }\n    function _createTwoWayBinding(propName, attrName, exp) {\n        if (!exp)\n            return;\n        var lastValue;\n        var parentGet = $parse(exp);\n        var parentSet = parentGet.assign || function () {\n            // reset the change, or we will throw this exception on every $digest\n            lastValue = ctrl[propName] = parentGet(scope);\n            throw new Error(\"nonassign,\\n          Expression '\" + ngAttrs[attrName] + \"' in attribute '\" + attrName + \"' used with directive '{2}' is non-assignable!\");\n        };\n        var compare = parentGet.literal ? lang_1.global.angular.equals : simpleCompare;\n        var parentValueWatch = function parentValueWatch(parentValue) {\n            if (!compare(parentValue, ctrl[propName])) {\n                // we are out of sync and need to copy\n                if (!compare(parentValue, lastValue)) {\n                    // parent changed and it has precedence\n                    ctrl[propName] = parentValue;\n                }\n                else {\n                    // if the parent can be assigned then do so\n                    parentSet(scope, parentValue = ctrl[propName]);\n                }\n            }\n            return lastValue = parentValue;\n        };\n        parentValueWatch.$stateful = true;\n        lastValue = ctrl[propName] = parentGet(scope);\n        // NOTE: we don't support collection watch, it's not good for performance\n        // if (definition.collection) {\n        //   removeWatch = scope.$watchCollection(attributes[attrName], parentValueWatch);\n        // } else {\n        //   removeWatch = scope.$watch($parse(attributes[attrName], parentValueWatch), null, parentGet.literal);\n        // }\n        // removeWatchCollection.push(removeWatch);\n        return scope.$watch(\n        // $parse( ngAttrs[ attrName ], parentValueWatch ),\n        $parse(exp, parentValueWatch), null, parentGet.literal);\n        function simpleCompare(a, b) { return a === b || (a !== a && b !== b); }\n    }\n    function _createOutputBinding(propName, attrName, exp) {\n        // Don't assign Object.prototype method to scope\n        var parentGet = exp\n            ? $parse(exp)\n            : lang_1.noop;\n        // Don't assign noop to ctrl if expression is not valid\n        if (parentGet === lang_1.noop)\n            return;\n        // here we assign property to EventEmitter instance directly\n        var emitter = new async_1.EventEmitter();\n        emitter.wrapNgExpBindingToEmitter(function _exprBindingCb(locals) {\n            return parentGet(scope, locals);\n        });\n        ctrl[propName] = emitter;\n    }\n    function _createAttrBinding(propName, attrName, exp) {\n        var lastValue = exp;\n        // register watchers for further changes\n        // The observer function will be invoked once during the next $digest following compilation.\n        // The observer is then invoked whenever the interpolated value changes.\n        var _disposeObserver = ngAttrs.$observe(attrName, function (value) {\n            // https://github.com/angular/angular.js/commit/499e1b2adf27f32d671123f8dceadb3df2ad84a9\n            if (lang_1.isString(value) || lang_1.isBoolean(value)) {\n                var oldValue = ctrl[propName];\n                recordChanges(propName, value, oldValue);\n                ctrl[propName] = value;\n            }\n        });\n        ngAttrs.$$observers[attrName].$$scope = scope;\n        if (lang_1.isString(lastValue)) {\n            // If the attribute has been provided then we trigger an interpolation to ensure\n            // the value is there for use in the link fn\n            ctrl[propName] = $interpolate(lastValue)(scope);\n        }\n        else if (lang_1.isBoolean(lastValue)) {\n            // If the attributes is one of the BOOLEAN_ATTR then Angular will have converted\n            // the value to boolean rather than a string, so we special case this situation\n            ctrl[propName] = lastValue;\n        }\n        initialChanges[propName] = change_detection_util_1.ChangeDetectionUtil.simpleChange(change_detection_util_1.ChangeDetectionUtil.uninitialized, ctrl[propName]);\n        return _disposeObserver;\n    }\n    function recordChanges(key, currentValue, previousValue) {\n        if (lang_1.isFunction(ctrl.ngOnChanges) && currentValue !== previousValue) {\n            // If we have not already scheduled the top level onChangesQueue handler then do so now\n            if (!changes_queue_1.changesQueueService.onChangesQueue) {\n                scope.$$postDigest(changes_queue_1.changesQueueService.flushOnChangesQueue);\n                changes_queue_1.changesQueueService.onChangesQueue = [];\n            }\n            // If we have not already queued a trigger of onChanges for this controller then do so now\n            if (!changes) {\n                changes = {};\n                changes_queue_1.changesQueueService.onChangesQueue.push(triggerOnChangesHook);\n            }\n            // If the has been a change on this property already then we need to reuse the previous value\n            if (changes[key]) {\n                previousValue = changes[key].previousValue;\n            }\n            // Store this change\n            changes[key] = change_detection_util_1.ChangeDetectionUtil.simpleChange(previousValue, currentValue);\n        }\n    }\n    function triggerOnChangesHook() {\n        ctrl.ngOnChanges(changes);\n        // Now clear the changes so that we schedule onChanges when more changes arrive\n        changes = undefined;\n    }\n    function removeWatches() {\n        var removeWatchCollection = _internalWatchers.concat(_internalObservers);\n        for (var i = 0, ii = removeWatchCollection.length; i < ii; ++i) {\n            if (removeWatchCollection[i] && lang_1.isFunction(removeWatchCollection[i])) {\n                removeWatchCollection[i]();\n            }\n        }\n    }\n    return {\n        initialChanges: initialChanges,\n        removeWatches: removeWatches,\n        _watchers: { watchers: _internalWatchers, observers: _internalObservers }\n    };\n}\nexports._createDirectiveBindings = _createDirectiveBindings;\n//# sourceMappingURL=binding_factory.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 45 */
/* unknown exports provided */
/* all exports used */
/*!*********************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/binding/binding_parser.js ***!
  \*********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar collections_1 = __webpack_require__(/*! ../../../facade/collections */ 1);\nvar constants_1 = __webpack_require__(/*! ./constants */ 21);\nfunction setupFields(ngAttrs, rawInputs, rawOutputs) {\n    if (rawInputs === void 0) { rawInputs = []; }\n    if (rawOutputs === void 0) { rawOutputs = []; }\n    var _a = _setupInputs(_parseFields(rawInputs), ngAttrs), inputs = _a.inputs, attrs = _a.attrs;\n    var outputs = _setupOutputs(_parseFields(rawOutputs), ngAttrs).outputs;\n    return {\n        inputs: inputs,\n        attrs: attrs,\n        outputs: outputs\n    };\n}\nexports.setupFields = setupFields;\nfunction _parseFields(names) {\n    var attrProps = [];\n    if (!names) {\n        return attrProps;\n    }\n    for (var _i = 0, names_1 = names; _i < names_1.length; _i++) {\n        var name_1 = names_1[_i];\n        var parts = name_1.split(':');\n        var prop = parts[0].trim();\n        var attr = (parts[1] || parts[0]).trim();\n        var isTypeByDeclaration = _isTypeByDeclaration(attr);\n        var attrName = _getNormalizedAttrName(attr, prop, isTypeByDeclaration);\n        var type = _getBindingType(attr, isTypeByDeclaration);\n        attrProps.push({\n            prop: prop,\n            attr: attrName,\n            bracketAttr: \"[\" + attrName + \"]\",\n            parenAttr: \"(\" + attrName + \")\",\n            bracketParenAttr: \"[(\" + attrName + \")]\",\n            type: type,\n            typeByTemplate: !isTypeByDeclaration\n        });\n    }\n    return attrProps;\n}\nexports._parseFields = _parseFields;\nfunction _getBindingType(originalAttr, isTypeByDeclaration) {\n    return isTypeByDeclaration\n        ? originalAttr.charAt(0)\n        : '';\n}\nfunction _isTypeByDeclaration(attr) {\n    return collections_1.ListWrapper.contains([\n        constants_1.BINDING_MODE.attr, constants_1.BINDING_MODE.oneWay, constants_1.BINDING_MODE.twoWay\n    ], attr.charAt(0));\n}\nfunction _getNormalizedAttrName(originalAttr, propName, isTypeByDeclaration) {\n    if (!isTypeByDeclaration) {\n        return originalAttr;\n    }\n    return originalAttr.length > 1\n        ? originalAttr.substring(1)\n        : propName;\n}\nfunction _setupInputs(inputs, ngAttrs) {\n    var parsedAttrs = {};\n    var parsedInputs = {};\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n        var input = inputs_1[_i];\n        if (input.typeByTemplate) {\n            if (ngAttrs.hasOwnProperty(input.attr)) {\n                // @\n                parsedAttrs[input.prop] = {\n                    mode: constants_1.BINDING_MODE.attr,\n                    exp: ngAttrs[input.attr],\n                    attrName: input.attr\n                };\n            }\n            else if (ngAttrs.hasOwnProperty(input.bracketAttr)) {\n                // <\n                parsedInputs[input.prop] = {\n                    mode: constants_1.BINDING_MODE.oneWay,\n                    exp: ngAttrs[input.bracketAttr],\n                    attrName: input.bracketAttr\n                };\n            }\n            else if (ngAttrs.hasOwnProperty(input.bracketParenAttr)) {\n                // =\n                parsedInputs[input.prop] = {\n                    mode: constants_1.BINDING_MODE.twoWay,\n                    exp: ngAttrs[input.bracketParenAttr],\n                    attrName: input.bracketParenAttr\n                };\n            }\n        }\n        else {\n            if (ngAttrs.hasOwnProperty(input.attr)) {\n                var attrMetadata = { mode: input.type, exp: ngAttrs[input.attr], attrName: input.attr };\n                if (input.type === constants_1.BINDING_MODE.attr) {\n                    parsedAttrs[input.prop] = attrMetadata;\n                }\n                else {\n                    parsedInputs[input.prop] = attrMetadata;\n                }\n            }\n        }\n    }\n    return {\n        inputs: parsedInputs,\n        attrs: parsedAttrs\n    };\n}\nexports._setupInputs = _setupInputs;\nfunction _setupOutputs(outputs, ngAttrs) {\n    var parsedOutputs = {};\n    for (var i = 0; i < outputs.length; i = i + 1) {\n        var output = outputs[i];\n        var baseParsedAttrField = { mode: constants_1.BINDING_MODE.output, exp: undefined, attrName: '' };\n        // & via event\n        if (ngAttrs.hasOwnProperty(output.attr)) {\n            parsedOutputs[output.prop] = collections_1.StringMapWrapper.assign({}, baseParsedAttrField, { exp: ngAttrs[output.attr], attrName: output.attr });\n        }\n        else if (ngAttrs.hasOwnProperty(output.parenAttr)) {\n            parsedOutputs[output.prop] = collections_1.StringMapWrapper.assign({}, baseParsedAttrField, { exp: ngAttrs[output.parenAttr], attrName: output.parenAttr });\n        }\n    }\n    return { outputs: parsedOutputs };\n}\nexports._setupOutputs = _setupOutputs;\n/**\n * parses input/output/attrs string arrays from metadata fro further processing\n * @param inputs\n * @param outputs\n * @param attrs\n * @returns {{inputs: ParsedBindingsMap, outputs: ParsedBindingsMap, attrs: ParsedBindingsMap}}\n * @private\n * @deprecated\n */\nfunction _parseBindings(_a) {\n    var _b = _a.inputs, inputs = _b === void 0 ? [] : _b, _c = _a.outputs, outputs = _c === void 0 ? [] : _c, _d = _a.attrs, attrs = _d === void 0 ? [] : _d;\n    var SPLIT_BY = ':';\n    return {\n        inputs: _parseByMode(inputs, constants_1.BINDING_MODE.twoWay, [constants_1.BINDING_MODE.attr]),\n        outputs: _parseByMode(outputs, constants_1.BINDING_MODE.output),\n        attrs: collections_1.StringMapWrapper.merge(\n        // this will be removed in 2.0\n        _parseByMode(attrs, constants_1.BINDING_MODE.attr), \n        // attrs build from @Input('@')\n        _parseByMode(inputs, constants_1.BINDING_MODE.twoWay, [constants_1.BINDING_MODE.oneWay, constants_1.BINDING_MODE.twoWay]))\n    };\n    function _parseByMode(bindingArr, defaultMode, excludeMode) {\n        if (excludeMode === void 0) { excludeMode = []; }\n        return bindingArr.reduce(function (acc, binding) {\n            var _a = binding.split(SPLIT_BY).map(function (part) { return part.trim(); }), name = _a[0], _b = _a[1], modeConfigAndAlias = _b === void 0 ? '' : _b;\n            var parsedConfigAndAlias = modeConfigAndAlias.match(constants_1.INPUT_MODE_REGEX);\n            var _c = parsedConfigAndAlias || [], _d = _c[1], mode = _d === void 0 ? defaultMode : _d, _e = _c[2], optional = _e === void 0 ? '' : _e, _f = _c[3], alias = _f === void 0 ? '' : _f;\n            // exit early if processed mode is not allowed\n            // for example if we are parsing Input('@') which produces attr binding instead of one or two way\n            if (excludeMode.indexOf(mode) !== -1) {\n                return acc;\n            }\n            // @TODO remove this in next version where template parsing will be implemented\n            if ((defaultMode !== constants_1.BINDING_MODE.output) && !(parsedConfigAndAlias && parsedConfigAndAlias[1])) {\n                console.warn(\"\\n        You need to explicitly provide type of binding(=,<,@) within your <code>'@Input() \" + name + \";</code>.\\n        Next version 2.0 will create binding by parsing template if you provide '@Input()' without binding type.\\n        \");\n            }\n            acc[name] = {\n                mode: mode,\n                alias: alias,\n                optional: optional === constants_1.BINDING_MODE.optional || true\n            };\n            return acc;\n        }, {});\n    }\n}\nexports._parseBindings = _parseBindings;\n//# sourceMappingURL=binding_parser.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 46 */
/* unknown exports provided */
/* all exports used */
/*!*******************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/controller/constants.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.REQUIRE_PREFIX_REGEXP = /^(?:(\\^\\^?)?(\\?)?(\\^\\^?)?)?/;\n//# sourceMappingURL=constants.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvY29udHJvbGxlci9jb25zdGFudHMuanM/OWQxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuUkVRVUlSRV9QUkVGSVhfUkVHRVhQID0gL14oPzooXFxeXFxePyk/KFxcPyk/KFxcXlxcXj8pPyk/Lztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvZGlyZWN0aXZlcy9jb250cm9sbGVyL2NvbnN0YW50cy5qc1xuLy8gbW9kdWxlIGlkID0gNDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 47 */
/* unknown exports provided */
/* all exports used */
/*!****************************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/controller/controller_factory.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar collections_1 = __webpack_require__(/*! ../../../facade/collections */ 1);\nvar change_detector_ref_1 = __webpack_require__(/*! ../../change_detection/change_detector_ref */ 19);\nvar binding_factory_1 = __webpack_require__(/*! ../binding/binding_factory */ 44);\nvar directives_utils_1 = __webpack_require__(/*! ../directives_utils */ 12);\nvar lang_1 = __webpack_require__(/*! ../../../facade/lang */ 0);\nvar primitives_1 = __webpack_require__(/*! ../../../facade/primitives */ 25);\nvar constants_1 = __webpack_require__(/*! ./constants */ 46);\nfunction directiveControllerFactory(caller, controller, $injector, locals, requireMap, _ddo, metadata) {\n    var $scope = locals.$scope, $element = locals.$element, $attrs = locals.$attrs;\n    var _services = {\n        $parse: $injector.get('$parse'),\n        $interpolate: $injector.get('$interpolate'),\n        $rootScope: $injector.get('$rootScope')\n    };\n    var _localServices = {\n        changeDetectorRef: change_detector_ref_1.ChangeDetectorRef.create($scope)\n    };\n    // Create an instance of the controller without calling its constructor\n    var instance = Object.create(controller.prototype);\n    // NOTE: this is not needed because we are creating bindings manually because of\n    // angular behaviour https://github.com/ngParty/ng-metadata/issues/53\n    // ===================================================================\n    // Remember, angular has already set those bindings on the `caller`\n    // argument. Now we need to extend them onto our `instance`. It is important\n    // to extend after defining the properties. That way we fire the setters.\n    //\n    // StringMapWrapper.assign( instance, caller );\n    // setup @Input/@Output/@Attrs for @Component/@Directive\n    var _a = binding_factory_1._createDirectiveBindings(!directives_utils_1.isAttrDirective(metadata), $scope, $attrs, instance, metadata, _services), removeWatches = _a.removeWatches, initialChanges = _a.initialChanges;\n    cleanUpWatchers(removeWatches);\n    // change injectables to proper inject directives\n    // we wanna do this only if we inject some locals/directives\n    if (collections_1.StringMapWrapper.size(requireMap)) {\n        controller.$inject = createNewInjectablesToMatchLocalDi(controller.$inject, requireMap);\n    }\n    var $requires = getEmptyRequiredControllers(requireMap);\n    // $injector.invoke will delete any @Input/@Attr/@Output which were resolved within _createDirectiveBindings\n    // and which have set default values in constructor. We need to store them and reassign after this invoke\n    var initialInstanceBindingValues = getInitialBindings(instance);\n    // Finally, invoke the constructor using the injection array and the captured locals\n    $injector.invoke(controller, instance, collections_1.StringMapWrapper.assign(locals, _localServices, $requires));\n    // reassign back the initial binding values, just in case if we used default values\n    collections_1.StringMapWrapper.assign(instance, initialInstanceBindingValues);\n    /*if ( isFunction( instance.ngOnDestroy ) ) {\n     $scope.$on( '$destroy', instance.ngOnDestroy.bind( instance ) );\n     }*/\n    /*if (typeof instance.ngAfterViewInit === 'function') {\n     ddo.ngAfterViewInitBound = instance.ngAfterViewInit.bind(instance);\n     }*/\n    // https://github.com/angular/angular.js/commit/0ad2b70862d49ecc4355a16d767c0ca9358ecc3e\n    // onChanges is called before onInit\n    if (lang_1.isFunction(instance.ngOnChanges)) {\n        instance.ngOnChanges(initialChanges);\n    }\n    _ddo._ngOnInitBound = function _ngOnInitBound() {\n        // invoke again only if there are any directive requires\n        // #perf\n        if (collections_1.StringMapWrapper.size(requireMap)) {\n            var $requires_1 = getRequiredControllers(requireMap, $element, controller);\n            // $injector.invoke will delete any @Input/@Attr/@Output which were resolved within _createDirectiveBindings\n            // and which have set default values in constructor. We need to store them and reassign after this invoke\n            var initialInstanceBindingValues_1 = getInitialBindings(instance);\n            $injector.invoke(controller, instance, collections_1.StringMapWrapper.assign(locals, _localServices, $requires_1));\n            // reassign back the initial binding values, just in case if we used default values\n            collections_1.StringMapWrapper.assign(instance, initialInstanceBindingValues_1);\n        }\n        if (lang_1.isFunction(instance.ngOnInit)) {\n            instance.ngOnInit();\n        }\n        // DoCheck is called after OnChanges and OnInit\n        if (lang_1.isFunction(instance.ngDoCheck)) {\n            var removeDoCheckWatcher = $postDigestWatch($scope, function () { return instance.ngDoCheck(); });\n            cleanUpWatchers(removeDoCheckWatcher);\n        }\n    };\n    // Return the controller instance\n    return instance;\n    function cleanUpWatchers(cb) {\n        $scope.$on('$destroy', function () { return cb; });\n    }\n}\nexports.directiveControllerFactory = directiveControllerFactory;\n/**\n * Note: $$postDigest will not trigger another digest cycle.\n * So any modification to $scope inside $$postDigest will not get reflected in the DOM\n */\nfunction $postDigestWatch(scope, cb) {\n    var hasRegistered = false;\n    var removeDoCheckWatcher = scope.$watch(function () {\n        if (hasRegistered) {\n            return;\n        }\n        hasRegistered = true;\n        scope.$$postDigest(function () {\n            hasRegistered = false;\n            cb();\n        });\n    });\n    return removeDoCheckWatcher;\n}\nfunction getInitialBindings(instance) {\n    var initialBindingValues = {};\n    collections_1.StringMapWrapper.forEach(instance, function (value, propName) {\n        if (instance[propName]) {\n            initialBindingValues[propName] = value;\n        }\n    });\n    return initialBindingValues;\n}\n/**\n * Angular 1 copy of how to require other directives\n * @param require\n * @param $element\n * @param directive\n * @returns {any|null}\n */\nfunction getRequiredControllers(require, $element, directive) {\n    var value;\n    if (lang_1.isString(require)) {\n        var match = require.match(constants_1.REQUIRE_PREFIX_REGEXP);\n        var name = require.substring(match[0].length);\n        var inheritType = match[1] || match[3];\n        var optional = match[2] === '?';\n        //If only parents then start at the parent element\n        if (inheritType === '^^') {\n            $element = $element.parent();\n        }\n        if (!value) {\n            var dataName = \"$\" + name + \"Controller\";\n            value = inheritType ? $element.inheritedData(dataName) : $element.data(dataName);\n        }\n        if (!value && !optional) {\n            throw new Error(\"Directive/Controller '\" + name + \"', required by directive '\" + lang_1.getFuncName(directive) + \"', can't be found!\");\n        }\n    }\n    else if (lang_1.isArray(require)) {\n        value = [];\n        for (var i = 0, ii = require.length; i < ii; i++) {\n            value[i] = getRequiredControllers(require[i], $element, directive);\n        }\n    }\n    else if (lang_1.isJsObject(require)) {\n        value = {};\n        collections_1.StringMapWrapper.forEach(require, function (controller, property) {\n            value[property] = getRequiredControllers(controller, $element, directive);\n        });\n    }\n    return value || null;\n}\nexports.getRequiredControllers = getRequiredControllers;\nfunction getEmptyRequiredControllers(requireMap) {\n    return collections_1.StringMapWrapper.keys(requireMap).reduce(function (acc, keyName) {\n        acc[keyName] = undefined;\n        return acc;\n    }, {});\n}\nexports.getEmptyRequiredControllers = getEmptyRequiredControllers;\nfunction createNewInjectablesToMatchLocalDi(originalInjectables, requireMap) {\n    var requireKeys = collections_1.StringMapWrapper.keys(requireMap);\n    return originalInjectables.slice()\n        .map(function (injectable) {\n        var replaceInjName = requireKeys\n            .filter(function (keyName) { return primitives_1.StringWrapper.startsWith(keyName, injectable); })[0];\n        // if found remove that key so we won't assign the same\n        if (replaceInjName) {\n            var idx = requireKeys.indexOf(replaceInjName);\n            requireKeys.splice(idx, 1);\n        }\n        return replaceInjName || injectable;\n    });\n}\nexports.createNewInjectablesToMatchLocalDi = createNewInjectablesToMatchLocalDi;\n/**\n * @deprecated\n * @TODO remove?\n */\nfunction injectionArgs(fn, locals, serviceName, injects) {\n    var args = [], \n    // $inject = createInjector.$$annotate(fn, strictDi, serviceName);\n    $inject = injects;\n    for (var i = 0, length = $inject.length; i < length; i++) {\n        var key = $inject[i];\n        if (typeof key !== 'string') {\n            throw new Error(\"itkn, Incorrect injection token! Expected service name as string, got \" + key);\n        }\n        /*    args.push( locals && locals.hasOwnProperty( key )\n         ? locals[ key ]\n         : getService( key, serviceName ) );*/\n        args.push(locals[key]);\n    }\n    return args;\n}\n//# sourceMappingURL=controller_factory.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvY29udHJvbGxlci9jb250cm9sbGVyX2ZhY3RvcnkuanM/N2RjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBjb2xsZWN0aW9uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2ZhY2FkZS9jb2xsZWN0aW9uc1wiKTtcbnZhciBjaGFuZ2VfZGV0ZWN0b3JfcmVmXzEgPSByZXF1aXJlKFwiLi4vLi4vY2hhbmdlX2RldGVjdGlvbi9jaGFuZ2VfZGV0ZWN0b3JfcmVmXCIpO1xudmFyIGJpbmRpbmdfZmFjdG9yeV8xID0gcmVxdWlyZShcIi4uL2JpbmRpbmcvYmluZGluZ19mYWN0b3J5XCIpO1xudmFyIGRpcmVjdGl2ZXNfdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi9kaXJlY3RpdmVzX3V0aWxzXCIpO1xudmFyIGxhbmdfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9mYWNhZGUvbGFuZ1wiKTtcbnZhciBwcmltaXRpdmVzXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vZmFjYWRlL3ByaW1pdGl2ZXNcIik7XG52YXIgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG5mdW5jdGlvbiBkaXJlY3RpdmVDb250cm9sbGVyRmFjdG9yeShjYWxsZXIsIGNvbnRyb2xsZXIsICRpbmplY3RvciwgbG9jYWxzLCByZXF1aXJlTWFwLCBfZGRvLCBtZXRhZGF0YSkge1xuICAgIHZhciAkc2NvcGUgPSBsb2NhbHMuJHNjb3BlLCAkZWxlbWVudCA9IGxvY2Fscy4kZWxlbWVudCwgJGF0dHJzID0gbG9jYWxzLiRhdHRycztcbiAgICB2YXIgX3NlcnZpY2VzID0ge1xuICAgICAgICAkcGFyc2U6ICRpbmplY3Rvci5nZXQoJyRwYXJzZScpLFxuICAgICAgICAkaW50ZXJwb2xhdGU6ICRpbmplY3Rvci5nZXQoJyRpbnRlcnBvbGF0ZScpLFxuICAgICAgICAkcm9vdFNjb3BlOiAkaW5qZWN0b3IuZ2V0KCckcm9vdFNjb3BlJylcbiAgICB9O1xuICAgIHZhciBfbG9jYWxTZXJ2aWNlcyA9IHtcbiAgICAgICAgY2hhbmdlRGV0ZWN0b3JSZWY6IGNoYW5nZV9kZXRlY3Rvcl9yZWZfMS5DaGFuZ2VEZXRlY3RvclJlZi5jcmVhdGUoJHNjb3BlKVxuICAgIH07XG4gICAgLy8gQ3JlYXRlIGFuIGluc3RhbmNlIG9mIHRoZSBjb250cm9sbGVyIHdpdGhvdXQgY2FsbGluZyBpdHMgY29uc3RydWN0b3JcbiAgICB2YXIgaW5zdGFuY2UgPSBPYmplY3QuY3JlYXRlKGNvbnRyb2xsZXIucHJvdG90eXBlKTtcbiAgICAvLyBOT1RFOiB0aGlzIGlzIG5vdCBuZWVkZWQgYmVjYXVzZSB3ZSBhcmUgY3JlYXRpbmcgYmluZGluZ3MgbWFudWFsbHkgYmVjYXVzZSBvZlxuICAgIC8vIGFuZ3VsYXIgYmVoYXZpb3VyIGh0dHBzOi8vZ2l0aHViLmNvbS9uZ1BhcnR5L25nLW1ldGFkYXRhL2lzc3Vlcy81M1xuICAgIC8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBSZW1lbWJlciwgYW5ndWxhciBoYXMgYWxyZWFkeSBzZXQgdGhvc2UgYmluZGluZ3Mgb24gdGhlIGBjYWxsZXJgXG4gICAgLy8gYXJndW1lbnQuIE5vdyB3ZSBuZWVkIHRvIGV4dGVuZCB0aGVtIG9udG8gb3VyIGBpbnN0YW5jZWAuIEl0IGlzIGltcG9ydGFudFxuICAgIC8vIHRvIGV4dGVuZCBhZnRlciBkZWZpbmluZyB0aGUgcHJvcGVydGllcy4gVGhhdCB3YXkgd2UgZmlyZSB0aGUgc2V0dGVycy5cbiAgICAvL1xuICAgIC8vIFN0cmluZ01hcFdyYXBwZXIuYXNzaWduKCBpbnN0YW5jZSwgY2FsbGVyICk7XG4gICAgLy8gc2V0dXAgQElucHV0L0BPdXRwdXQvQEF0dHJzIGZvciBAQ29tcG9uZW50L0BEaXJlY3RpdmVcbiAgICB2YXIgX2EgPSBiaW5kaW5nX2ZhY3RvcnlfMS5fY3JlYXRlRGlyZWN0aXZlQmluZGluZ3MoIWRpcmVjdGl2ZXNfdXRpbHNfMS5pc0F0dHJEaXJlY3RpdmUobWV0YWRhdGEpLCAkc2NvcGUsICRhdHRycywgaW5zdGFuY2UsIG1ldGFkYXRhLCBfc2VydmljZXMpLCByZW1vdmVXYXRjaGVzID0gX2EucmVtb3ZlV2F0Y2hlcywgaW5pdGlhbENoYW5nZXMgPSBfYS5pbml0aWFsQ2hhbmdlcztcbiAgICBjbGVhblVwV2F0Y2hlcnMocmVtb3ZlV2F0Y2hlcyk7XG4gICAgLy8gY2hhbmdlIGluamVjdGFibGVzIHRvIHByb3BlciBpbmplY3QgZGlyZWN0aXZlc1xuICAgIC8vIHdlIHdhbm5hIGRvIHRoaXMgb25seSBpZiB3ZSBpbmplY3Qgc29tZSBsb2NhbHMvZGlyZWN0aXZlc1xuICAgIGlmIChjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuc2l6ZShyZXF1aXJlTWFwKSkge1xuICAgICAgICBjb250cm9sbGVyLiRpbmplY3QgPSBjcmVhdGVOZXdJbmplY3RhYmxlc1RvTWF0Y2hMb2NhbERpKGNvbnRyb2xsZXIuJGluamVjdCwgcmVxdWlyZU1hcCk7XG4gICAgfVxuICAgIHZhciAkcmVxdWlyZXMgPSBnZXRFbXB0eVJlcXVpcmVkQ29udHJvbGxlcnMocmVxdWlyZU1hcCk7XG4gICAgLy8gJGluamVjdG9yLmludm9rZSB3aWxsIGRlbGV0ZSBhbnkgQElucHV0L0BBdHRyL0BPdXRwdXQgd2hpY2ggd2VyZSByZXNvbHZlZCB3aXRoaW4gX2NyZWF0ZURpcmVjdGl2ZUJpbmRpbmdzXG4gICAgLy8gYW5kIHdoaWNoIGhhdmUgc2V0IGRlZmF1bHQgdmFsdWVzIGluIGNvbnN0cnVjdG9yLiBXZSBuZWVkIHRvIHN0b3JlIHRoZW0gYW5kIHJlYXNzaWduIGFmdGVyIHRoaXMgaW52b2tlXG4gICAgdmFyIGluaXRpYWxJbnN0YW5jZUJpbmRpbmdWYWx1ZXMgPSBnZXRJbml0aWFsQmluZGluZ3MoaW5zdGFuY2UpO1xuICAgIC8vIEZpbmFsbHksIGludm9rZSB0aGUgY29uc3RydWN0b3IgdXNpbmcgdGhlIGluamVjdGlvbiBhcnJheSBhbmQgdGhlIGNhcHR1cmVkIGxvY2Fsc1xuICAgICRpbmplY3Rvci5pbnZva2UoY29udHJvbGxlciwgaW5zdGFuY2UsIGNvbGxlY3Rpb25zXzEuU3RyaW5nTWFwV3JhcHBlci5hc3NpZ24obG9jYWxzLCBfbG9jYWxTZXJ2aWNlcywgJHJlcXVpcmVzKSk7XG4gICAgLy8gcmVhc3NpZ24gYmFjayB0aGUgaW5pdGlhbCBiaW5kaW5nIHZhbHVlcywganVzdCBpbiBjYXNlIGlmIHdlIHVzZWQgZGVmYXVsdCB2YWx1ZXNcbiAgICBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuYXNzaWduKGluc3RhbmNlLCBpbml0aWFsSW5zdGFuY2VCaW5kaW5nVmFsdWVzKTtcbiAgICAvKmlmICggaXNGdW5jdGlvbiggaW5zdGFuY2UubmdPbkRlc3Ryb3kgKSApIHtcbiAgICAgJHNjb3BlLiRvbiggJyRkZXN0cm95JywgaW5zdGFuY2UubmdPbkRlc3Ryb3kuYmluZCggaW5zdGFuY2UgKSApO1xuICAgICB9Ki9cbiAgICAvKmlmICh0eXBlb2YgaW5zdGFuY2UubmdBZnRlclZpZXdJbml0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgIGRkby5uZ0FmdGVyVmlld0luaXRCb3VuZCA9IGluc3RhbmNlLm5nQWZ0ZXJWaWV3SW5pdC5iaW5kKGluc3RhbmNlKTtcbiAgICAgfSovXG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci5qcy9jb21taXQvMGFkMmI3MDg2MmQ0OWVjYzQzNTVhMTZkNzY3YzBjYTkzNThlY2MzZVxuICAgIC8vIG9uQ2hhbmdlcyBpcyBjYWxsZWQgYmVmb3JlIG9uSW5pdFxuICAgIGlmIChsYW5nXzEuaXNGdW5jdGlvbihpbnN0YW5jZS5uZ09uQ2hhbmdlcykpIHtcbiAgICAgICAgaW5zdGFuY2UubmdPbkNoYW5nZXMoaW5pdGlhbENoYW5nZXMpO1xuICAgIH1cbiAgICBfZGRvLl9uZ09uSW5pdEJvdW5kID0gZnVuY3Rpb24gX25nT25Jbml0Qm91bmQoKSB7XG4gICAgICAgIC8vIGludm9rZSBhZ2FpbiBvbmx5IGlmIHRoZXJlIGFyZSBhbnkgZGlyZWN0aXZlIHJlcXVpcmVzXG4gICAgICAgIC8vICNwZXJmXG4gICAgICAgIGlmIChjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuc2l6ZShyZXF1aXJlTWFwKSkge1xuICAgICAgICAgICAgdmFyICRyZXF1aXJlc18xID0gZ2V0UmVxdWlyZWRDb250cm9sbGVycyhyZXF1aXJlTWFwLCAkZWxlbWVudCwgY29udHJvbGxlcik7XG4gICAgICAgICAgICAvLyAkaW5qZWN0b3IuaW52b2tlIHdpbGwgZGVsZXRlIGFueSBASW5wdXQvQEF0dHIvQE91dHB1dCB3aGljaCB3ZXJlIHJlc29sdmVkIHdpdGhpbiBfY3JlYXRlRGlyZWN0aXZlQmluZGluZ3NcbiAgICAgICAgICAgIC8vIGFuZCB3aGljaCBoYXZlIHNldCBkZWZhdWx0IHZhbHVlcyBpbiBjb25zdHJ1Y3Rvci4gV2UgbmVlZCB0byBzdG9yZSB0aGVtIGFuZCByZWFzc2lnbiBhZnRlciB0aGlzIGludm9rZVxuICAgICAgICAgICAgdmFyIGluaXRpYWxJbnN0YW5jZUJpbmRpbmdWYWx1ZXNfMSA9IGdldEluaXRpYWxCaW5kaW5ncyhpbnN0YW5jZSk7XG4gICAgICAgICAgICAkaW5qZWN0b3IuaW52b2tlKGNvbnRyb2xsZXIsIGluc3RhbmNlLCBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuYXNzaWduKGxvY2FscywgX2xvY2FsU2VydmljZXMsICRyZXF1aXJlc18xKSk7XG4gICAgICAgICAgICAvLyByZWFzc2lnbiBiYWNrIHRoZSBpbml0aWFsIGJpbmRpbmcgdmFsdWVzLCBqdXN0IGluIGNhc2UgaWYgd2UgdXNlZCBkZWZhdWx0IHZhbHVlc1xuICAgICAgICAgICAgY29sbGVjdGlvbnNfMS5TdHJpbmdNYXBXcmFwcGVyLmFzc2lnbihpbnN0YW5jZSwgaW5pdGlhbEluc3RhbmNlQmluZGluZ1ZhbHVlc18xKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobGFuZ18xLmlzRnVuY3Rpb24oaW5zdGFuY2UubmdPbkluaXQpKSB7XG4gICAgICAgICAgICBpbnN0YW5jZS5uZ09uSW5pdCgpO1xuICAgICAgICB9XG4gICAgICAgIC8vIERvQ2hlY2sgaXMgY2FsbGVkIGFmdGVyIE9uQ2hhbmdlcyBhbmQgT25Jbml0XG4gICAgICAgIGlmIChsYW5nXzEuaXNGdW5jdGlvbihpbnN0YW5jZS5uZ0RvQ2hlY2spKSB7XG4gICAgICAgICAgICB2YXIgcmVtb3ZlRG9DaGVja1dhdGNoZXIgPSAkcG9zdERpZ2VzdFdhdGNoKCRzY29wZSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5zdGFuY2UubmdEb0NoZWNrKCk7IH0pO1xuICAgICAgICAgICAgY2xlYW5VcFdhdGNoZXJzKHJlbW92ZURvQ2hlY2tXYXRjaGVyKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgLy8gUmV0dXJuIHRoZSBjb250cm9sbGVyIGluc3RhbmNlXG4gICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIGZ1bmN0aW9uIGNsZWFuVXBXYXRjaGVycyhjYikge1xuICAgICAgICAkc2NvcGUuJG9uKCckZGVzdHJveScsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNiOyB9KTtcbiAgICB9XG59XG5leHBvcnRzLmRpcmVjdGl2ZUNvbnRyb2xsZXJGYWN0b3J5ID0gZGlyZWN0aXZlQ29udHJvbGxlckZhY3Rvcnk7XG4vKipcbiAqIE5vdGU6ICQkcG9zdERpZ2VzdCB3aWxsIG5vdCB0cmlnZ2VyIGFub3RoZXIgZGlnZXN0IGN5Y2xlLlxuICogU28gYW55IG1vZGlmaWNhdGlvbiB0byAkc2NvcGUgaW5zaWRlICQkcG9zdERpZ2VzdCB3aWxsIG5vdCBnZXQgcmVmbGVjdGVkIGluIHRoZSBET01cbiAqL1xuZnVuY3Rpb24gJHBvc3REaWdlc3RXYXRjaChzY29wZSwgY2IpIHtcbiAgICB2YXIgaGFzUmVnaXN0ZXJlZCA9IGZhbHNlO1xuICAgIHZhciByZW1vdmVEb0NoZWNrV2F0Y2hlciA9IHNjb3BlLiR3YXRjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChoYXNSZWdpc3RlcmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaGFzUmVnaXN0ZXJlZCA9IHRydWU7XG4gICAgICAgIHNjb3BlLiQkcG9zdERpZ2VzdChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBoYXNSZWdpc3RlcmVkID0gZmFsc2U7XG4gICAgICAgICAgICBjYigpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVtb3ZlRG9DaGVja1dhdGNoZXI7XG59XG5mdW5jdGlvbiBnZXRJbml0aWFsQmluZGluZ3MoaW5zdGFuY2UpIHtcbiAgICB2YXIgaW5pdGlhbEJpbmRpbmdWYWx1ZXMgPSB7fTtcbiAgICBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuZm9yRWFjaChpbnN0YW5jZSwgZnVuY3Rpb24gKHZhbHVlLCBwcm9wTmFtZSkge1xuICAgICAgICBpZiAoaW5zdGFuY2VbcHJvcE5hbWVdKSB7XG4gICAgICAgICAgICBpbml0aWFsQmluZGluZ1ZhbHVlc1twcm9wTmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBpbml0aWFsQmluZGluZ1ZhbHVlcztcbn1cbi8qKlxuICogQW5ndWxhciAxIGNvcHkgb2YgaG93IHRvIHJlcXVpcmUgb3RoZXIgZGlyZWN0aXZlc1xuICogQHBhcmFtIHJlcXVpcmVcbiAqIEBwYXJhbSAkZWxlbWVudFxuICogQHBhcmFtIGRpcmVjdGl2ZVxuICogQHJldHVybnMge2FueXxudWxsfVxuICovXG5mdW5jdGlvbiBnZXRSZXF1aXJlZENvbnRyb2xsZXJzKHJlcXVpcmUsICRlbGVtZW50LCBkaXJlY3RpdmUpIHtcbiAgICB2YXIgdmFsdWU7XG4gICAgaWYgKGxhbmdfMS5pc1N0cmluZyhyZXF1aXJlKSkge1xuICAgICAgICB2YXIgbWF0Y2ggPSByZXF1aXJlLm1hdGNoKGNvbnN0YW50c18xLlJFUVVJUkVfUFJFRklYX1JFR0VYUCk7XG4gICAgICAgIHZhciBuYW1lID0gcmVxdWlyZS5zdWJzdHJpbmcobWF0Y2hbMF0ubGVuZ3RoKTtcbiAgICAgICAgdmFyIGluaGVyaXRUeXBlID0gbWF0Y2hbMV0gfHwgbWF0Y2hbM107XG4gICAgICAgIHZhciBvcHRpb25hbCA9IG1hdGNoWzJdID09PSAnPyc7XG4gICAgICAgIC8vSWYgb25seSBwYXJlbnRzIHRoZW4gc3RhcnQgYXQgdGhlIHBhcmVudCBlbGVtZW50XG4gICAgICAgIGlmIChpbmhlcml0VHlwZSA9PT0gJ15eJykge1xuICAgICAgICAgICAgJGVsZW1lbnQgPSAkZWxlbWVudC5wYXJlbnQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXZhbHVlKSB7XG4gICAgICAgICAgICB2YXIgZGF0YU5hbWUgPSBcIiRcIiArIG5hbWUgKyBcIkNvbnRyb2xsZXJcIjtcbiAgICAgICAgICAgIHZhbHVlID0gaW5oZXJpdFR5cGUgPyAkZWxlbWVudC5pbmhlcml0ZWREYXRhKGRhdGFOYW1lKSA6ICRlbGVtZW50LmRhdGEoZGF0YU5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdmFsdWUgJiYgIW9wdGlvbmFsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEaXJlY3RpdmUvQ29udHJvbGxlciAnXCIgKyBuYW1lICsgXCInLCByZXF1aXJlZCBieSBkaXJlY3RpdmUgJ1wiICsgbGFuZ18xLmdldEZ1bmNOYW1lKGRpcmVjdGl2ZSkgKyBcIicsIGNhbid0IGJlIGZvdW5kIVwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChsYW5nXzEuaXNBcnJheShyZXF1aXJlKSkge1xuICAgICAgICB2YWx1ZSA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgaWkgPSByZXF1aXJlLmxlbmd0aDsgaSA8IGlpOyBpKyspIHtcbiAgICAgICAgICAgIHZhbHVlW2ldID0gZ2V0UmVxdWlyZWRDb250cm9sbGVycyhyZXF1aXJlW2ldLCAkZWxlbWVudCwgZGlyZWN0aXZlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIGlmIChsYW5nXzEuaXNKc09iamVjdChyZXF1aXJlKSkge1xuICAgICAgICB2YWx1ZSA9IHt9O1xuICAgICAgICBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuZm9yRWFjaChyZXF1aXJlLCBmdW5jdGlvbiAoY29udHJvbGxlciwgcHJvcGVydHkpIHtcbiAgICAgICAgICAgIHZhbHVlW3Byb3BlcnR5XSA9IGdldFJlcXVpcmVkQ29udHJvbGxlcnMoY29udHJvbGxlciwgJGVsZW1lbnQsIGRpcmVjdGl2ZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbn1cbmV4cG9ydHMuZ2V0UmVxdWlyZWRDb250cm9sbGVycyA9IGdldFJlcXVpcmVkQ29udHJvbGxlcnM7XG5mdW5jdGlvbiBnZXRFbXB0eVJlcXVpcmVkQ29udHJvbGxlcnMocmVxdWlyZU1hcCkge1xuICAgIHJldHVybiBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIua2V5cyhyZXF1aXJlTWFwKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywga2V5TmFtZSkge1xuICAgICAgICBhY2Nba2V5TmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xufVxuZXhwb3J0cy5nZXRFbXB0eVJlcXVpcmVkQ29udHJvbGxlcnMgPSBnZXRFbXB0eVJlcXVpcmVkQ29udHJvbGxlcnM7XG5mdW5jdGlvbiBjcmVhdGVOZXdJbmplY3RhYmxlc1RvTWF0Y2hMb2NhbERpKG9yaWdpbmFsSW5qZWN0YWJsZXMsIHJlcXVpcmVNYXApIHtcbiAgICB2YXIgcmVxdWlyZUtleXMgPSBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIua2V5cyhyZXF1aXJlTWFwKTtcbiAgICByZXR1cm4gb3JpZ2luYWxJbmplY3RhYmxlcy5zbGljZSgpXG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGluamVjdGFibGUpIHtcbiAgICAgICAgdmFyIHJlcGxhY2VJbmpOYW1lID0gcmVxdWlyZUtleXNcbiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKGtleU5hbWUpIHsgcmV0dXJuIHByaW1pdGl2ZXNfMS5TdHJpbmdXcmFwcGVyLnN0YXJ0c1dpdGgoa2V5TmFtZSwgaW5qZWN0YWJsZSk7IH0pWzBdO1xuICAgICAgICAvLyBpZiBmb3VuZCByZW1vdmUgdGhhdCBrZXkgc28gd2Ugd29uJ3QgYXNzaWduIHRoZSBzYW1lXG4gICAgICAgIGlmIChyZXBsYWNlSW5qTmFtZSkge1xuICAgICAgICAgICAgdmFyIGlkeCA9IHJlcXVpcmVLZXlzLmluZGV4T2YocmVwbGFjZUluak5hbWUpO1xuICAgICAgICAgICAgcmVxdWlyZUtleXMuc3BsaWNlKGlkeCwgMSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlcGxhY2VJbmpOYW1lIHx8IGluamVjdGFibGU7XG4gICAgfSk7XG59XG5leHBvcnRzLmNyZWF0ZU5ld0luamVjdGFibGVzVG9NYXRjaExvY2FsRGkgPSBjcmVhdGVOZXdJbmplY3RhYmxlc1RvTWF0Y2hMb2NhbERpO1xuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICogQFRPRE8gcmVtb3ZlP1xuICovXG5mdW5jdGlvbiBpbmplY3Rpb25BcmdzKGZuLCBsb2NhbHMsIHNlcnZpY2VOYW1lLCBpbmplY3RzKSB7XG4gICAgdmFyIGFyZ3MgPSBbXSwgXG4gICAgLy8gJGluamVjdCA9IGNyZWF0ZUluamVjdG9yLiQkYW5ub3RhdGUoZm4sIHN0cmljdERpLCBzZXJ2aWNlTmFtZSk7XG4gICAgJGluamVjdCA9IGluamVjdHM7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9ICRpbmplY3QubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGtleSA9ICRpbmplY3RbaV07XG4gICAgICAgIGlmICh0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaXRrbiwgSW5jb3JyZWN0IGluamVjdGlvbiB0b2tlbiEgRXhwZWN0ZWQgc2VydmljZSBuYW1lIGFzIHN0cmluZywgZ290IFwiICsga2V5KTtcbiAgICAgICAgfVxuICAgICAgICAvKiAgICBhcmdzLnB1c2goIGxvY2FscyAmJiBsb2NhbHMuaGFzT3duUHJvcGVydHkoIGtleSApXG4gICAgICAgICA/IGxvY2Fsc1sga2V5IF1cbiAgICAgICAgIDogZ2V0U2VydmljZSgga2V5LCBzZXJ2aWNlTmFtZSApICk7Ki9cbiAgICAgICAgYXJncy5wdXNoKGxvY2Fsc1trZXldKTtcbiAgICB9XG4gICAgcmV0dXJuIGFyZ3M7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250cm9sbGVyX2ZhY3RvcnkuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvY29udHJvbGxlci9jb250cm9sbGVyX2ZhY3RvcnkuanNcbi8vIG1vZHVsZSBpZCA9IDQ3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 48 */
/* unknown exports provided */
/* all exports used */
/*!*********************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/decorators.js ***!
  \*********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar decorators_1 = __webpack_require__(/*! ../util/decorators */ 9);\nvar metadata_di_1 = __webpack_require__(/*! ./metadata_di */ 8);\nvar metadata_directives_1 = __webpack_require__(/*! ./metadata_directives */ 3);\nexports.Component = decorators_1.makeDecorator(metadata_directives_1.ComponentMetadata);\nexports.Directive = decorators_1.makeDecorator(metadata_directives_1.DirectiveMetadata);\nexports.ContentChildren = decorators_1.makePropDecorator(metadata_di_1.ContentChildrenMetadata);\nexports.ContentChild = decorators_1.makePropDecorator(metadata_di_1.ContentChildMetadata);\nexports.ViewChildren = decorators_1.makePropDecorator(metadata_di_1.ViewChildrenMetadata);\nexports.ViewChild = decorators_1.makePropDecorator(metadata_di_1.ViewChildMetadata);\nexports.Input = decorators_1.makePropDecorator(metadata_directives_1.InputMetadata);\n/**\n *\n * @type {any}\n * @deprecated use @Input('@') instead. Will be removed in 2.0\n */\nexports.Attr = decorators_1.makePropDecorator(metadata_directives_1.AttrMetadata);\nexports.Output = decorators_1.makePropDecorator(metadata_directives_1.OutputMetadata);\nexports.HostBinding = decorators_1.makePropDecorator(metadata_directives_1.HostBindingMetadata);\nexports.HostListener = decorators_1.makePropDecorator(metadata_directives_1.HostListenerMetadata);\n/**\n * Declares an ng module.\n * @experimental\n * @Annotation\n */\nexports.NgModule = decorators_1.makeDecorator(metadata_directives_1.NgModuleMetadata);\n//# sourceMappingURL=decorators.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvZGVjb3JhdG9ycy5qcz8yNjE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIGRlY29yYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2RlY29yYXRvcnNcIik7XG52YXIgbWV0YWRhdGFfZGlfMSA9IHJlcXVpcmUoXCIuL21ldGFkYXRhX2RpXCIpO1xudmFyIG1ldGFkYXRhX2RpcmVjdGl2ZXNfMSA9IHJlcXVpcmUoXCIuL21ldGFkYXRhX2RpcmVjdGl2ZXNcIik7XG5leHBvcnRzLkNvbXBvbmVudCA9IGRlY29yYXRvcnNfMS5tYWtlRGVjb3JhdG9yKG1ldGFkYXRhX2RpcmVjdGl2ZXNfMS5Db21wb25lbnRNZXRhZGF0YSk7XG5leHBvcnRzLkRpcmVjdGl2ZSA9IGRlY29yYXRvcnNfMS5tYWtlRGVjb3JhdG9yKG1ldGFkYXRhX2RpcmVjdGl2ZXNfMS5EaXJlY3RpdmVNZXRhZGF0YSk7XG5leHBvcnRzLkNvbnRlbnRDaGlsZHJlbiA9IGRlY29yYXRvcnNfMS5tYWtlUHJvcERlY29yYXRvcihtZXRhZGF0YV9kaV8xLkNvbnRlbnRDaGlsZHJlbk1ldGFkYXRhKTtcbmV4cG9ydHMuQ29udGVudENoaWxkID0gZGVjb3JhdG9yc18xLm1ha2VQcm9wRGVjb3JhdG9yKG1ldGFkYXRhX2RpXzEuQ29udGVudENoaWxkTWV0YWRhdGEpO1xuZXhwb3J0cy5WaWV3Q2hpbGRyZW4gPSBkZWNvcmF0b3JzXzEubWFrZVByb3BEZWNvcmF0b3IobWV0YWRhdGFfZGlfMS5WaWV3Q2hpbGRyZW5NZXRhZGF0YSk7XG5leHBvcnRzLlZpZXdDaGlsZCA9IGRlY29yYXRvcnNfMS5tYWtlUHJvcERlY29yYXRvcihtZXRhZGF0YV9kaV8xLlZpZXdDaGlsZE1ldGFkYXRhKTtcbmV4cG9ydHMuSW5wdXQgPSBkZWNvcmF0b3JzXzEubWFrZVByb3BEZWNvcmF0b3IobWV0YWRhdGFfZGlyZWN0aXZlc18xLklucHV0TWV0YWRhdGEpO1xuLyoqXG4gKlxuICogQHR5cGUge2FueX1cbiAqIEBkZXByZWNhdGVkIHVzZSBASW5wdXQoJ0AnKSBpbnN0ZWFkLiBXaWxsIGJlIHJlbW92ZWQgaW4gMi4wXG4gKi9cbmV4cG9ydHMuQXR0ciA9IGRlY29yYXRvcnNfMS5tYWtlUHJvcERlY29yYXRvcihtZXRhZGF0YV9kaXJlY3RpdmVzXzEuQXR0ck1ldGFkYXRhKTtcbmV4cG9ydHMuT3V0cHV0ID0gZGVjb3JhdG9yc18xLm1ha2VQcm9wRGVjb3JhdG9yKG1ldGFkYXRhX2RpcmVjdGl2ZXNfMS5PdXRwdXRNZXRhZGF0YSk7XG5leHBvcnRzLkhvc3RCaW5kaW5nID0gZGVjb3JhdG9yc18xLm1ha2VQcm9wRGVjb3JhdG9yKG1ldGFkYXRhX2RpcmVjdGl2ZXNfMS5Ib3N0QmluZGluZ01ldGFkYXRhKTtcbmV4cG9ydHMuSG9zdExpc3RlbmVyID0gZGVjb3JhdG9yc18xLm1ha2VQcm9wRGVjb3JhdG9yKG1ldGFkYXRhX2RpcmVjdGl2ZXNfMS5Ib3N0TGlzdGVuZXJNZXRhZGF0YSk7XG4vKipcbiAqIERlY2xhcmVzIGFuIG5nIG1vZHVsZS5cbiAqIEBleHBlcmltZW50YWxcbiAqIEBBbm5vdGF0aW9uXG4gKi9cbmV4cG9ydHMuTmdNb2R1bGUgPSBkZWNvcmF0b3JzXzEubWFrZURlY29yYXRvcihtZXRhZGF0YV9kaXJlY3RpdmVzXzEuTmdNb2R1bGVNZXRhZGF0YSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvcmF0b3JzLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9kaXJlY3RpdmVzL2RlY29yYXRvcnMuanNcbi8vIG1vZHVsZSBpZCA9IDQ4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 49 */
/* unknown exports provided */
/* all exports used */
/*!*****************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/directive_provider.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar directive_resolver_1 = __webpack_require__(/*! ../linker/directive_resolver */ 54);\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar collections_1 = __webpack_require__(/*! ../../facade/collections */ 1);\nvar directive_lifecycles_reflector_1 = __webpack_require__(/*! ../linker/directive_lifecycles_reflector */ 53);\nvar directive_lifecycle_interfaces_1 = __webpack_require__(/*! ../linker/directive_lifecycle_interfaces */ 13);\nvar metadata_directives_1 = __webpack_require__(/*! ./metadata_directives */ 3);\nvar controller_factory_1 = __webpack_require__(/*! ./controller/controller_factory */ 47);\nvar children_resolver_1 = __webpack_require__(/*! ./query/children_resolver */ 52);\nvar host_parser_1 = __webpack_require__(/*! ./host/host_parser */ 50);\nvar host_resolver_1 = __webpack_require__(/*! ./host/host_resolver */ 51);\nvar directives_utils_1 = __webpack_require__(/*! ./directives_utils */ 12);\n/**\n * @internal\n */\nvar DirectiveProvider = (function () {\n    function DirectiveProvider(directiveResolver) {\n        this.directiveResolver = directiveResolver;\n    }\n    /**\n     * creates directiveName and DirectiveFactory for angularJS container\n     *\n     * it produces directive for classes decorated with @Directive with following DDO:\n     * ```\n     * {\n     * require: ['directiveName'],\n     * controller: ClassDirective,\n     * link: postLinkFn\n     * }\n     * ```\n     *\n     * it produces component for classes decorated with @Component with following DDO:\n     * ```\n     * {\n     * require: ['directiveName'],\n     * controller: ClassDirective,\n     * controllerAs: '$ctrl',\n     * template: 'component template string',\n     * scope:{},\n     * bindToController:{},\n     * transclude: false,\n     * link: postLinkFn\n     * }\n     * ```\n     * @param type\n     * @returns {string|function(): ng.IDirective[]}\n     */\n    DirectiveProvider.prototype.createFromType = function (type) {\n        var metadata = this.directiveResolver.resolve(type);\n        var directiveName = lang_1.resolveDirectiveNameFromSelector(metadata.selector);\n        var requireMap = this.directiveResolver.getRequiredDirectivesMap(type);\n        var lfHooks = directive_lifecycles_reflector_1.resolveImplementedLifeCycleHooks(type);\n        var _ddo = {\n            restrict: 'A',\n            controller: _controller,\n            link: {\n                pre: function () { _ddo._ngOnInitBound(); },\n                post: this._createLink(type, metadata, lfHooks)\n            },\n            // @TODO this will be removed after @Query handling is moved to directiveControllerFactory\n            require: this._createRequires(requireMap, directiveName),\n            _ngOnInitBound: lang_1.noop\n        };\n        // Component controllers must be created from a factory. Checkout out\n        // util/directive-controller.js for more information about what's going on here\n        _controller.$inject = ['$scope', '$element', '$attrs', '$transclude', '$injector'];\n        function _controller($scope, $element, $attrs, $transclude, $injector) {\n            var locals = { $scope: $scope, $element: $element, $attrs: $attrs, $transclude: $transclude };\n            return controller_factory_1.directiveControllerFactory(this, type, $injector, locals, requireMap, _ddo, metadata);\n        }\n        // specific DDO augmentation for @Component\n        if (metadata instanceof metadata_directives_1.ComponentMetadata) {\n            var assetsPath = this.directiveResolver.parseAssetUrl(metadata);\n            var componentSpecificDDO = {\n                restrict: 'E',\n                scope: {},\n                bindToController: {},\n                controllerAs: DirectiveProvider._controllerAs,\n                transclude: DirectiveProvider._transclude\n            };\n            if (metadata.template && metadata.templateUrl) {\n                throw new Error('cannot have both template and templateUrl');\n            }\n            if (metadata.template) {\n                componentSpecificDDO.template = metadata.template;\n            }\n            if (metadata.templateUrl) {\n                componentSpecificDDO.templateUrl = \"\" + assetsPath + metadata.templateUrl;\n            }\n            collections_1.StringMapWrapper.assign(_ddo, componentSpecificDDO);\n        }\n        // allow compile defined as static method on Type\n        if (lang_1.isFunction(type.compile)) {\n            _ddo.compile = function compile(tElement, tAttrs) {\n                var linkFn = type.compile(tElement, tAttrs);\n                // if user custom compile fn returns link use that one instead use generated\n                return lang_1.isJsObject(linkFn)\n                    ? linkFn\n                    : this.link;\n            };\n        }\n        // allow link defined as static method on Type override the created one\n        // you should not use this very often\n        // Note: if you use this any @Host property decorators or lifeCycle hooks wont work\n        if (lang_1.isFunction(type.link)) {\n            _ddo.link = type.link;\n        }\n        // legacy property overrides all generated DDO stuff\n        var ddo = this._createDDO(_ddo, metadata.legacy);\n        function directiveFactory() { return ddo; }\n        // ==========================\n        // ngComponentRouter Support:\n        // ==========================\n        // @TODO(pete) remove the following `forEach` before we release 1.6.0\n        // The component-router@0.2.0 looks for the annotations on the controller constructor\n        // Nothing in Angular looks for annotations on the factory function but we can't remove\n        // it from 1.5.x yet.\n        // Copy any annotation properties (starting with $) over to the factory and controller constructor functions\n        // These could be used by libraries such as the new component router\n        collections_1.StringMapWrapper.forEach(ddo, function (val, key) {\n            if (key.charAt(0) === '$') {\n                directiveFactory[key] = val;\n                // Don't try to copy over annotations to named controller\n                if (lang_1.isFunction(ddo.controller)) {\n                    ddo.controller[key] = val;\n                }\n            }\n        });\n        // support componentRouter $canActivate lc hook as static instead of defined within legacy object\n        // componentRouter reads all lc hooks from directiveFactory ¯\\_(ツ)_/¯\n        // @TODO update this when new component router will be available for Angular 1 ( 1.6 release probably )\n        if (lang_1.isFunction(type.$canActivate)) {\n            directiveFactory.$canActivate = type.$canActivate;\n        }\n        return [directiveName, directiveFactory];\n    };\n    DirectiveProvider.prototype._createDDO = function (ddo, legacyDDO) {\n        return lang_1.assign({}, DirectiveProvider._ddoShell, ddo, legacyDDO);\n    };\n    /**\n     *\n     * @param requireMap\n     * @param directiveName\n     * @returns {Array}\n     * @private\n     * @internal\n     */\n    DirectiveProvider.prototype._createRequires = function (requireMap, directiveName) {\n        return [directiveName].concat(collections_1.StringMapWrapper.values(requireMap));\n    };\n    /**\n     * Directive lifeCycles:\n     * - ngOnInit from preLink (all children compiled and DOM ready)\n     * - ngAfterContentInit from postLink ( DOM in children ready )\n     * - ngOnDestroy from postLink\n     *\n     * Component lifeCycles:\n     * - ngOnInit from preLink (controller require ready)\n     * - ngAfterViewInit from postLink ( all children in view+content compiled and DOM ready )\n     * - ngAfterContentInit from postLink ( same as ngAfterViewInit )\n     * - ngOnDestroy from postLink\n     * @param type\n     * @param metadata\n     * @param lfHooks\n     * @private\n     * @internal\n     */\n    DirectiveProvider.prototype._createLink = function (type, metadata, lfHooks) {\n        if ((lfHooks.ngAfterContentChecked || lfHooks.ngAfterViewChecked) && collections_1.StringMapWrapper.size(metadata.queries) === 0) {\n            throw new Error(\"\\n              Hooks Impl for \" + lang_1.stringify(type) + \":\\n              ===================================\\n              You've implement AfterContentChecked/AfterViewChecked lifecycle, but @ViewChild(ren)/@ContentChild(ren) decorators are not used.\\n              we cannot invoke After(Content|View)Checked without provided @Query decorators\\n              \");\n        }\n        if (metadata instanceof metadata_directives_1.ComponentMetadata) {\n            if ((lfHooks.ngAfterContentInit || lfHooks.ngAfterContentChecked) && !collections_1.StringMapWrapper.getValueFromPath(metadata, 'legacy.transclude')) {\n                throw new Error(\"\\n              Hooks Impl for \" + lang_1.stringify(type) + \":\\n              ===================================\\n              You cannot implement AfterContentInit lifecycle, without allowed transclusion.\\n              turn transclusion on within decorator like this: @Component({legacy:{transclude:true}})\\n              \");\n            }\n        }\n        // we need to implement this if query are present on class, because during postLink _ngOnChildrenChanged is not yet\n        // implemented on controller instance\n        if (collections_1.StringMapWrapper.size(metadata.queries)) {\n            type.prototype._ngOnChildrenChanged = lang_1.noop;\n        }\n        var hostProcessed = host_parser_1._parseHost(metadata.host);\n        return postLink;\n        function postLink(scope, element, attrs, controller, transclude) {\n            var _watchers = [];\n            var ctrl = controller[0], requiredCtrls = controller.slice(1);\n            host_resolver_1._setHostStaticAttributes(element, hostProcessed.hostStatic);\n            // setup @HostBindings\n            _watchers.push.apply(_watchers, host_resolver_1._setHostBindings(scope, element, ctrl, hostProcessed.hostBindings));\n            // setup @HostListeners\n            host_resolver_1._setHostListeners(scope, element, ctrl, hostProcessed.hostListeners);\n            // @ContentChild/@ContentChildren/@ViewChild/@ViewChildren related logic\n            var parentCheckedNotifiers = children_resolver_1._getParentCheckNotifiers(ctrl, requiredCtrls);\n            _watchers.push.apply(_watchers, parentCheckedNotifiers);\n            children_resolver_1._setupQuery(scope, element, ctrl, metadata.queries);\n            // AfterContentInit/AfterViewInit Hooks\n            // if there are query defined schedule $evalAsync semaphore\n            if (collections_1.StringMapWrapper.size(metadata.queries)) {\n                ctrl._ngOnChildrenChanged(directive_lifecycle_interfaces_1.ChildrenChangeHook.FromView, [\n                    parentCheckedNotifiers.forEach(function (cb) { return cb(); }),\n                    ctrl.ngAfterViewInit && ctrl.ngAfterViewInit.bind(ctrl),\n                    ctrl.ngAfterViewChecked && ctrl.ngAfterViewChecked.bind(ctrl),\n                ]);\n                ctrl._ngOnChildrenChanged(directive_lifecycle_interfaces_1.ChildrenChangeHook.FromContent, [\n                    parentCheckedNotifiers.forEach(function (cb) { return cb(); }),\n                    ctrl.ngAfterContentInit && ctrl.ngAfterContentInit.bind(ctrl),\n                    ctrl.ngAfterContentChecked && ctrl.ngAfterContentChecked.bind(ctrl),\n                ]);\n            }\n            else {\n                // no @ContentChild/@ViewChild(ref) decorators exist, call just controller init method\n                parentCheckedNotifiers.forEach(function (cb) { return cb(); });\n                ctrl.ngAfterViewInit && ctrl.ngAfterViewInit();\n                ctrl.ngAfterContentInit && ctrl.ngAfterContentInit();\n            }\n            directives_utils_1._setupDestroyHandler(scope, element, ctrl, lfHooks.ngOnDestroy, _watchers);\n        }\n    };\n    return DirectiveProvider;\n}());\nDirectiveProvider._ddoShell = {\n    require: [],\n    controller: lang_1.noop,\n    link: { pre: lang_1.noop, post: lang_1.noop }\n};\nDirectiveProvider._controllerAs = \"$ctrl\";\nDirectiveProvider._transclude = false;\nexports.DirectiveProvider = DirectiveProvider;\nexports.directiveProvider = new DirectiveProvider(new directive_resolver_1.DirectiveResolver());\n//# sourceMappingURL=directive_provider.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvZGlyZWN0aXZlX3Byb3ZpZGVyLmpzPzA2ODkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgZGlyZWN0aXZlX3Jlc29sdmVyXzEgPSByZXF1aXJlKFwiLi4vbGlua2VyL2RpcmVjdGl2ZV9yZXNvbHZlclwiKTtcbnZhciBsYW5nXzEgPSByZXF1aXJlKFwiLi4vLi4vZmFjYWRlL2xhbmdcIik7XG52YXIgY29sbGVjdGlvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9mYWNhZGUvY29sbGVjdGlvbnNcIik7XG52YXIgZGlyZWN0aXZlX2xpZmVjeWNsZXNfcmVmbGVjdG9yXzEgPSByZXF1aXJlKFwiLi4vbGlua2VyL2RpcmVjdGl2ZV9saWZlY3ljbGVzX3JlZmxlY3RvclwiKTtcbnZhciBkaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXNfMSA9IHJlcXVpcmUoXCIuLi9saW5rZXIvZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXCIpO1xudmFyIG1ldGFkYXRhX2RpcmVjdGl2ZXNfMSA9IHJlcXVpcmUoXCIuL21ldGFkYXRhX2RpcmVjdGl2ZXNcIik7XG52YXIgY29udHJvbGxlcl9mYWN0b3J5XzEgPSByZXF1aXJlKFwiLi9jb250cm9sbGVyL2NvbnRyb2xsZXJfZmFjdG9yeVwiKTtcbnZhciBjaGlsZHJlbl9yZXNvbHZlcl8xID0gcmVxdWlyZShcIi4vcXVlcnkvY2hpbGRyZW5fcmVzb2x2ZXJcIik7XG52YXIgaG9zdF9wYXJzZXJfMSA9IHJlcXVpcmUoXCIuL2hvc3QvaG9zdF9wYXJzZXJcIik7XG52YXIgaG9zdF9yZXNvbHZlcl8xID0gcmVxdWlyZShcIi4vaG9zdC9ob3N0X3Jlc29sdmVyXCIpO1xudmFyIGRpcmVjdGl2ZXNfdXRpbHNfMSA9IHJlcXVpcmUoXCIuL2RpcmVjdGl2ZXNfdXRpbHNcIik7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG52YXIgRGlyZWN0aXZlUHJvdmlkZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERpcmVjdGl2ZVByb3ZpZGVyKGRpcmVjdGl2ZVJlc29sdmVyKSB7XG4gICAgICAgIHRoaXMuZGlyZWN0aXZlUmVzb2x2ZXIgPSBkaXJlY3RpdmVSZXNvbHZlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogY3JlYXRlcyBkaXJlY3RpdmVOYW1lIGFuZCBEaXJlY3RpdmVGYWN0b3J5IGZvciBhbmd1bGFySlMgY29udGFpbmVyXG4gICAgICpcbiAgICAgKiBpdCBwcm9kdWNlcyBkaXJlY3RpdmUgZm9yIGNsYXNzZXMgZGVjb3JhdGVkIHdpdGggQERpcmVjdGl2ZSB3aXRoIGZvbGxvd2luZyBERE86XG4gICAgICogYGBgXG4gICAgICoge1xuICAgICAqIHJlcXVpcmU6IFsnZGlyZWN0aXZlTmFtZSddLFxuICAgICAqIGNvbnRyb2xsZXI6IENsYXNzRGlyZWN0aXZlLFxuICAgICAqIGxpbms6IHBvc3RMaW5rRm5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBpdCBwcm9kdWNlcyBjb21wb25lbnQgZm9yIGNsYXNzZXMgZGVjb3JhdGVkIHdpdGggQENvbXBvbmVudCB3aXRoIGZvbGxvd2luZyBERE86XG4gICAgICogYGBgXG4gICAgICoge1xuICAgICAqIHJlcXVpcmU6IFsnZGlyZWN0aXZlTmFtZSddLFxuICAgICAqIGNvbnRyb2xsZXI6IENsYXNzRGlyZWN0aXZlLFxuICAgICAqIGNvbnRyb2xsZXJBczogJyRjdHJsJyxcbiAgICAgKiB0ZW1wbGF0ZTogJ2NvbXBvbmVudCB0ZW1wbGF0ZSBzdHJpbmcnLFxuICAgICAqIHNjb3BlOnt9LFxuICAgICAqIGJpbmRUb0NvbnRyb2xsZXI6e30sXG4gICAgICogdHJhbnNjbHVkZTogZmFsc2UsXG4gICAgICogbGluazogcG9zdExpbmtGblxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKiBAcGFyYW0gdHlwZVxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd8ZnVuY3Rpb24oKTogbmcuSURpcmVjdGl2ZVtdfVxuICAgICAqL1xuICAgIERpcmVjdGl2ZVByb3ZpZGVyLnByb3RvdHlwZS5jcmVhdGVGcm9tVHlwZSA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIHZhciBtZXRhZGF0YSA9IHRoaXMuZGlyZWN0aXZlUmVzb2x2ZXIucmVzb2x2ZSh0eXBlKTtcbiAgICAgICAgdmFyIGRpcmVjdGl2ZU5hbWUgPSBsYW5nXzEucmVzb2x2ZURpcmVjdGl2ZU5hbWVGcm9tU2VsZWN0b3IobWV0YWRhdGEuc2VsZWN0b3IpO1xuICAgICAgICB2YXIgcmVxdWlyZU1hcCA9IHRoaXMuZGlyZWN0aXZlUmVzb2x2ZXIuZ2V0UmVxdWlyZWREaXJlY3RpdmVzTWFwKHR5cGUpO1xuICAgICAgICB2YXIgbGZIb29rcyA9IGRpcmVjdGl2ZV9saWZlY3ljbGVzX3JlZmxlY3Rvcl8xLnJlc29sdmVJbXBsZW1lbnRlZExpZmVDeWNsZUhvb2tzKHR5cGUpO1xuICAgICAgICB2YXIgX2RkbyA9IHtcbiAgICAgICAgICAgIHJlc3RyaWN0OiAnQScsXG4gICAgICAgICAgICBjb250cm9sbGVyOiBfY29udHJvbGxlcixcbiAgICAgICAgICAgIGxpbms6IHtcbiAgICAgICAgICAgICAgICBwcmU6IGZ1bmN0aW9uICgpIHsgX2Rkby5fbmdPbkluaXRCb3VuZCgpOyB9LFxuICAgICAgICAgICAgICAgIHBvc3Q6IHRoaXMuX2NyZWF0ZUxpbmsodHlwZSwgbWV0YWRhdGEsIGxmSG9va3MpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy8gQFRPRE8gdGhpcyB3aWxsIGJlIHJlbW92ZWQgYWZ0ZXIgQFF1ZXJ5IGhhbmRsaW5nIGlzIG1vdmVkIHRvIGRpcmVjdGl2ZUNvbnRyb2xsZXJGYWN0b3J5XG4gICAgICAgICAgICByZXF1aXJlOiB0aGlzLl9jcmVhdGVSZXF1aXJlcyhyZXF1aXJlTWFwLCBkaXJlY3RpdmVOYW1lKSxcbiAgICAgICAgICAgIF9uZ09uSW5pdEJvdW5kOiBsYW5nXzEubm9vcFxuICAgICAgICB9O1xuICAgICAgICAvLyBDb21wb25lbnQgY29udHJvbGxlcnMgbXVzdCBiZSBjcmVhdGVkIGZyb20gYSBmYWN0b3J5LiBDaGVja291dCBvdXRcbiAgICAgICAgLy8gdXRpbC9kaXJlY3RpdmUtY29udHJvbGxlci5qcyBmb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0J3MgZ29pbmcgb24gaGVyZVxuICAgICAgICBfY29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCAnJGVsZW1lbnQnLCAnJGF0dHJzJywgJyR0cmFuc2NsdWRlJywgJyRpbmplY3RvciddO1xuICAgICAgICBmdW5jdGlvbiBfY29udHJvbGxlcigkc2NvcGUsICRlbGVtZW50LCAkYXR0cnMsICR0cmFuc2NsdWRlLCAkaW5qZWN0b3IpIHtcbiAgICAgICAgICAgIHZhciBsb2NhbHMgPSB7ICRzY29wZTogJHNjb3BlLCAkZWxlbWVudDogJGVsZW1lbnQsICRhdHRyczogJGF0dHJzLCAkdHJhbnNjbHVkZTogJHRyYW5zY2x1ZGUgfTtcbiAgICAgICAgICAgIHJldHVybiBjb250cm9sbGVyX2ZhY3RvcnlfMS5kaXJlY3RpdmVDb250cm9sbGVyRmFjdG9yeSh0aGlzLCB0eXBlLCAkaW5qZWN0b3IsIGxvY2FscywgcmVxdWlyZU1hcCwgX2RkbywgbWV0YWRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHNwZWNpZmljIERETyBhdWdtZW50YXRpb24gZm9yIEBDb21wb25lbnRcbiAgICAgICAgaWYgKG1ldGFkYXRhIGluc3RhbmNlb2YgbWV0YWRhdGFfZGlyZWN0aXZlc18xLkNvbXBvbmVudE1ldGFkYXRhKSB7XG4gICAgICAgICAgICB2YXIgYXNzZXRzUGF0aCA9IHRoaXMuZGlyZWN0aXZlUmVzb2x2ZXIucGFyc2VBc3NldFVybChtZXRhZGF0YSk7XG4gICAgICAgICAgICB2YXIgY29tcG9uZW50U3BlY2lmaWNERE8gPSB7XG4gICAgICAgICAgICAgICAgcmVzdHJpY3Q6ICdFJyxcbiAgICAgICAgICAgICAgICBzY29wZToge30sXG4gICAgICAgICAgICAgICAgYmluZFRvQ29udHJvbGxlcjoge30sXG4gICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiBEaXJlY3RpdmVQcm92aWRlci5fY29udHJvbGxlckFzLFxuICAgICAgICAgICAgICAgIHRyYW5zY2x1ZGU6IERpcmVjdGl2ZVByb3ZpZGVyLl90cmFuc2NsdWRlXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKG1ldGFkYXRhLnRlbXBsYXRlICYmIG1ldGFkYXRhLnRlbXBsYXRlVXJsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdjYW5ub3QgaGF2ZSBib3RoIHRlbXBsYXRlIGFuZCB0ZW1wbGF0ZVVybCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1ldGFkYXRhLnRlbXBsYXRlKSB7XG4gICAgICAgICAgICAgICAgY29tcG9uZW50U3BlY2lmaWNERE8udGVtcGxhdGUgPSBtZXRhZGF0YS50ZW1wbGF0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtZXRhZGF0YS50ZW1wbGF0ZVVybCkge1xuICAgICAgICAgICAgICAgIGNvbXBvbmVudFNwZWNpZmljRERPLnRlbXBsYXRlVXJsID0gXCJcIiArIGFzc2V0c1BhdGggKyBtZXRhZGF0YS50ZW1wbGF0ZVVybDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbGxlY3Rpb25zXzEuU3RyaW5nTWFwV3JhcHBlci5hc3NpZ24oX2RkbywgY29tcG9uZW50U3BlY2lmaWNERE8pO1xuICAgICAgICB9XG4gICAgICAgIC8vIGFsbG93IGNvbXBpbGUgZGVmaW5lZCBhcyBzdGF0aWMgbWV0aG9kIG9uIFR5cGVcbiAgICAgICAgaWYgKGxhbmdfMS5pc0Z1bmN0aW9uKHR5cGUuY29tcGlsZSkpIHtcbiAgICAgICAgICAgIF9kZG8uY29tcGlsZSA9IGZ1bmN0aW9uIGNvbXBpbGUodEVsZW1lbnQsIHRBdHRycykge1xuICAgICAgICAgICAgICAgIHZhciBsaW5rRm4gPSB0eXBlLmNvbXBpbGUodEVsZW1lbnQsIHRBdHRycyk7XG4gICAgICAgICAgICAgICAgLy8gaWYgdXNlciBjdXN0b20gY29tcGlsZSBmbiByZXR1cm5zIGxpbmsgdXNlIHRoYXQgb25lIGluc3RlYWQgdXNlIGdlbmVyYXRlZFxuICAgICAgICAgICAgICAgIHJldHVybiBsYW5nXzEuaXNKc09iamVjdChsaW5rRm4pXG4gICAgICAgICAgICAgICAgICAgID8gbGlua0ZuXG4gICAgICAgICAgICAgICAgICAgIDogdGhpcy5saW5rO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBhbGxvdyBsaW5rIGRlZmluZWQgYXMgc3RhdGljIG1ldGhvZCBvbiBUeXBlIG92ZXJyaWRlIHRoZSBjcmVhdGVkIG9uZVxuICAgICAgICAvLyB5b3Ugc2hvdWxkIG5vdCB1c2UgdGhpcyB2ZXJ5IG9mdGVuXG4gICAgICAgIC8vIE5vdGU6IGlmIHlvdSB1c2UgdGhpcyBhbnkgQEhvc3QgcHJvcGVydHkgZGVjb3JhdG9ycyBvciBsaWZlQ3ljbGUgaG9va3Mgd29udCB3b3JrXG4gICAgICAgIGlmIChsYW5nXzEuaXNGdW5jdGlvbih0eXBlLmxpbmspKSB7XG4gICAgICAgICAgICBfZGRvLmxpbmsgPSB0eXBlLmxpbms7XG4gICAgICAgIH1cbiAgICAgICAgLy8gbGVnYWN5IHByb3BlcnR5IG92ZXJyaWRlcyBhbGwgZ2VuZXJhdGVkIERETyBzdHVmZlxuICAgICAgICB2YXIgZGRvID0gdGhpcy5fY3JlYXRlRERPKF9kZG8sIG1ldGFkYXRhLmxlZ2FjeSk7XG4gICAgICAgIGZ1bmN0aW9uIGRpcmVjdGl2ZUZhY3RvcnkoKSB7IHJldHVybiBkZG87IH1cbiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgLy8gbmdDb21wb25lbnRSb3V0ZXIgU3VwcG9ydDpcbiAgICAgICAgLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgICAgICAgLy8gQFRPRE8ocGV0ZSkgcmVtb3ZlIHRoZSBmb2xsb3dpbmcgYGZvckVhY2hgIGJlZm9yZSB3ZSByZWxlYXNlIDEuNi4wXG4gICAgICAgIC8vIFRoZSBjb21wb25lbnQtcm91dGVyQDAuMi4wIGxvb2tzIGZvciB0aGUgYW5ub3RhdGlvbnMgb24gdGhlIGNvbnRyb2xsZXIgY29uc3RydWN0b3JcbiAgICAgICAgLy8gTm90aGluZyBpbiBBbmd1bGFyIGxvb2tzIGZvciBhbm5vdGF0aW9ucyBvbiB0aGUgZmFjdG9yeSBmdW5jdGlvbiBidXQgd2UgY2FuJ3QgcmVtb3ZlXG4gICAgICAgIC8vIGl0IGZyb20gMS41LnggeWV0LlxuICAgICAgICAvLyBDb3B5IGFueSBhbm5vdGF0aW9uIHByb3BlcnRpZXMgKHN0YXJ0aW5nIHdpdGggJCkgb3ZlciB0byB0aGUgZmFjdG9yeSBhbmQgY29udHJvbGxlciBjb25zdHJ1Y3RvciBmdW5jdGlvbnNcbiAgICAgICAgLy8gVGhlc2UgY291bGQgYmUgdXNlZCBieSBsaWJyYXJpZXMgc3VjaCBhcyB0aGUgbmV3IGNvbXBvbmVudCByb3V0ZXJcbiAgICAgICAgY29sbGVjdGlvbnNfMS5TdHJpbmdNYXBXcmFwcGVyLmZvckVhY2goZGRvLCBmdW5jdGlvbiAodmFsLCBrZXkpIHtcbiAgICAgICAgICAgIGlmIChrZXkuY2hhckF0KDApID09PSAnJCcpIHtcbiAgICAgICAgICAgICAgICBkaXJlY3RpdmVGYWN0b3J5W2tleV0gPSB2YWw7XG4gICAgICAgICAgICAgICAgLy8gRG9uJ3QgdHJ5IHRvIGNvcHkgb3ZlciBhbm5vdGF0aW9ucyB0byBuYW1lZCBjb250cm9sbGVyXG4gICAgICAgICAgICAgICAgaWYgKGxhbmdfMS5pc0Z1bmN0aW9uKGRkby5jb250cm9sbGVyKSkge1xuICAgICAgICAgICAgICAgICAgICBkZG8uY29udHJvbGxlcltrZXldID0gdmFsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8vIHN1cHBvcnQgY29tcG9uZW50Um91dGVyICRjYW5BY3RpdmF0ZSBsYyBob29rIGFzIHN0YXRpYyBpbnN0ZWFkIG9mIGRlZmluZWQgd2l0aGluIGxlZ2FjeSBvYmplY3RcbiAgICAgICAgLy8gY29tcG9uZW50Um91dGVyIHJlYWRzIGFsbCBsYyBob29rcyBmcm9tIGRpcmVjdGl2ZUZhY3Rvcnkgwq9cXF8o44OEKV8vwq9cbiAgICAgICAgLy8gQFRPRE8gdXBkYXRlIHRoaXMgd2hlbiBuZXcgY29tcG9uZW50IHJvdXRlciB3aWxsIGJlIGF2YWlsYWJsZSBmb3IgQW5ndWxhciAxICggMS42IHJlbGVhc2UgcHJvYmFibHkgKVxuICAgICAgICBpZiAobGFuZ18xLmlzRnVuY3Rpb24odHlwZS4kY2FuQWN0aXZhdGUpKSB7XG4gICAgICAgICAgICBkaXJlY3RpdmVGYWN0b3J5LiRjYW5BY3RpdmF0ZSA9IHR5cGUuJGNhbkFjdGl2YXRlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbZGlyZWN0aXZlTmFtZSwgZGlyZWN0aXZlRmFjdG9yeV07XG4gICAgfTtcbiAgICBEaXJlY3RpdmVQcm92aWRlci5wcm90b3R5cGUuX2NyZWF0ZURETyA9IGZ1bmN0aW9uIChkZG8sIGxlZ2FjeURETykge1xuICAgICAgICByZXR1cm4gbGFuZ18xLmFzc2lnbih7fSwgRGlyZWN0aXZlUHJvdmlkZXIuX2Rkb1NoZWxsLCBkZG8sIGxlZ2FjeURETyk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSByZXF1aXJlTWFwXG4gICAgICogQHBhcmFtIGRpcmVjdGl2ZU5hbWVcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBEaXJlY3RpdmVQcm92aWRlci5wcm90b3R5cGUuX2NyZWF0ZVJlcXVpcmVzID0gZnVuY3Rpb24gKHJlcXVpcmVNYXAsIGRpcmVjdGl2ZU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIFtkaXJlY3RpdmVOYW1lXS5jb25jYXQoY29sbGVjdGlvbnNfMS5TdHJpbmdNYXBXcmFwcGVyLnZhbHVlcyhyZXF1aXJlTWFwKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBEaXJlY3RpdmUgbGlmZUN5Y2xlczpcbiAgICAgKiAtIG5nT25Jbml0IGZyb20gcHJlTGluayAoYWxsIGNoaWxkcmVuIGNvbXBpbGVkIGFuZCBET00gcmVhZHkpXG4gICAgICogLSBuZ0FmdGVyQ29udGVudEluaXQgZnJvbSBwb3N0TGluayAoIERPTSBpbiBjaGlsZHJlbiByZWFkeSApXG4gICAgICogLSBuZ09uRGVzdHJveSBmcm9tIHBvc3RMaW5rXG4gICAgICpcbiAgICAgKiBDb21wb25lbnQgbGlmZUN5Y2xlczpcbiAgICAgKiAtIG5nT25Jbml0IGZyb20gcHJlTGluayAoY29udHJvbGxlciByZXF1aXJlIHJlYWR5KVxuICAgICAqIC0gbmdBZnRlclZpZXdJbml0IGZyb20gcG9zdExpbmsgKCBhbGwgY2hpbGRyZW4gaW4gdmlldytjb250ZW50IGNvbXBpbGVkIGFuZCBET00gcmVhZHkgKVxuICAgICAqIC0gbmdBZnRlckNvbnRlbnRJbml0IGZyb20gcG9zdExpbmsgKCBzYW1lIGFzIG5nQWZ0ZXJWaWV3SW5pdCApXG4gICAgICogLSBuZ09uRGVzdHJveSBmcm9tIHBvc3RMaW5rXG4gICAgICogQHBhcmFtIHR5cGVcbiAgICAgKiBAcGFyYW0gbWV0YWRhdGFcbiAgICAgKiBAcGFyYW0gbGZIb29rc1xuICAgICAqIEBwcml2YXRlXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgRGlyZWN0aXZlUHJvdmlkZXIucHJvdG90eXBlLl9jcmVhdGVMaW5rID0gZnVuY3Rpb24gKHR5cGUsIG1ldGFkYXRhLCBsZkhvb2tzKSB7XG4gICAgICAgIGlmICgobGZIb29rcy5uZ0FmdGVyQ29udGVudENoZWNrZWQgfHwgbGZIb29rcy5uZ0FmdGVyVmlld0NoZWNrZWQpICYmIGNvbGxlY3Rpb25zXzEuU3RyaW5nTWFwV3JhcHBlci5zaXplKG1ldGFkYXRhLnF1ZXJpZXMpID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJcXG4gICAgICAgICAgICAgIEhvb2tzIEltcGwgZm9yIFwiICsgbGFuZ18xLnN0cmluZ2lmeSh0eXBlKSArIFwiOlxcbiAgICAgICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG4gICAgICAgICAgICAgIFlvdSd2ZSBpbXBsZW1lbnQgQWZ0ZXJDb250ZW50Q2hlY2tlZC9BZnRlclZpZXdDaGVja2VkIGxpZmVjeWNsZSwgYnV0IEBWaWV3Q2hpbGQocmVuKS9AQ29udGVudENoaWxkKHJlbikgZGVjb3JhdG9ycyBhcmUgbm90IHVzZWQuXFxuICAgICAgICAgICAgICB3ZSBjYW5ub3QgaW52b2tlIEFmdGVyKENvbnRlbnR8VmlldylDaGVja2VkIHdpdGhvdXQgcHJvdmlkZWQgQFF1ZXJ5IGRlY29yYXRvcnNcXG4gICAgICAgICAgICAgIFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobWV0YWRhdGEgaW5zdGFuY2VvZiBtZXRhZGF0YV9kaXJlY3RpdmVzXzEuQ29tcG9uZW50TWV0YWRhdGEpIHtcbiAgICAgICAgICAgIGlmICgobGZIb29rcy5uZ0FmdGVyQ29udGVudEluaXQgfHwgbGZIb29rcy5uZ0FmdGVyQ29udGVudENoZWNrZWQpICYmICFjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuZ2V0VmFsdWVGcm9tUGF0aChtZXRhZGF0YSwgJ2xlZ2FjeS50cmFuc2NsdWRlJykpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJcXG4gICAgICAgICAgICAgIEhvb2tzIEltcGwgZm9yIFwiICsgbGFuZ18xLnN0cmluZ2lmeSh0eXBlKSArIFwiOlxcbiAgICAgICAgICAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG4gICAgICAgICAgICAgIFlvdSBjYW5ub3QgaW1wbGVtZW50IEFmdGVyQ29udGVudEluaXQgbGlmZWN5Y2xlLCB3aXRob3V0IGFsbG93ZWQgdHJhbnNjbHVzaW9uLlxcbiAgICAgICAgICAgICAgdHVybiB0cmFuc2NsdXNpb24gb24gd2l0aGluIGRlY29yYXRvciBsaWtlIHRoaXM6IEBDb21wb25lbnQoe2xlZ2FjeTp7dHJhbnNjbHVkZTp0cnVlfX0pXFxuICAgICAgICAgICAgICBcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gd2UgbmVlZCB0byBpbXBsZW1lbnQgdGhpcyBpZiBxdWVyeSBhcmUgcHJlc2VudCBvbiBjbGFzcywgYmVjYXVzZSBkdXJpbmcgcG9zdExpbmsgX25nT25DaGlsZHJlbkNoYW5nZWQgaXMgbm90IHlldFxuICAgICAgICAvLyBpbXBsZW1lbnRlZCBvbiBjb250cm9sbGVyIGluc3RhbmNlXG4gICAgICAgIGlmIChjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuc2l6ZShtZXRhZGF0YS5xdWVyaWVzKSkge1xuICAgICAgICAgICAgdHlwZS5wcm90b3R5cGUuX25nT25DaGlsZHJlbkNoYW5nZWQgPSBsYW5nXzEubm9vcDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgaG9zdFByb2Nlc3NlZCA9IGhvc3RfcGFyc2VyXzEuX3BhcnNlSG9zdChtZXRhZGF0YS5ob3N0KTtcbiAgICAgICAgcmV0dXJuIHBvc3RMaW5rO1xuICAgICAgICBmdW5jdGlvbiBwb3N0TGluayhzY29wZSwgZWxlbWVudCwgYXR0cnMsIGNvbnRyb2xsZXIsIHRyYW5zY2x1ZGUpIHtcbiAgICAgICAgICAgIHZhciBfd2F0Y2hlcnMgPSBbXTtcbiAgICAgICAgICAgIHZhciBjdHJsID0gY29udHJvbGxlclswXSwgcmVxdWlyZWRDdHJscyA9IGNvbnRyb2xsZXIuc2xpY2UoMSk7XG4gICAgICAgICAgICBob3N0X3Jlc29sdmVyXzEuX3NldEhvc3RTdGF0aWNBdHRyaWJ1dGVzKGVsZW1lbnQsIGhvc3RQcm9jZXNzZWQuaG9zdFN0YXRpYyk7XG4gICAgICAgICAgICAvLyBzZXR1cCBASG9zdEJpbmRpbmdzXG4gICAgICAgICAgICBfd2F0Y2hlcnMucHVzaC5hcHBseShfd2F0Y2hlcnMsIGhvc3RfcmVzb2x2ZXJfMS5fc2V0SG9zdEJpbmRpbmdzKHNjb3BlLCBlbGVtZW50LCBjdHJsLCBob3N0UHJvY2Vzc2VkLmhvc3RCaW5kaW5ncykpO1xuICAgICAgICAgICAgLy8gc2V0dXAgQEhvc3RMaXN0ZW5lcnNcbiAgICAgICAgICAgIGhvc3RfcmVzb2x2ZXJfMS5fc2V0SG9zdExpc3RlbmVycyhzY29wZSwgZWxlbWVudCwgY3RybCwgaG9zdFByb2Nlc3NlZC5ob3N0TGlzdGVuZXJzKTtcbiAgICAgICAgICAgIC8vIEBDb250ZW50Q2hpbGQvQENvbnRlbnRDaGlsZHJlbi9AVmlld0NoaWxkL0BWaWV3Q2hpbGRyZW4gcmVsYXRlZCBsb2dpY1xuICAgICAgICAgICAgdmFyIHBhcmVudENoZWNrZWROb3RpZmllcnMgPSBjaGlsZHJlbl9yZXNvbHZlcl8xLl9nZXRQYXJlbnRDaGVja05vdGlmaWVycyhjdHJsLCByZXF1aXJlZEN0cmxzKTtcbiAgICAgICAgICAgIF93YXRjaGVycy5wdXNoLmFwcGx5KF93YXRjaGVycywgcGFyZW50Q2hlY2tlZE5vdGlmaWVycyk7XG4gICAgICAgICAgICBjaGlsZHJlbl9yZXNvbHZlcl8xLl9zZXR1cFF1ZXJ5KHNjb3BlLCBlbGVtZW50LCBjdHJsLCBtZXRhZGF0YS5xdWVyaWVzKTtcbiAgICAgICAgICAgIC8vIEFmdGVyQ29udGVudEluaXQvQWZ0ZXJWaWV3SW5pdCBIb29rc1xuICAgICAgICAgICAgLy8gaWYgdGhlcmUgYXJlIHF1ZXJ5IGRlZmluZWQgc2NoZWR1bGUgJGV2YWxBc3luYyBzZW1hcGhvcmVcbiAgICAgICAgICAgIGlmIChjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuc2l6ZShtZXRhZGF0YS5xdWVyaWVzKSkge1xuICAgICAgICAgICAgICAgIGN0cmwuX25nT25DaGlsZHJlbkNoYW5nZWQoZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEuQ2hpbGRyZW5DaGFuZ2VIb29rLkZyb21WaWV3LCBbXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudENoZWNrZWROb3RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAoY2IpIHsgcmV0dXJuIGNiKCk7IH0pLFxuICAgICAgICAgICAgICAgICAgICBjdHJsLm5nQWZ0ZXJWaWV3SW5pdCAmJiBjdHJsLm5nQWZ0ZXJWaWV3SW5pdC5iaW5kKGN0cmwpLFxuICAgICAgICAgICAgICAgICAgICBjdHJsLm5nQWZ0ZXJWaWV3Q2hlY2tlZCAmJiBjdHJsLm5nQWZ0ZXJWaWV3Q2hlY2tlZC5iaW5kKGN0cmwpLFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgIGN0cmwuX25nT25DaGlsZHJlbkNoYW5nZWQoZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEuQ2hpbGRyZW5DaGFuZ2VIb29rLkZyb21Db250ZW50LCBbXG4gICAgICAgICAgICAgICAgICAgIHBhcmVudENoZWNrZWROb3RpZmllcnMuZm9yRWFjaChmdW5jdGlvbiAoY2IpIHsgcmV0dXJuIGNiKCk7IH0pLFxuICAgICAgICAgICAgICAgICAgICBjdHJsLm5nQWZ0ZXJDb250ZW50SW5pdCAmJiBjdHJsLm5nQWZ0ZXJDb250ZW50SW5pdC5iaW5kKGN0cmwpLFxuICAgICAgICAgICAgICAgICAgICBjdHJsLm5nQWZ0ZXJDb250ZW50Q2hlY2tlZCAmJiBjdHJsLm5nQWZ0ZXJDb250ZW50Q2hlY2tlZC5iaW5kKGN0cmwpLFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gbm8gQENvbnRlbnRDaGlsZC9AVmlld0NoaWxkKHJlZikgZGVjb3JhdG9ycyBleGlzdCwgY2FsbCBqdXN0IGNvbnRyb2xsZXIgaW5pdCBtZXRob2RcbiAgICAgICAgICAgICAgICBwYXJlbnRDaGVja2VkTm90aWZpZXJzLmZvckVhY2goZnVuY3Rpb24gKGNiKSB7IHJldHVybiBjYigpOyB9KTtcbiAgICAgICAgICAgICAgICBjdHJsLm5nQWZ0ZXJWaWV3SW5pdCAmJiBjdHJsLm5nQWZ0ZXJWaWV3SW5pdCgpO1xuICAgICAgICAgICAgICAgIGN0cmwubmdBZnRlckNvbnRlbnRJbml0ICYmIGN0cmwubmdBZnRlckNvbnRlbnRJbml0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkaXJlY3RpdmVzX3V0aWxzXzEuX3NldHVwRGVzdHJveUhhbmRsZXIoc2NvcGUsIGVsZW1lbnQsIGN0cmwsIGxmSG9va3MubmdPbkRlc3Ryb3ksIF93YXRjaGVycyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBEaXJlY3RpdmVQcm92aWRlcjtcbn0oKSk7XG5EaXJlY3RpdmVQcm92aWRlci5fZGRvU2hlbGwgPSB7XG4gICAgcmVxdWlyZTogW10sXG4gICAgY29udHJvbGxlcjogbGFuZ18xLm5vb3AsXG4gICAgbGluazogeyBwcmU6IGxhbmdfMS5ub29wLCBwb3N0OiBsYW5nXzEubm9vcCB9XG59O1xuRGlyZWN0aXZlUHJvdmlkZXIuX2NvbnRyb2xsZXJBcyA9IFwiJGN0cmxcIjtcbkRpcmVjdGl2ZVByb3ZpZGVyLl90cmFuc2NsdWRlID0gZmFsc2U7XG5leHBvcnRzLkRpcmVjdGl2ZVByb3ZpZGVyID0gRGlyZWN0aXZlUHJvdmlkZXI7XG5leHBvcnRzLmRpcmVjdGl2ZVByb3ZpZGVyID0gbmV3IERpcmVjdGl2ZVByb3ZpZGVyKG5ldyBkaXJlY3RpdmVfcmVzb2x2ZXJfMS5EaXJlY3RpdmVSZXNvbHZlcigpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpcmVjdGl2ZV9wcm92aWRlci5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvZGlyZWN0aXZlcy9kaXJlY3RpdmVfcHJvdmlkZXIuanNcbi8vIG1vZHVsZSBpZCA9IDQ5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 50 */
/* unknown exports provided */
/* all exports used */
/*!***************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/host/host_parser.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../../facade/lang */ 0);\nvar collections_1 = __webpack_require__(/*! ../../../facade/collections */ 1);\nvar HOST_BINDING_KEY_REGEX = /^\\[.*\\]$/;\nvar HOST_LISTENER_KEY_REGEX = /^\\(.*\\)$/;\nvar HAS_CLASS_REGEX = /^class./;\nvar HAS_ATTR_REGEX = /^attr./;\nfunction _parseHost(host) {\n    if (!lang_1.isPresent(host)) {\n        return;\n    }\n    var hostStatic = {};\n    var hostBindingsRaw = [];\n    var hostListeners = {};\n    collections_1.StringMapWrapper.forEach(host, function (hostValue, hostKey) {\n        var hostMap = (_a = {}, _a[stripBindingOrListenerBrackets(hostKey)] = hostValue, _a);\n        if (isStaticHost(hostKey)) {\n            lang_1.assign(hostStatic, hostMap);\n            return;\n        }\n        if (isHostBinding(hostKey)) {\n            hostBindingsRaw.push(hostMap);\n            return;\n        }\n        if (isHostListener(hostKey)) {\n            lang_1.assign(hostListeners, processHostListenerCallback(hostMap));\n        }\n        var _a;\n    });\n    var hostBindings = hostBindingsRaw\n        .reduce(function (acc, hostBindingObj) {\n        var hostObjKey = Object.keys(hostBindingObj)[0];\n        var hostObjValue = hostBindingObj[hostObjKey];\n        if (HAS_CLASS_REGEX.test(hostObjKey)) {\n            acc.classes[hostObjKey.replace(HAS_CLASS_REGEX, '')] = hostObjValue;\n            return acc;\n        }\n        if (HAS_ATTR_REGEX.test(hostObjKey)) {\n            acc.attributes[hostObjKey.replace(HAS_ATTR_REGEX, '')] = hostObjValue;\n            return acc;\n        }\n        lang_1.assign(acc.properties, hostBindingObj);\n        return acc;\n    }, {\n        classes: {},\n        attributes: {},\n        properties: {}\n    });\n    return {\n        hostStatic: hostStatic,\n        hostBindings: hostBindings,\n        hostListeners: hostListeners\n    };\n    function isHostBinding(hostKey) {\n        return HOST_BINDING_KEY_REGEX.test(hostKey);\n    }\n    function isHostListener(hostKey) {\n        return HOST_LISTENER_KEY_REGEX.test(hostKey);\n    }\n    function isStaticHost(hostKey) {\n        return !(isHostBinding(hostKey) || isHostListener(hostKey));\n    }\n    function stripBindingOrListenerBrackets(hostKey) {\n        return hostKey.replace(/\\[|\\]|\\(|\\)/g, '');\n    }\n    function processHostListenerCallback(hostListener) {\n        // eventKey is 'click' or 'document: click' etc\n        var eventKey = Object.keys(hostListener)[0];\n        // cbString is just value 'onMove($event.target)' or 'onMove()'\n        var cbString = hostListener[eventKey];\n        // here we parse out callback method and its argument to separate strings\n        // - for instance we got from 'onMove($event.target)' --> 'onMove','$event.target'\n        var _a = /^(\\w+)\\(([$\\w.\\s,]*)\\)$/.exec(cbString), cbMethodName = _a[1], cbMethodArgs = _a[2];\n        var eventValue = [\n            cbMethodName\n        ].concat(cbMethodArgs.split(',').filter(function (argument) { return Boolean(argument); }).map(function (argument) { return argument.trim(); }));\n        return _b = {},\n            _b[eventKey.replace(/\\s/g, '')] = eventValue,\n            _b;\n        var _b;\n    }\n}\nexports._parseHost = _parseHost;\n//# sourceMappingURL=host_parser.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvaG9zdC9ob3N0X3BhcnNlci5qcz9jNzVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIGxhbmdfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9mYWNhZGUvbGFuZ1wiKTtcbnZhciBjb2xsZWN0aW9uc18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2ZhY2FkZS9jb2xsZWN0aW9uc1wiKTtcbnZhciBIT1NUX0JJTkRJTkdfS0VZX1JFR0VYID0gL15cXFsuKlxcXSQvO1xudmFyIEhPU1RfTElTVEVORVJfS0VZX1JFR0VYID0gL15cXCguKlxcKSQvO1xudmFyIEhBU19DTEFTU19SRUdFWCA9IC9eY2xhc3MuLztcbnZhciBIQVNfQVRUUl9SRUdFWCA9IC9eYXR0ci4vO1xuZnVuY3Rpb24gX3BhcnNlSG9zdChob3N0KSB7XG4gICAgaWYgKCFsYW5nXzEuaXNQcmVzZW50KGhvc3QpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGhvc3RTdGF0aWMgPSB7fTtcbiAgICB2YXIgaG9zdEJpbmRpbmdzUmF3ID0gW107XG4gICAgdmFyIGhvc3RMaXN0ZW5lcnMgPSB7fTtcbiAgICBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuZm9yRWFjaChob3N0LCBmdW5jdGlvbiAoaG9zdFZhbHVlLCBob3N0S2V5KSB7XG4gICAgICAgIHZhciBob3N0TWFwID0gKF9hID0ge30sIF9hW3N0cmlwQmluZGluZ09yTGlzdGVuZXJCcmFja2V0cyhob3N0S2V5KV0gPSBob3N0VmFsdWUsIF9hKTtcbiAgICAgICAgaWYgKGlzU3RhdGljSG9zdChob3N0S2V5KSkge1xuICAgICAgICAgICAgbGFuZ18xLmFzc2lnbihob3N0U3RhdGljLCBob3N0TWFwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNIb3N0QmluZGluZyhob3N0S2V5KSkge1xuICAgICAgICAgICAgaG9zdEJpbmRpbmdzUmF3LnB1c2goaG9zdE1hcCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzSG9zdExpc3RlbmVyKGhvc3RLZXkpKSB7XG4gICAgICAgICAgICBsYW5nXzEuYXNzaWduKGhvc3RMaXN0ZW5lcnMsIHByb2Nlc3NIb3N0TGlzdGVuZXJDYWxsYmFjayhob3N0TWFwKSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIF9hO1xuICAgIH0pO1xuICAgIHZhciBob3N0QmluZGluZ3MgPSBob3N0QmluZGluZ3NSYXdcbiAgICAgICAgLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBob3N0QmluZGluZ09iaikge1xuICAgICAgICB2YXIgaG9zdE9iaktleSA9IE9iamVjdC5rZXlzKGhvc3RCaW5kaW5nT2JqKVswXTtcbiAgICAgICAgdmFyIGhvc3RPYmpWYWx1ZSA9IGhvc3RCaW5kaW5nT2JqW2hvc3RPYmpLZXldO1xuICAgICAgICBpZiAoSEFTX0NMQVNTX1JFR0VYLnRlc3QoaG9zdE9iaktleSkpIHtcbiAgICAgICAgICAgIGFjYy5jbGFzc2VzW2hvc3RPYmpLZXkucmVwbGFjZShIQVNfQ0xBU1NfUkVHRVgsICcnKV0gPSBob3N0T2JqVmFsdWU7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgICAgIGlmIChIQVNfQVRUUl9SRUdFWC50ZXN0KGhvc3RPYmpLZXkpKSB7XG4gICAgICAgICAgICBhY2MuYXR0cmlidXRlc1tob3N0T2JqS2V5LnJlcGxhY2UoSEFTX0FUVFJfUkVHRVgsICcnKV0gPSBob3N0T2JqVmFsdWU7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgICAgIGxhbmdfMS5hc3NpZ24oYWNjLnByb3BlcnRpZXMsIGhvc3RCaW5kaW5nT2JqKTtcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7XG4gICAgICAgIGNsYXNzZXM6IHt9LFxuICAgICAgICBhdHRyaWJ1dGVzOiB7fSxcbiAgICAgICAgcHJvcGVydGllczoge31cbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBob3N0U3RhdGljOiBob3N0U3RhdGljLFxuICAgICAgICBob3N0QmluZGluZ3M6IGhvc3RCaW5kaW5ncyxcbiAgICAgICAgaG9zdExpc3RlbmVyczogaG9zdExpc3RlbmVyc1xuICAgIH07XG4gICAgZnVuY3Rpb24gaXNIb3N0QmluZGluZyhob3N0S2V5KSB7XG4gICAgICAgIHJldHVybiBIT1NUX0JJTkRJTkdfS0VZX1JFR0VYLnRlc3QoaG9zdEtleSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGlzSG9zdExpc3RlbmVyKGhvc3RLZXkpIHtcbiAgICAgICAgcmV0dXJuIEhPU1RfTElTVEVORVJfS0VZX1JFR0VYLnRlc3QoaG9zdEtleSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGlzU3RhdGljSG9zdChob3N0S2V5KSB7XG4gICAgICAgIHJldHVybiAhKGlzSG9zdEJpbmRpbmcoaG9zdEtleSkgfHwgaXNIb3N0TGlzdGVuZXIoaG9zdEtleSkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdHJpcEJpbmRpbmdPckxpc3RlbmVyQnJhY2tldHMoaG9zdEtleSkge1xuICAgICAgICByZXR1cm4gaG9zdEtleS5yZXBsYWNlKC9cXFt8XFxdfFxcKHxcXCkvZywgJycpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwcm9jZXNzSG9zdExpc3RlbmVyQ2FsbGJhY2soaG9zdExpc3RlbmVyKSB7XG4gICAgICAgIC8vIGV2ZW50S2V5IGlzICdjbGljaycgb3IgJ2RvY3VtZW50OiBjbGljaycgZXRjXG4gICAgICAgIHZhciBldmVudEtleSA9IE9iamVjdC5rZXlzKGhvc3RMaXN0ZW5lcilbMF07XG4gICAgICAgIC8vIGNiU3RyaW5nIGlzIGp1c3QgdmFsdWUgJ29uTW92ZSgkZXZlbnQudGFyZ2V0KScgb3IgJ29uTW92ZSgpJ1xuICAgICAgICB2YXIgY2JTdHJpbmcgPSBob3N0TGlzdGVuZXJbZXZlbnRLZXldO1xuICAgICAgICAvLyBoZXJlIHdlIHBhcnNlIG91dCBjYWxsYmFjayBtZXRob2QgYW5kIGl0cyBhcmd1bWVudCB0byBzZXBhcmF0ZSBzdHJpbmdzXG4gICAgICAgIC8vIC0gZm9yIGluc3RhbmNlIHdlIGdvdCBmcm9tICdvbk1vdmUoJGV2ZW50LnRhcmdldCknIC0tPiAnb25Nb3ZlJywnJGV2ZW50LnRhcmdldCdcbiAgICAgICAgdmFyIF9hID0gL14oXFx3KylcXCgoWyRcXHcuXFxzLF0qKVxcKSQvLmV4ZWMoY2JTdHJpbmcpLCBjYk1ldGhvZE5hbWUgPSBfYVsxXSwgY2JNZXRob2RBcmdzID0gX2FbMl07XG4gICAgICAgIHZhciBldmVudFZhbHVlID0gW1xuICAgICAgICAgICAgY2JNZXRob2ROYW1lXG4gICAgICAgIF0uY29uY2F0KGNiTWV0aG9kQXJncy5zcGxpdCgnLCcpLmZpbHRlcihmdW5jdGlvbiAoYXJndW1lbnQpIHsgcmV0dXJuIEJvb2xlYW4oYXJndW1lbnQpOyB9KS5tYXAoZnVuY3Rpb24gKGFyZ3VtZW50KSB7IHJldHVybiBhcmd1bWVudC50cmltKCk7IH0pKTtcbiAgICAgICAgcmV0dXJuIF9iID0ge30sXG4gICAgICAgICAgICBfYltldmVudEtleS5yZXBsYWNlKC9cXHMvZywgJycpXSA9IGV2ZW50VmFsdWUsXG4gICAgICAgICAgICBfYjtcbiAgICAgICAgdmFyIF9iO1xuICAgIH1cbn1cbmV4cG9ydHMuX3BhcnNlSG9zdCA9IF9wYXJzZUhvc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob3N0X3BhcnNlci5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvZGlyZWN0aXZlcy9ob3N0L2hvc3RfcGFyc2VyLmpzXG4vLyBtb2R1bGUgaWQgPSA1MFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 51 */
/* unknown exports provided */
/* all exports used */
/*!*****************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/host/host_resolver.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../../facade/lang */ 0);\nvar collections_1 = __webpack_require__(/*! ../../../facade/collections */ 1);\nvar primitives_1 = __webpack_require__(/*! ../../../facade/primitives */ 25);\n/**\n *\n * @param element\n * @param staticAttributes\n * @private\n */\nfunction _setHostStaticAttributes(element, staticAttributes) {\n    element.attr(staticAttributes);\n}\nexports._setHostStaticAttributes = _setHostStaticAttributes;\n/**\n *\n * @param scope\n * @param element\n * @param ctrl\n * @param hostBindings\n * @returns {Array}\n * @internal\n * @private\n */\nfunction _setHostBindings(scope, element, ctrl, hostBindings) {\n    // setup @HostBindings\n    return _createWatcherByType('classes', hostBindings).concat(_createWatcherByType('attributes', hostBindings), _createWatcherByType('properties', hostBindings));\n    /**\n     * registers $scope.$watch for appropriate hostBinding\n     * the watcher watches property on controller instance\n     * @param type\n     * @param hostBinding\n     * @returns {Array}\n     * @private\n     */\n    function _createWatcherByType(type, hostBinding) {\n        var _watchersByType = [];\n        collections_1.StringMapWrapper.forEach(hostBinding[type], function (watchPropName, keyToSet) {\n            _watchersByType.push(scope.$watch(function () { return ctrl[watchPropName]; }, function (newValue) {\n                if (type === 'classes') {\n                    element.toggleClass(keyToSet, newValue);\n                }\n                if (type === 'attributes') {\n                    element.attr(keyToSet, newValue);\n                }\n                if (type === 'properties') {\n                    collections_1.StringMapWrapper.setValueInPath(element[0], keyToSet, newValue);\n                }\n            }));\n        });\n        return _watchersByType;\n    }\n}\nexports._setHostBindings = _setHostBindings;\n/**\n *\n * @param scope\n * @param element\n * @param ctrl\n * @param hostListeners\n * @internal\n * @private\n */\nfunction _setHostListeners(scope, element, ctrl, hostListeners) {\n    collections_1.StringMapWrapper.forEach(hostListeners, _registerHostListener);\n    function _registerHostListener(cbArray, eventKey) {\n        var methodName = cbArray[0], methodParams = cbArray.slice(1);\n        var _a = _getTargetAndEvent(eventKey, element), event = _a.event, target = _a.target;\n        // console.log( event );\n        target.on(event, eventHandler);\n        // global event\n        if (target !== element) {\n            scope.$on('$destroy', function () { return target.off(event, eventHandler); });\n        }\n        function eventHandler(evt) {\n            var cbParams = _getHostListenerCbParams(evt, methodParams);\n            scope.$apply(function () {\n                var noPreventDefault = ctrl[methodName].apply(ctrl, cbParams);\n                // HostListener event.preventDefault if method returns false\n                if (noPreventDefault === false) {\n                    evt.preventDefault();\n                }\n            });\n        }\n    }\n}\nexports._setHostListeners = _setHostListeners;\n/**\n * return $event or it's property if found via path\n * @param event\n * @param eventParams\n * @returns {Array}\n * @private\n */\nfunction _getHostListenerCbParams(event, eventParams) {\n    var ALLOWED_EVENT_NAME = '$event';\n    return eventParams.reduce(function (acc, eventPath) {\n        if (!primitives_1.StringWrapper.startsWith(eventPath, ALLOWED_EVENT_NAME)) {\n            throw new Error(\"\\n              only $event.* is supported. Please provide correct listener parameter @example: $event,$event.target\\n              \");\n        }\n        if (eventPath === ALLOWED_EVENT_NAME) {\n            return acc.concat([event]);\n        }\n        return acc.concat([collections_1.StringMapWrapper.getValueFromPath(event, eventPath.replace(ALLOWED_EVENT_NAME, ''))]);\n    }, []);\n}\nexports._getHostListenerCbParams = _getHostListenerCbParams;\nfunction _getGlobalTargetReference($injector, targetName) {\n    var globalEventTargets = ['document', 'window', 'body'];\n    var $document = $injector.get(\"$document\");\n    if (targetName === 'document') {\n        return $document;\n    }\n    if (targetName === 'window') {\n        return lang_1.global.angular.element($injector.get(\"$\" + targetName));\n    }\n    if (targetName === 'body') {\n        return lang_1.global.angular.element($document[0][targetName]);\n    }\n    throw new Error(\"unsupported global target '\" + targetName + \"', only '\" + globalEventTargets + \"' are supported\");\n}\n/**\n *\n * @param definedHostEvent this will be just simple 'event' string name or 'globalTarget:event'\n * @param hostElement\n * @returns {any}\n * @private\n */\nfunction _getTargetAndEvent(definedHostEvent, hostElement) {\n    // global target\n    var eventWithGlobalTarget = definedHostEvent.split(/\\s*:\\s*/);\n    if (eventWithGlobalTarget.length === 2) {\n        var globalTarget = eventWithGlobalTarget[0], eventOnTarget = eventWithGlobalTarget[1];\n        return {\n            event: eventOnTarget,\n            target: _getGlobalTargetReference(hostElement.injector(), globalTarget)\n        };\n    }\n    return {\n        event: definedHostEvent,\n        target: hostElement\n    };\n}\n//# sourceMappingURL=host_resolver.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2RpcmVjdGl2ZXMvaG9zdC9ob3N0X3Jlc29sdmVyLmpzP2JlMjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgbGFuZ18xID0gcmVxdWlyZShcIi4uLy4uLy4uL2ZhY2FkZS9sYW5nXCIpO1xudmFyIGNvbGxlY3Rpb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vLi4vZmFjYWRlL2NvbGxlY3Rpb25zXCIpO1xudmFyIHByaW1pdGl2ZXNfMSA9IHJlcXVpcmUoXCIuLi8uLi8uLi9mYWNhZGUvcHJpbWl0aXZlc1wiKTtcbi8qKlxuICpcbiAqIEBwYXJhbSBlbGVtZW50XG4gKiBAcGFyYW0gc3RhdGljQXR0cmlidXRlc1xuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gX3NldEhvc3RTdGF0aWNBdHRyaWJ1dGVzKGVsZW1lbnQsIHN0YXRpY0F0dHJpYnV0ZXMpIHtcbiAgICBlbGVtZW50LmF0dHIoc3RhdGljQXR0cmlidXRlcyk7XG59XG5leHBvcnRzLl9zZXRIb3N0U3RhdGljQXR0cmlidXRlcyA9IF9zZXRIb3N0U3RhdGljQXR0cmlidXRlcztcbi8qKlxuICpcbiAqIEBwYXJhbSBzY29wZVxuICogQHBhcmFtIGVsZW1lbnRcbiAqIEBwYXJhbSBjdHJsXG4gKiBAcGFyYW0gaG9zdEJpbmRpbmdzXG4gKiBAcmV0dXJucyB7QXJyYXl9XG4gKiBAaW50ZXJuYWxcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIF9zZXRIb3N0QmluZGluZ3Moc2NvcGUsIGVsZW1lbnQsIGN0cmwsIGhvc3RCaW5kaW5ncykge1xuICAgIC8vIHNldHVwIEBIb3N0QmluZGluZ3NcbiAgICByZXR1cm4gX2NyZWF0ZVdhdGNoZXJCeVR5cGUoJ2NsYXNzZXMnLCBob3N0QmluZGluZ3MpLmNvbmNhdChfY3JlYXRlV2F0Y2hlckJ5VHlwZSgnYXR0cmlidXRlcycsIGhvc3RCaW5kaW5ncyksIF9jcmVhdGVXYXRjaGVyQnlUeXBlKCdwcm9wZXJ0aWVzJywgaG9zdEJpbmRpbmdzKSk7XG4gICAgLyoqXG4gICAgICogcmVnaXN0ZXJzICRzY29wZS4kd2F0Y2ggZm9yIGFwcHJvcHJpYXRlIGhvc3RCaW5kaW5nXG4gICAgICogdGhlIHdhdGNoZXIgd2F0Y2hlcyBwcm9wZXJ0eSBvbiBjb250cm9sbGVyIGluc3RhbmNlXG4gICAgICogQHBhcmFtIHR5cGVcbiAgICAgKiBAcGFyYW0gaG9zdEJpbmRpbmdcbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBfY3JlYXRlV2F0Y2hlckJ5VHlwZSh0eXBlLCBob3N0QmluZGluZykge1xuICAgICAgICB2YXIgX3dhdGNoZXJzQnlUeXBlID0gW107XG4gICAgICAgIGNvbGxlY3Rpb25zXzEuU3RyaW5nTWFwV3JhcHBlci5mb3JFYWNoKGhvc3RCaW5kaW5nW3R5cGVdLCBmdW5jdGlvbiAod2F0Y2hQcm9wTmFtZSwga2V5VG9TZXQpIHtcbiAgICAgICAgICAgIF93YXRjaGVyc0J5VHlwZS5wdXNoKHNjb3BlLiR3YXRjaChmdW5jdGlvbiAoKSB7IHJldHVybiBjdHJsW3dhdGNoUHJvcE5hbWVdOyB9LCBmdW5jdGlvbiAobmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gJ2NsYXNzZXMnKSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQudG9nZ2xlQ2xhc3Moa2V5VG9TZXQsIG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdhdHRyaWJ1dGVzJykge1xuICAgICAgICAgICAgICAgICAgICBlbGVtZW50LmF0dHIoa2V5VG9TZXQsIG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdwcm9wZXJ0aWVzJykge1xuICAgICAgICAgICAgICAgICAgICBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuc2V0VmFsdWVJblBhdGgoZWxlbWVudFswXSwga2V5VG9TZXQsIG5ld1ZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gX3dhdGNoZXJzQnlUeXBlO1xuICAgIH1cbn1cbmV4cG9ydHMuX3NldEhvc3RCaW5kaW5ncyA9IF9zZXRIb3N0QmluZGluZ3M7XG4vKipcbiAqXG4gKiBAcGFyYW0gc2NvcGVcbiAqIEBwYXJhbSBlbGVtZW50XG4gKiBAcGFyYW0gY3RybFxuICogQHBhcmFtIGhvc3RMaXN0ZW5lcnNcbiAqIEBpbnRlcm5hbFxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gX3NldEhvc3RMaXN0ZW5lcnMoc2NvcGUsIGVsZW1lbnQsIGN0cmwsIGhvc3RMaXN0ZW5lcnMpIHtcbiAgICBjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuZm9yRWFjaChob3N0TGlzdGVuZXJzLCBfcmVnaXN0ZXJIb3N0TGlzdGVuZXIpO1xuICAgIGZ1bmN0aW9uIF9yZWdpc3Rlckhvc3RMaXN0ZW5lcihjYkFycmF5LCBldmVudEtleSkge1xuICAgICAgICB2YXIgbWV0aG9kTmFtZSA9IGNiQXJyYXlbMF0sIG1ldGhvZFBhcmFtcyA9IGNiQXJyYXkuc2xpY2UoMSk7XG4gICAgICAgIHZhciBfYSA9IF9nZXRUYXJnZXRBbmRFdmVudChldmVudEtleSwgZWxlbWVudCksIGV2ZW50ID0gX2EuZXZlbnQsIHRhcmdldCA9IF9hLnRhcmdldDtcbiAgICAgICAgLy8gY29uc29sZS5sb2coIGV2ZW50ICk7XG4gICAgICAgIHRhcmdldC5vbihldmVudCwgZXZlbnRIYW5kbGVyKTtcbiAgICAgICAgLy8gZ2xvYmFsIGV2ZW50XG4gICAgICAgIGlmICh0YXJnZXQgIT09IGVsZW1lbnQpIHtcbiAgICAgICAgICAgIHNjb3BlLiRvbignJGRlc3Ryb3knLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0YXJnZXQub2ZmKGV2ZW50LCBldmVudEhhbmRsZXIpOyB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBldmVudEhhbmRsZXIoZXZ0KSB7XG4gICAgICAgICAgICB2YXIgY2JQYXJhbXMgPSBfZ2V0SG9zdExpc3RlbmVyQ2JQYXJhbXMoZXZ0LCBtZXRob2RQYXJhbXMpO1xuICAgICAgICAgICAgc2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgbm9QcmV2ZW50RGVmYXVsdCA9IGN0cmxbbWV0aG9kTmFtZV0uYXBwbHkoY3RybCwgY2JQYXJhbXMpO1xuICAgICAgICAgICAgICAgIC8vIEhvc3RMaXN0ZW5lciBldmVudC5wcmV2ZW50RGVmYXVsdCBpZiBtZXRob2QgcmV0dXJucyBmYWxzZVxuICAgICAgICAgICAgICAgIGlmIChub1ByZXZlbnREZWZhdWx0ID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuX3NldEhvc3RMaXN0ZW5lcnMgPSBfc2V0SG9zdExpc3RlbmVycztcbi8qKlxuICogcmV0dXJuICRldmVudCBvciBpdCdzIHByb3BlcnR5IGlmIGZvdW5kIHZpYSBwYXRoXG4gKiBAcGFyYW0gZXZlbnRcbiAqIEBwYXJhbSBldmVudFBhcmFtc1xuICogQHJldHVybnMge0FycmF5fVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gX2dldEhvc3RMaXN0ZW5lckNiUGFyYW1zKGV2ZW50LCBldmVudFBhcmFtcykge1xuICAgIHZhciBBTExPV0VEX0VWRU5UX05BTUUgPSAnJGV2ZW50JztcbiAgICByZXR1cm4gZXZlbnRQYXJhbXMucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGV2ZW50UGF0aCkge1xuICAgICAgICBpZiAoIXByaW1pdGl2ZXNfMS5TdHJpbmdXcmFwcGVyLnN0YXJ0c1dpdGgoZXZlbnRQYXRoLCBBTExPV0VEX0VWRU5UX05BTUUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJcXG4gICAgICAgICAgICAgIG9ubHkgJGV2ZW50LiogaXMgc3VwcG9ydGVkLiBQbGVhc2UgcHJvdmlkZSBjb3JyZWN0IGxpc3RlbmVyIHBhcmFtZXRlciBAZXhhbXBsZTogJGV2ZW50LCRldmVudC50YXJnZXRcXG4gICAgICAgICAgICAgIFwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXZlbnRQYXRoID09PSBBTExPV0VEX0VWRU5UX05BTUUpIHtcbiAgICAgICAgICAgIHJldHVybiBhY2MuY29uY2F0KFtldmVudF0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2MuY29uY2F0KFtjb2xsZWN0aW9uc18xLlN0cmluZ01hcFdyYXBwZXIuZ2V0VmFsdWVGcm9tUGF0aChldmVudCwgZXZlbnRQYXRoLnJlcGxhY2UoQUxMT1dFRF9FVkVOVF9OQU1FLCAnJykpXSk7XG4gICAgfSwgW10pO1xufVxuZXhwb3J0cy5fZ2V0SG9zdExpc3RlbmVyQ2JQYXJhbXMgPSBfZ2V0SG9zdExpc3RlbmVyQ2JQYXJhbXM7XG5mdW5jdGlvbiBfZ2V0R2xvYmFsVGFyZ2V0UmVmZXJlbmNlKCRpbmplY3RvciwgdGFyZ2V0TmFtZSkge1xuICAgIHZhciBnbG9iYWxFdmVudFRhcmdldHMgPSBbJ2RvY3VtZW50JywgJ3dpbmRvdycsICdib2R5J107XG4gICAgdmFyICRkb2N1bWVudCA9ICRpbmplY3Rvci5nZXQoXCIkZG9jdW1lbnRcIik7XG4gICAgaWYgKHRhcmdldE5hbWUgPT09ICdkb2N1bWVudCcpIHtcbiAgICAgICAgcmV0dXJuICRkb2N1bWVudDtcbiAgICB9XG4gICAgaWYgKHRhcmdldE5hbWUgPT09ICd3aW5kb3cnKSB7XG4gICAgICAgIHJldHVybiBsYW5nXzEuZ2xvYmFsLmFuZ3VsYXIuZWxlbWVudCgkaW5qZWN0b3IuZ2V0KFwiJFwiICsgdGFyZ2V0TmFtZSkpO1xuICAgIH1cbiAgICBpZiAodGFyZ2V0TmFtZSA9PT0gJ2JvZHknKSB7XG4gICAgICAgIHJldHVybiBsYW5nXzEuZ2xvYmFsLmFuZ3VsYXIuZWxlbWVudCgkZG9jdW1lbnRbMF1bdGFyZ2V0TmFtZV0pO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1bnN1cHBvcnRlZCBnbG9iYWwgdGFyZ2V0ICdcIiArIHRhcmdldE5hbWUgKyBcIicsIG9ubHkgJ1wiICsgZ2xvYmFsRXZlbnRUYXJnZXRzICsgXCInIGFyZSBzdXBwb3J0ZWRcIik7XG59XG4vKipcbiAqXG4gKiBAcGFyYW0gZGVmaW5lZEhvc3RFdmVudCB0aGlzIHdpbGwgYmUganVzdCBzaW1wbGUgJ2V2ZW50JyBzdHJpbmcgbmFtZSBvciAnZ2xvYmFsVGFyZ2V0OmV2ZW50J1xuICogQHBhcmFtIGhvc3RFbGVtZW50XG4gKiBAcmV0dXJucyB7YW55fVxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gX2dldFRhcmdldEFuZEV2ZW50KGRlZmluZWRIb3N0RXZlbnQsIGhvc3RFbGVtZW50KSB7XG4gICAgLy8gZ2xvYmFsIHRhcmdldFxuICAgIHZhciBldmVudFdpdGhHbG9iYWxUYXJnZXQgPSBkZWZpbmVkSG9zdEV2ZW50LnNwbGl0KC9cXHMqOlxccyovKTtcbiAgICBpZiAoZXZlbnRXaXRoR2xvYmFsVGFyZ2V0Lmxlbmd0aCA9PT0gMikge1xuICAgICAgICB2YXIgZ2xvYmFsVGFyZ2V0ID0gZXZlbnRXaXRoR2xvYmFsVGFyZ2V0WzBdLCBldmVudE9uVGFyZ2V0ID0gZXZlbnRXaXRoR2xvYmFsVGFyZ2V0WzFdO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZXZlbnQ6IGV2ZW50T25UYXJnZXQsXG4gICAgICAgICAgICB0YXJnZXQ6IF9nZXRHbG9iYWxUYXJnZXRSZWZlcmVuY2UoaG9zdEVsZW1lbnQuaW5qZWN0b3IoKSwgZ2xvYmFsVGFyZ2V0KVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBldmVudDogZGVmaW5lZEhvc3RFdmVudCxcbiAgICAgICAgdGFyZ2V0OiBob3N0RWxlbWVudFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob3N0X3Jlc29sdmVyLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9kaXJlY3RpdmVzL2hvc3QvaG9zdF9yZXNvbHZlci5qc1xuLy8gbW9kdWxlIGlkID0gNTFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 52 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************************************!*\
  !*** ./~/ng-metadata/src/core/directives/query/children_resolver.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../../facade/lang */ 0);\nvar collections_1 = __webpack_require__(/*! ../../../facade/collections */ 1);\nvar directive_lifecycle_interfaces_1 = __webpack_require__(/*! ../../linker/directive_lifecycle_interfaces */ 13);\nvar reflection_1 = __webpack_require__(/*! ../../reflection/reflection */ 4);\nvar provider_1 = __webpack_require__(/*! ../../di/provider */ 5);\nvar metadata_directives_1 = __webpack_require__(/*! ../metadata_directives */ 3);\nvar metadata_di_1 = __webpack_require__(/*! ../metadata_di */ 8);\n/**\n * setup watchers for children component/directives provided by @Query decorators\n * - setup @ContentChild/@ContentChildren/@ViewChild/@ViewChildren\n * @param scope\n * @param element\n * @param ctrl\n * @param queries\n * @private\n */\nfunction _setupQuery(scope, element, ctrl, queries) {\n    var SEMAPHORE_PROP_NAMES = Object.freeze({\n        view: '__readViewChildrenOrderScheduled',\n        content: '__readContentChildrenOrderScheduled'\n    });\n    var DOM_RESOLVER_TYPES = Object.freeze({\n        view: 'view',\n        content: 'content'\n    });\n    if (collections_1.StringMapWrapper.size(queries) === 0) {\n        return;\n    }\n    var onChildrenChangedCb = _getOnChildrenResolvers(element, ctrl, queries);\n    ctrl.__readContentChildrenOrderScheduled = false;\n    ctrl.__readViewChildrenOrderScheduled = false;\n    // this is our created _ngOnChildrenChanged which will be called by children directives\n    var _ngOnChildrenChanged = function (type, onFirstChangeDoneCb, domResolverCb) {\n        if (onFirstChangeDoneCb === void 0) { onFirstChangeDoneCb = []; }\n        if (domResolverCb === void 0) { domResolverCb = onChildrenChangedCb; }\n        var orderScheduledSemaphorePropName = '';\n        var domResolverCbType = '';\n        if (type === directive_lifecycle_interfaces_1.ChildrenChangeHook.FromView) {\n            orderScheduledSemaphorePropName = SEMAPHORE_PROP_NAMES.view;\n            domResolverCbType = DOM_RESOLVER_TYPES.view;\n        }\n        else if (type === directive_lifecycle_interfaces_1.ChildrenChangeHook.FromContent) {\n            domResolverCbType = DOM_RESOLVER_TYPES.content;\n            orderScheduledSemaphorePropName = SEMAPHORE_PROP_NAMES.content;\n        }\n        else {\n            throw new Error(\"_ngOnChildrenChanged: queryType(\" + type + \") must be one of FromView|FromContent\");\n        }\n        if (ctrl[orderScheduledSemaphorePropName]) {\n            return;\n        }\n        ctrl[orderScheduledSemaphorePropName] = true;\n        // we execute callback within $evalAsync to extend $digest loop count, which will not trigger another\n        // $rootScope.$digest === #perfmatters\n        scope.$evalAsync(function () {\n            // turn semaphore On back again\n            ctrl[orderScheduledSemaphorePropName] = false;\n            // query DOM and assign instances/jqLite to controller properties\n            domResolverCb[domResolverCbType].forEach(function (cb) { return cb(); });\n            // when DOM is queried we can execute DirectiveComponent life cycles which have been registered\n            // AfterViewInit | AfterContentInit\n            onFirstChangeDoneCb.forEach(function (cb) { lang_1.isFunction(cb) && cb(); });\n        });\n    };\n    // this method needs to be called from children which are we querying\n    // if they are rendered dynamically/async\n    ctrl._ngOnChildrenChanged = _ngOnChildrenChanged.bind(ctrl);\n    /**\n     * get all callbacks which will be executed withing $scope.$evalAsync,\n     * which are querying for DOM elements and gets controller instances from host element children\n     * @param element\n     * @param ctrl\n     * @param queries\n     * @returns {view: Function[], content: Function[]}\n     * @private\n     */\n    function _getOnChildrenResolvers(element, ctrl, queries) {\n        var _onChildrenChangedCbMap = (_a = {},\n            _a[DOM_RESOLVER_TYPES.view] = [],\n            _a[DOM_RESOLVER_TYPES.content] = [],\n            _a);\n        collections_1.StringMapWrapper.forEach(queries, function (meta, key) {\n            if (meta instanceof metadata_di_1.ViewChildMetadata) {\n                _onChildrenChangedCbMap[DOM_RESOLVER_TYPES.view].push(_resolveViewChild(element, ctrl, key, meta));\n            }\n            if (meta instanceof metadata_di_1.ViewChildrenMetadata) {\n                _onChildrenChangedCbMap[DOM_RESOLVER_TYPES.view].push(_resolveViewChildren(element, ctrl, key, meta));\n            }\n            if (meta instanceof metadata_di_1.ContentChildMetadata) {\n                _onChildrenChangedCbMap[DOM_RESOLVER_TYPES.content].push(_resolveContentChild(element, ctrl, key, meta));\n            }\n            if (meta instanceof metadata_di_1.ContentChildrenMetadata) {\n                _onChildrenChangedCbMap[DOM_RESOLVER_TYPES.content].push(_resolveContentChildren(element, ctrl, key, meta));\n            }\n        });\n        return _onChildrenChangedCbMap;\n        function _resolveViewChild(element, ctrl, key, meta) {\n            return _resolveChildrenFactory(element, ctrl, key, meta.selector, DOM_RESOLVER_TYPES.view, true);\n        }\n        function _resolveContentChild(element, ctrl, key, meta) {\n            return _resolveChildrenFactory(element, ctrl, key, meta.selector, DOM_RESOLVER_TYPES.content, true);\n        }\n        function _resolveViewChildren(element, ctrl, key, meta) {\n            return _resolveChildrenFactory(element, ctrl, key, meta.selector, DOM_RESOLVER_TYPES.view);\n        }\n        function _resolveContentChildren(element, ctrl, key, meta) {\n            return _resolveChildrenFactory(element, ctrl, key, meta.selector, DOM_RESOLVER_TYPES.content);\n        }\n        var _a;\n    }\n}\nexports._setupQuery = _setupQuery;\n/**\n * resolving DOM instances by provided @ContentChild(ref)/@ViewChild(ref)\n * - if querying for string, we handle it as a selector and return jqLite instances\n * - if querying for Type( directive | component ) we get proper selector and controller from\n * provided Type reference, query the DOM and return that controller instance if exists, otherwise null\n * @param element\n * @param ctrl\n * @param key\n * @param cssSelector\n * @param type\n * @param firstOnly\n * @returns {function(): void}\n * @private\n */\nfunction _resolveChildrenFactory(element, ctrl, key, cssSelector, type, firstOnly) {\n    if (firstOnly === void 0) { firstOnly = false; }\n    var _a = _getSelectorAndCtrlName(cssSelector), selector = _a.selector, childCtrlName = _a.childCtrlName;\n    return _childResolver;\n    function _childResolver() {\n        if (firstOnly) {\n            ctrl[key] = null;\n            var child = _getChildElements(element, selector, type, firstOnly);\n            var childInstance = lang_1.isString(cssSelector)\n                ? child\n                : getControllerOnElement(child, childCtrlName);\n            ctrl[key] = childInstance;\n        }\n        else {\n            ctrl[key] = [];\n            var children = _getChildElements(element, selector, type);\n            if (lang_1.isString(cssSelector)) {\n                ctrl[key] = children;\n                return;\n            }\n            for (var i = 0; i < children.length; i++) {\n                ctrl[key].push(getControllerOnElement(children.eq(i), childCtrlName));\n            }\n        }\n    }\n}\nexports._resolveChildrenFactory = _resolveChildrenFactory;\n/**\n * query View/Content DOM for particular child elements/attributes selector\n * @param $element\n * @param selector\n * @param type\n * @param firstOnly\n * @returns {IAugmentedJQuery}\n * @private\n */\nfunction _getChildElements($element, selector, type, firstOnly) {\n    if (firstOnly === void 0) { firstOnly = false; }\n    var querySelector = '';\n    if (type === 'view') {\n        // Note: we are guarding only for first nested child inside ng-transclude\n        // this would be to complicated and DOM heavy to select only selectors outside ng-transclude\n        // - it should be author responsibility to not include Component view directive within <ng-transclude> and querying for them\n        querySelector = \":not(ng-transclude):not([ng-transclude]) > \" + selector;\n    }\n    if (type === 'content') {\n        querySelector = \"ng-transclude \" + selector + \", [ng-transclude] \" + selector;\n    }\n    var queryMethod = firstOnly\n        ? 'querySelector'\n        : 'querySelectorAll';\n    return lang_1.global.angular.element($element[0][queryMethod](querySelector));\n}\nexports._getChildElements = _getChildElements;\nfunction _getSelectorAndCtrlName(childSelector) {\n    var selector = _getSelector(childSelector);\n    var childCtrlName = provider_1.getInjectableName(childSelector);\n    return { selector: selector, childCtrlName: childCtrlName };\n}\nexports._getSelectorAndCtrlName = _getSelectorAndCtrlName;\n/**\n * get CSS selector from Component/Directive decorated class metadata\n * @param selector\n * @returns {string}\n * @private\n */\nfunction _getSelector(selector) {\n    if (lang_1.isString(selector)) {\n        return selector;\n    }\n    if (lang_1.isType(selector)) {\n        var annotation = reflection_1.reflector.annotations(selector)[0];\n        if (annotation instanceof metadata_directives_1.DirectiveMetadata) {\n            return annotation.selector;\n        }\n    }\n    throw new Error(\"cannot query for non Directive/Component type \" + lang_1.getFuncName(selector));\n}\nexports._getSelector = _getSelector;\n/**\n * creates functions which will be called from parent component which is querying this component\n * - component which queries needs to be injected to child,\n * here child creates special callbacks by type of @Query which will be called from postLink and on scope destroy so\n * we clean up GC\n * @param ctrl\n * @param requiredCtrls\n * @returns {Object|Array|T|function()[]}\n * @private\n */\nfunction _getParentCheckNotifiers(ctrl, requiredCtrls) {\n    var parentCheckedNotifiers = requiredCtrls.reduce(function (acc, requiredCtrl) {\n        if (!lang_1.isJsObject(requiredCtrl)) {\n            return acc;\n        }\n        var Ctor = requiredCtrl.constructor;\n        if (!lang_1.isType(Ctor)) {\n            return acc;\n        }\n        var propMeta = reflection_1.reflector.propMetadata(Ctor);\n        if (!collections_1.StringMapWrapper.size(propMeta)) {\n            return acc;\n        }\n        var _parentCheckedNotifiers = [];\n        collections_1.StringMapWrapper.forEach(propMeta, function (propMetaPropArr) {\n            propMetaPropArr\n                .filter(function (propMetaInstance) {\n                // check if propMeta is one of @Query types and that it queries for Directive/Component ( typeof selector == function )\n                if (!((propMetaInstance instanceof metadata_di_1.QueryMetadata) && lang_1.isType(propMetaInstance.selector))) {\n                    return false;\n                }\n                // check if current child is really queried from its parent\n                return ctrl instanceof propMetaInstance.selector;\n            })\n                .forEach(function (propMetaInstance) {\n                // parent queried for this child with one from @ContentChild/@ContentChildren\n                if (!propMetaInstance.isViewQuery) {\n                    _parentCheckedNotifiers.push(function () { return requiredCtrl._ngOnChildrenChanged(directive_lifecycle_interfaces_1.ChildrenChangeHook.FromContent, [requiredCtrl.ngAfterContentChecked.bind(requiredCtrl)]); });\n                }\n                // parent queried for this child with one from @ViewChild/@ViewChildren\n                if (propMetaInstance.isViewQuery) {\n                    _parentCheckedNotifiers.push(function () { return requiredCtrl._ngOnChildrenChanged(directive_lifecycle_interfaces_1.ChildrenChangeHook.FromView, [requiredCtrl.ngAfterViewChecked.bind(requiredCtrl)]); });\n                }\n            });\n        });\n        return acc.concat(_parentCheckedNotifiers);\n    }, []);\n    return collections_1.ListWrapper.size(parentCheckedNotifiers)\n        ? parentCheckedNotifiers\n        : [lang_1.noop];\n}\nexports._getParentCheckNotifiers = _getParentCheckNotifiers;\nfunction getControllerOnElement($element, ctrlName) {\n    if (!$element) {\n        return null;\n    }\n    return $element.controller(ctrlName);\n}\nexports.getControllerOnElement = getControllerOnElement;\n//# sourceMappingURL=children_resolver.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 53 */
/* unknown exports provided */
/* all exports used */
/*!*************************************************************************!*\
  !*** ./~/ng-metadata/src/core/linker/directive_lifecycles_reflector.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar type_1 = __webpack_require__(/*! ../../facade/type */ 26);\nvar directive_lifecycle_interfaces_1 = __webpack_require__(/*! ./directive_lifecycle_interfaces */ 13);\nfunction hasLifecycleHook(lcInterface, token) {\n    if (!(token instanceof type_1.Type))\n        return false;\n    var proto = token.prototype;\n    switch (lcInterface) {\n        case directive_lifecycle_interfaces_1.LifecycleHooks.AfterContentInit:\n            return !!proto.ngAfterContentInit;\n        case directive_lifecycle_interfaces_1.LifecycleHooks.AfterContentChecked:\n            return !!proto.ngAfterContentChecked;\n        case directive_lifecycle_interfaces_1.LifecycleHooks.AfterViewInit:\n            return !!proto.ngAfterViewInit;\n        case directive_lifecycle_interfaces_1.LifecycleHooks.AfterViewChecked:\n            return !!proto.ngAfterViewChecked;\n        case directive_lifecycle_interfaces_1.LifecycleHooks.OnDestroy:\n            return !!proto.ngOnDestroy;\n        case directive_lifecycle_interfaces_1.LifecycleHooks.OnInit:\n            return !!proto.ngOnInit;\n        case directive_lifecycle_interfaces_1.LifecycleHooks.OnChanges:\n            return !!proto.ngOnChanges;\n        case directive_lifecycle_interfaces_1.LifecycleHooks.DoCheck:\n            return !!proto.ngDoCheck;\n        case directive_lifecycle_interfaces_1.LifecycleHooks._OnChildrenChanged:\n            return !!proto._ngOnChildrenChanged;\n        default:\n            return false;\n    }\n}\nexports.hasLifecycleHook = hasLifecycleHook;\n/**\n * @internal\n */\nfunction resolveImplementedLifeCycleHooks(type) {\n    return {\n        ngOnInit: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks.OnInit, type),\n        ngOnChanges: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks.OnChanges, type),\n        ngDoCheck: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks.DoCheck, type),\n        ngAfterContentInit: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks.AfterContentInit, type),\n        ngAfterContentChecked: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks.AfterContentChecked, type),\n        ngAfterViewInit: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks.AfterViewInit, type),\n        ngAfterViewChecked: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks.AfterViewChecked, type),\n        ngOnDestroy: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks.OnDestroy, type),\n        _ngOnChildrenChanged: hasLifecycleHook(directive_lifecycle_interfaces_1.LifecycleHooks._OnChildrenChanged, type)\n    };\n}\nexports.resolveImplementedLifeCycleHooks = resolveImplementedLifeCycleHooks;\n//# sourceMappingURL=directive_lifecycles_reflector.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2xpbmtlci9kaXJlY3RpdmVfbGlmZWN5Y2xlc19yZWZsZWN0b3IuanM/MTQyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciB0eXBlXzEgPSByZXF1aXJlKFwiLi4vLi4vZmFjYWRlL3R5cGVcIik7XG52YXIgZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEgPSByZXF1aXJlKFwiLi9kaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXNcIik7XG5mdW5jdGlvbiBoYXNMaWZlY3ljbGVIb29rKGxjSW50ZXJmYWNlLCB0b2tlbikge1xuICAgIGlmICghKHRva2VuIGluc3RhbmNlb2YgdHlwZV8xLlR5cGUpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgdmFyIHByb3RvID0gdG9rZW4ucHJvdG90eXBlO1xuICAgIHN3aXRjaCAobGNJbnRlcmZhY2UpIHtcbiAgICAgICAgY2FzZSBkaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXNfMS5MaWZlY3ljbGVIb29rcy5BZnRlckNvbnRlbnRJbml0OlxuICAgICAgICAgICAgcmV0dXJuICEhcHJvdG8ubmdBZnRlckNvbnRlbnRJbml0O1xuICAgICAgICBjYXNlIGRpcmVjdGl2ZV9saWZlY3ljbGVfaW50ZXJmYWNlc18xLkxpZmVjeWNsZUhvb2tzLkFmdGVyQ29udGVudENoZWNrZWQ6XG4gICAgICAgICAgICByZXR1cm4gISFwcm90by5uZ0FmdGVyQ29udGVudENoZWNrZWQ7XG4gICAgICAgIGNhc2UgZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEuTGlmZWN5Y2xlSG9va3MuQWZ0ZXJWaWV3SW5pdDpcbiAgICAgICAgICAgIHJldHVybiAhIXByb3RvLm5nQWZ0ZXJWaWV3SW5pdDtcbiAgICAgICAgY2FzZSBkaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXNfMS5MaWZlY3ljbGVIb29rcy5BZnRlclZpZXdDaGVja2VkOlxuICAgICAgICAgICAgcmV0dXJuICEhcHJvdG8ubmdBZnRlclZpZXdDaGVja2VkO1xuICAgICAgICBjYXNlIGRpcmVjdGl2ZV9saWZlY3ljbGVfaW50ZXJmYWNlc18xLkxpZmVjeWNsZUhvb2tzLk9uRGVzdHJveTpcbiAgICAgICAgICAgIHJldHVybiAhIXByb3RvLm5nT25EZXN0cm95O1xuICAgICAgICBjYXNlIGRpcmVjdGl2ZV9saWZlY3ljbGVfaW50ZXJmYWNlc18xLkxpZmVjeWNsZUhvb2tzLk9uSW5pdDpcbiAgICAgICAgICAgIHJldHVybiAhIXByb3RvLm5nT25Jbml0O1xuICAgICAgICBjYXNlIGRpcmVjdGl2ZV9saWZlY3ljbGVfaW50ZXJmYWNlc18xLkxpZmVjeWNsZUhvb2tzLk9uQ2hhbmdlczpcbiAgICAgICAgICAgIHJldHVybiAhIXByb3RvLm5nT25DaGFuZ2VzO1xuICAgICAgICBjYXNlIGRpcmVjdGl2ZV9saWZlY3ljbGVfaW50ZXJmYWNlc18xLkxpZmVjeWNsZUhvb2tzLkRvQ2hlY2s6XG4gICAgICAgICAgICByZXR1cm4gISFwcm90by5uZ0RvQ2hlY2s7XG4gICAgICAgIGNhc2UgZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEuTGlmZWN5Y2xlSG9va3MuX09uQ2hpbGRyZW5DaGFuZ2VkOlxuICAgICAgICAgICAgcmV0dXJuICEhcHJvdG8uX25nT25DaGlsZHJlbkNoYW5nZWQ7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZXhwb3J0cy5oYXNMaWZlY3ljbGVIb29rID0gaGFzTGlmZWN5Y2xlSG9vaztcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVJbXBsZW1lbnRlZExpZmVDeWNsZUhvb2tzKHR5cGUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuZ09uSW5pdDogaGFzTGlmZWN5Y2xlSG9vayhkaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXNfMS5MaWZlY3ljbGVIb29rcy5PbkluaXQsIHR5cGUpLFxuICAgICAgICBuZ09uQ2hhbmdlczogaGFzTGlmZWN5Y2xlSG9vayhkaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXNfMS5MaWZlY3ljbGVIb29rcy5PbkNoYW5nZXMsIHR5cGUpLFxuICAgICAgICBuZ0RvQ2hlY2s6IGhhc0xpZmVjeWNsZUhvb2soZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEuTGlmZWN5Y2xlSG9va3MuRG9DaGVjaywgdHlwZSksXG4gICAgICAgIG5nQWZ0ZXJDb250ZW50SW5pdDogaGFzTGlmZWN5Y2xlSG9vayhkaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXNfMS5MaWZlY3ljbGVIb29rcy5BZnRlckNvbnRlbnRJbml0LCB0eXBlKSxcbiAgICAgICAgbmdBZnRlckNvbnRlbnRDaGVja2VkOiBoYXNMaWZlY3ljbGVIb29rKGRpcmVjdGl2ZV9saWZlY3ljbGVfaW50ZXJmYWNlc18xLkxpZmVjeWNsZUhvb2tzLkFmdGVyQ29udGVudENoZWNrZWQsIHR5cGUpLFxuICAgICAgICBuZ0FmdGVyVmlld0luaXQ6IGhhc0xpZmVjeWNsZUhvb2soZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEuTGlmZWN5Y2xlSG9va3MuQWZ0ZXJWaWV3SW5pdCwgdHlwZSksXG4gICAgICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZDogaGFzTGlmZWN5Y2xlSG9vayhkaXJlY3RpdmVfbGlmZWN5Y2xlX2ludGVyZmFjZXNfMS5MaWZlY3ljbGVIb29rcy5BZnRlclZpZXdDaGVja2VkLCB0eXBlKSxcbiAgICAgICAgbmdPbkRlc3Ryb3k6IGhhc0xpZmVjeWNsZUhvb2soZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEuTGlmZWN5Y2xlSG9va3MuT25EZXN0cm95LCB0eXBlKSxcbiAgICAgICAgX25nT25DaGlsZHJlbkNoYW5nZWQ6IGhhc0xpZmVjeWNsZUhvb2soZGlyZWN0aXZlX2xpZmVjeWNsZV9pbnRlcmZhY2VzXzEuTGlmZWN5Y2xlSG9va3MuX09uQ2hpbGRyZW5DaGFuZ2VkLCB0eXBlKVxuICAgIH07XG59XG5leHBvcnRzLnJlc29sdmVJbXBsZW1lbnRlZExpZmVDeWNsZUhvb2tzID0gcmVzb2x2ZUltcGxlbWVudGVkTGlmZUN5Y2xlSG9va3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaXJlY3RpdmVfbGlmZWN5Y2xlc19yZWZsZWN0b3IuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2xpbmtlci9kaXJlY3RpdmVfbGlmZWN5Y2xlc19yZWZsZWN0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDUzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 54 */
/* unknown exports provided */
/* all exports used */
/*!*************************************************************!*\
  !*** ./~/ng-metadata/src/core/linker/directive_resolver.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar collections_1 = __webpack_require__(/*! ../../facade/collections */ 1);\nvar reflection_1 = __webpack_require__(/*! ../reflection/reflection */ 4);\nvar metadata_directives_1 = __webpack_require__(/*! ../directives/metadata_directives */ 3);\nvar metadata_di_1 = __webpack_require__(/*! ../directives/metadata_di */ 8);\nvar metadata_1 = __webpack_require__(/*! ../di/metadata */ 2);\nvar provider_1 = __webpack_require__(/*! ../di/provider */ 5);\nvar forward_ref_1 = __webpack_require__(/*! ../di/forward_ref */ 6);\nvar exceptions_1 = __webpack_require__(/*! ../../facade/exceptions */ 24);\n// asset:<package-name>/<realm>/<path-to-module>\n// var _ASSET_URL_RE = /asset:([^\\/]+)\\/([^\\/]+)\\/(.+)/g;\n// <path-to-module>/filename.js\nvar ASSET_URL_RE = /^(.+)\\/.+\\.js$/;\nfunction _isDirectiveMetadata(type) {\n    return type instanceof metadata_directives_1.DirectiveMetadata;\n}\n/**\n * return required string map for provided local DI\n * ```typescript\n * // for\n * constructor(@Inject('ngModel') @Self() @Optional() ngModel){}\n * // it returns:\n * { ngModel: '?ngModel' }\n *\n * // when MyComponent is\n * @Component({ selector: 'myCoolCmp', template:`hello`})\n * class MyComponent{}\n * // for\n * constructor(@Host() @Optional() myCmp: MyComponent){}\n * // it returns:\n * { myCmp: '^myCoolCmp' }\n * ```\n * @param paramsMeta\n * @param idx\n * @param typeOrFunc\n * @returns {{[directiveName]:string}}\n * @private\n */\nfunction _transformInjectedDirectivesMeta(paramsMeta, idx, typeOrFunc) {\n    if (!_isInjectableParamsDirective(paramsMeta)) {\n        return;\n    }\n    // @TODO unite this with _extractToken from provider.ts\n    var injectInst = collections_1.ListWrapper.find(paramsMeta, function (param) { return param instanceof metadata_1.InjectMetadata; });\n    var injectType = collections_1.ListWrapper.find(paramsMeta, lang_1.isType);\n    var _a = (injectInst || { token: injectType }).token, token = _a === void 0 ? undefined : _a;\n    // we need to decrement param count if user uses both @Inject() and :MyType\n    var paramsMetaLength = (injectInst && injectType)\n        ? paramsMeta.length - 1\n        : paramsMeta.length;\n    if (!token) {\n        throw new Error(exceptions_1.getErrorMsg(typeOrFunc, \"no Directive instance name provided within @Inject() or :DirectiveClass annotation missing\"));\n    }\n    var isHost = collections_1.ListWrapper.findIndex(paramsMeta, function (param) { return param instanceof metadata_1.HostMetadata; }) !== -1;\n    var isOptional = collections_1.ListWrapper.findIndex(paramsMeta, function (param) { return param instanceof metadata_1.OptionalMetadata; }) !== -1;\n    var isSelf = collections_1.ListWrapper.findIndex(paramsMeta, function (param) { return param instanceof metadata_1.SelfMetadata; }) !== -1;\n    var isSkipSelf = collections_1.ListWrapper.findIndex(paramsMeta, function (param) { return param instanceof metadata_1.SkipSelfMetadata; }) !== -1;\n    if (isOptional && paramsMetaLength !== 3) {\n        throw new Error(exceptions_1.getErrorMsg(typeOrFunc, \"you cannot use @Optional() without related decorator for injecting Directives. use one of @Host|@Self()|@SkipSelf() + @Optional()\"));\n    }\n    if (isSelf && isSkipSelf) {\n        throw new Error(exceptions_1.getErrorMsg(typeOrFunc, \"you cannot provide both @Self() and @SkipSelf() with @Inject(\" + lang_1.getFuncName(token) + \") for Directive Injection\"));\n    }\n    if ((isHost && isSelf) || (isHost && isSkipSelf)) {\n        throw new Error(exceptions_1.getErrorMsg(typeOrFunc, \"you cannot provide both @Host(),@SkipSelf() or @Host(),@Self() with @Inject(\" + lang_1.getFuncName(token) + \") for Directive Injections\"));\n    }\n    var locateType = _getLocateTypeSymbol();\n    var optionalType = isOptional ? '?' : '';\n    var requireExpressionPrefix = \"\" + optionalType + locateType;\n    var directiveName = _getDirectiveName(token);\n    // we need to generate unique names because if we require same directive controllers,\n    // with different locale decorators it would merge to one which is wrong\n    return _b = {},\n        _b[directiveName + \"#\" + idx] = \"\" + requireExpressionPrefix + directiveName,\n        _b;\n    function _getDirectiveName(token) {\n        return lang_1.isType(forward_ref_1.resolveForwardRef(token))\n            ? provider_1.getInjectableName(forward_ref_1.resolveForwardRef(token))\n            : token;\n    }\n    function _getLocateTypeSymbol() {\n        if (isSelf) {\n            return '';\n        }\n        if (isHost) {\n            return '^';\n        }\n        if (isSkipSelf) {\n            return '^^';\n        }\n    }\n    // exit if user uses both @Inject() and :Type for DI because this is not directive injection\n    function _isInjectableParamsDirective(paramsMeta) {\n        // if there is just @Inject or Type from design:paramtypes return\n        if (paramsMeta.length < 2) {\n            return false;\n        }\n        if (paramsMeta.length === 2) {\n            var injectableParamCount = paramsMeta.filter(function (inj) { return inj instanceof metadata_1.InjectMetadata || lang_1.isType(inj); }).length;\n            if (injectableParamCount === 2) {\n                return false;\n            }\n        }\n        return true;\n    }\n    var _b;\n}\n/**\n * Resolve a `Type` for {@link DirectiveMetadata}.\n */\nvar DirectiveResolver = (function () {\n    function DirectiveResolver() {\n    }\n    /**\n     * Return {@link DirectiveMetadata} for a given `Type`.\n     */\n    DirectiveResolver.prototype.resolve = function (type) {\n        var metadata = this._getDirectiveMeta(type);\n        var propertyMetadata = reflection_1.reflector.propMetadata(type);\n        return this._mergeWithPropertyMetadata(metadata, propertyMetadata);\n    };\n    /**\n     * transform parameter annotations to required directives map so we can use it\n     * for DDO creation\n     *\n     * map consist of :\n     *  - key == name of directive\n     *  - value == Angular 1 require expression\n     *  ```js\n     *  {\n     *    ngModel: 'ngModel',\n     *    form: '^^form',\n     *    foo: '^foo',\n     *    moo: '?^foo',\n     *  }\n     *  ```\n     *\n     * @param {Type} type\n     * @returns {StringMap}\n     */\n    DirectiveResolver.prototype.getRequiredDirectivesMap = function (type) {\n        var metadata = this._getDirectiveMeta(type);\n        var paramMetadata = reflection_1.reflector.parameters(type);\n        if (lang_1.isPresent(paramMetadata)) {\n            return paramMetadata\n                .reduce(function (acc, paramMetaArr, idx) {\n                var requireExp = _transformInjectedDirectivesMeta(paramMetaArr, idx, type);\n                if (lang_1.isPresent(requireExp)) {\n                    lang_1.assign(acc, requireExp);\n                }\n                return acc;\n            }, {});\n        }\n        return {};\n    };\n    DirectiveResolver.prototype.parseAssetUrl = function (cmpMetadata) {\n        if (lang_1.isBlank(cmpMetadata.moduleId)) {\n            return '';\n        }\n        var moduleId = cmpMetadata.moduleId;\n        var _a = moduleId.match(ASSET_URL_RE) || [], _b = _a[1], urlPathMatch = _b === void 0 ? '' : _b;\n        return urlPathMatch + \"/\";\n    };\n    /**\n     *\n     * @param type\n     * @returns {DirectiveMetadata}\n     * @throws Error\n     * @private\n     */\n    DirectiveResolver.prototype._getDirectiveMeta = function (type) {\n        var typeMetadata = reflection_1.reflector.annotations(forward_ref_1.resolveForwardRef(type));\n        if (lang_1.isPresent(typeMetadata)) {\n            var metadata = collections_1.ListWrapper.find(typeMetadata, _isDirectiveMetadata);\n            if (lang_1.isPresent(metadata)) {\n                return metadata;\n            }\n        }\n        throw new Error(\"No Directive annotation found on \" + lang_1.stringify(type));\n    };\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = function (directiveMetadata, propertyMetadata) {\n        var inputs = [];\n        var attrs = [];\n        var outputs = [];\n        var host = {};\n        var queries = {};\n        collections_1.StringMapWrapper.forEach(propertyMetadata, function (metadata, propName) {\n            metadata.forEach(function (propMetaInst) {\n                if (propMetaInst instanceof metadata_directives_1.InputMetadata) {\n                    if (lang_1.isPresent(propMetaInst.bindingPropertyName)) {\n                        inputs.push(propName + \": \" + propMetaInst.bindingPropertyName);\n                    }\n                    else {\n                        inputs.push(propName);\n                    }\n                }\n                if (propMetaInst instanceof metadata_directives_1.AttrMetadata) {\n                    if (lang_1.isPresent(propMetaInst.bindingPropertyName)) {\n                        attrs.push(propName + \": \" + propMetaInst.bindingPropertyName);\n                    }\n                    else {\n                        attrs.push(propName);\n                    }\n                }\n                if (propMetaInst instanceof metadata_directives_1.OutputMetadata) {\n                    if (lang_1.isPresent(propMetaInst.bindingPropertyName)) {\n                        outputs.push(propName + \": \" + propMetaInst.bindingPropertyName);\n                    }\n                    else {\n                        outputs.push(propName);\n                    }\n                }\n                if (propMetaInst instanceof metadata_directives_1.HostBindingMetadata) {\n                    if (lang_1.isPresent(propMetaInst.hostPropertyName)) {\n                        host[\"[\" + propMetaInst.hostPropertyName + \"]\"] = propName;\n                    }\n                    else {\n                        host[\"[\" + propName + \"]\"] = propName;\n                    }\n                }\n                if (propMetaInst instanceof metadata_directives_1.HostListenerMetadata) {\n                    var args = lang_1.isPresent(propMetaInst.args)\n                        ? propMetaInst.args.join(', ')\n                        : '';\n                    host[\"(\" + propMetaInst.eventName + \")\"] = propName + \"(\" + args + \")\";\n                }\n                if (propMetaInst instanceof metadata_di_1.ContentChildrenMetadata) {\n                    queries[propName] = propMetaInst;\n                }\n                if (propMetaInst instanceof metadata_di_1.ViewChildrenMetadata) {\n                    queries[propName] = propMetaInst;\n                }\n                if (propMetaInst instanceof metadata_di_1.ContentChildMetadata) {\n                    queries[propName] = propMetaInst;\n                }\n                if (propMetaInst instanceof metadata_di_1.ViewChildMetadata) {\n                    queries[propName] = propMetaInst;\n                }\n            });\n        });\n        return this._merge(directiveMetadata, inputs, attrs, outputs, host, queries);\n    };\n    DirectiveResolver.prototype._merge = function (dm, inputs, attrs, outputs, host, queries) {\n        var mergedInputs = lang_1.isPresent(dm.inputs)\n            ? collections_1.ListWrapper.concat(dm.inputs, inputs)\n            : inputs;\n        var mergedAttrs = lang_1.isPresent(dm.attrs)\n            ? collections_1.ListWrapper.concat(dm.attrs, attrs)\n            : attrs;\n        var mergedOutputs = lang_1.isPresent(dm.outputs)\n            ? collections_1.ListWrapper.concat(dm.outputs, outputs)\n            : outputs;\n        var mergedHost = lang_1.isPresent(dm.host)\n            ? collections_1.StringMapWrapper.merge(dm.host, host)\n            : host;\n        var mergedQueries = lang_1.isPresent(dm.queries)\n            ? collections_1.StringMapWrapper.merge(dm.queries, queries)\n            : queries;\n        var directiveSettings = {\n            selector: dm.selector,\n            inputs: mergedInputs,\n            attrs: mergedAttrs,\n            outputs: mergedOutputs,\n            host: mergedHost,\n            queries: mergedQueries,\n            legacy: dm.legacy\n        };\n        if (dm instanceof metadata_directives_1.ComponentMetadata) {\n            var componentSettings = collections_1.StringMapWrapper.assign({}, directiveSettings, {\n                moduleId: dm.moduleId,\n                template: dm.template,\n                templateUrl: dm.templateUrl,\n                changeDetection: lang_1.isPresent(dm.changeDetection) ? dm.changeDetection : 1 /* Default */\n            });\n            return new metadata_directives_1.ComponentMetadata(componentSettings);\n        }\n        else {\n            return new metadata_directives_1.DirectiveMetadata(directiveSettings);\n        }\n    };\n    return DirectiveResolver;\n}());\nexports.DirectiveResolver = DirectiveResolver;\n//# sourceMappingURL=directive_resolver.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 55 */
/* unknown exports provided */
/* all exports used */
/*!********************************************************!*\
  !*** ./~/ng-metadata/src/core/linker/pipe_resolver.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar collections_1 = __webpack_require__(/*! ../../facade/collections */ 1);\nvar metadata_1 = __webpack_require__(/*! ../pipes/metadata */ 14);\nvar reflection_1 = __webpack_require__(/*! ../reflection/reflection */ 4);\nvar forward_ref_1 = __webpack_require__(/*! ../di/forward_ref */ 6);\nfunction _isPipeMetadata(type) {\n    return type instanceof metadata_1.PipeMetadata;\n}\n/**\n * Resolve a `Type` for {@link PipeMetadata}.\n *\n */\nvar PipeResolver = (function () {\n    function PipeResolver() {\n    }\n    /**\n     * Return {@link PipeMetadata} for a given `Type`.\n     */\n    PipeResolver.prototype.resolve = function (type) {\n        var metas = reflection_1.reflector.annotations(forward_ref_1.resolveForwardRef(type));\n        if (lang_1.isPresent(metas)) {\n            var annotation = collections_1.ListWrapper.find(metas, _isPipeMetadata);\n            if (lang_1.isPresent(annotation)) {\n                return annotation;\n            }\n        }\n        throw new Error(\"No Pipe decorator found on \" + lang_1.stringify(type));\n    };\n    return PipeResolver;\n}());\nexports.PipeResolver = PipeResolver;\n//# sourceMappingURL=pipe_resolver.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2xpbmtlci9waXBlX3Jlc29sdmVyLmpzPzg1M2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgbGFuZ18xID0gcmVxdWlyZShcIi4uLy4uL2ZhY2FkZS9sYW5nXCIpO1xudmFyIGNvbGxlY3Rpb25zXzEgPSByZXF1aXJlKFwiLi4vLi4vZmFjYWRlL2NvbGxlY3Rpb25zXCIpO1xudmFyIG1ldGFkYXRhXzEgPSByZXF1aXJlKFwiLi4vcGlwZXMvbWV0YWRhdGFcIik7XG52YXIgcmVmbGVjdGlvbl8xID0gcmVxdWlyZShcIi4uL3JlZmxlY3Rpb24vcmVmbGVjdGlvblwiKTtcbnZhciBmb3J3YXJkX3JlZl8xID0gcmVxdWlyZShcIi4uL2RpL2ZvcndhcmRfcmVmXCIpO1xuZnVuY3Rpb24gX2lzUGlwZU1ldGFkYXRhKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZSBpbnN0YW5jZW9mIG1ldGFkYXRhXzEuUGlwZU1ldGFkYXRhO1xufVxuLyoqXG4gKiBSZXNvbHZlIGEgYFR5cGVgIGZvciB7QGxpbmsgUGlwZU1ldGFkYXRhfS5cbiAqXG4gKi9cbnZhciBQaXBlUmVzb2x2ZXIgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFBpcGVSZXNvbHZlcigpIHtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIHtAbGluayBQaXBlTWV0YWRhdGF9IGZvciBhIGdpdmVuIGBUeXBlYC5cbiAgICAgKi9cbiAgICBQaXBlUmVzb2x2ZXIucHJvdG90eXBlLnJlc29sdmUgPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICB2YXIgbWV0YXMgPSByZWZsZWN0aW9uXzEucmVmbGVjdG9yLmFubm90YXRpb25zKGZvcndhcmRfcmVmXzEucmVzb2x2ZUZvcndhcmRSZWYodHlwZSkpO1xuICAgICAgICBpZiAobGFuZ18xLmlzUHJlc2VudChtZXRhcykpIHtcbiAgICAgICAgICAgIHZhciBhbm5vdGF0aW9uID0gY29sbGVjdGlvbnNfMS5MaXN0V3JhcHBlci5maW5kKG1ldGFzLCBfaXNQaXBlTWV0YWRhdGEpO1xuICAgICAgICAgICAgaWYgKGxhbmdfMS5pc1ByZXNlbnQoYW5ub3RhdGlvbikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYW5ub3RhdGlvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBQaXBlIGRlY29yYXRvciBmb3VuZCBvbiBcIiArIGxhbmdfMS5zdHJpbmdpZnkodHlwZSkpO1xuICAgIH07XG4gICAgcmV0dXJuIFBpcGVSZXNvbHZlcjtcbn0oKSk7XG5leHBvcnRzLlBpcGVSZXNvbHZlciA9IFBpcGVSZXNvbHZlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcGVfcmVzb2x2ZXIuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL2xpbmtlci9waXBlX3Jlc29sdmVyLmpzXG4vLyBtb2R1bGUgaWQgPSA1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 56 */
/* unknown exports provided */
/* all exports used */
/*!*****************************************!*\
  !*** ./~/ng-metadata/src/core/pipes.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar decorators_1 = __webpack_require__(/*! ./pipes/decorators */ 57);\nexports.Pipe = decorators_1.Pipe;\n//# sourceMappingURL=pipes.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3BpcGVzLmpzP2U2NWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgZGVjb3JhdG9yc18xID0gcmVxdWlyZShcIi4vcGlwZXMvZGVjb3JhdG9yc1wiKTtcbmV4cG9ydHMuUGlwZSA9IGRlY29yYXRvcnNfMS5QaXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlwZXMuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3BpcGVzLmpzXG4vLyBtb2R1bGUgaWQgPSA1NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 57 */
/* unknown exports provided */
/* all exports used */
/*!****************************************************!*\
  !*** ./~/ng-metadata/src/core/pipes/decorators.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar decorators_1 = __webpack_require__(/*! ../util/decorators */ 9);\nvar metadata_1 = __webpack_require__(/*! ./metadata */ 14);\nexports.Pipe = decorators_1.makeDecorator(metadata_1.PipeMetadata);\n//# sourceMappingURL=decorators.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3BpcGVzL2RlY29yYXRvcnMuanM/MWQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBkZWNvcmF0b3JzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9kZWNvcmF0b3JzXCIpO1xudmFyIG1ldGFkYXRhXzEgPSByZXF1aXJlKFwiLi9tZXRhZGF0YVwiKTtcbmV4cG9ydHMuUGlwZSA9IGRlY29yYXRvcnNfMS5tYWtlRGVjb3JhdG9yKG1ldGFkYXRhXzEuUGlwZU1ldGFkYXRhKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlY29yYXRvcnMuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3BpcGVzL2RlY29yYXRvcnMuanNcbi8vIG1vZHVsZSBpZCA9IDU3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 58 */
/* unknown exports provided */
/* all exports used */
/*!*******************************************************!*\
  !*** ./~/ng-metadata/src/core/pipes/pipe_provider.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar pipe_resolver_1 = __webpack_require__(/*! ../linker/pipe_resolver */ 55);\n/**\n * @internal\n */\nvar PipeProvider = (function () {\n    function PipeProvider(pipeResolver) {\n        this.pipeResolver = pipeResolver;\n    }\n    PipeProvider.prototype.createFromType = function (type) {\n        var metadata = this.pipeResolver.resolve(type);\n        if (!lang_1.isFunction(type.prototype.transform)) {\n            throw new Error(\"@Pipe: must implement '#transform' method\");\n        }\n        filterFactory.$inject = ['$injector'];\n        function filterFactory($injector) {\n            var pipeInstance = $injector.instantiate(type);\n            // return angular 1 filter function\n            var filterFn = pipeInstance.transform.bind(pipeInstance);\n            if (metadata.pure === false) {\n                filterFn.$stateful = true;\n            }\n            return filterFn;\n        }\n        return [\n            metadata.name,\n            filterFactory\n        ];\n    };\n    return PipeProvider;\n}());\nexports.PipeProvider = PipeProvider;\n/** @internal */\nexports.pipeProvider = new PipeProvider(new pipe_resolver_1.PipeResolver());\n//# sourceMappingURL=pipe_provider.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3BpcGVzL3BpcGVfcHJvdmlkZXIuanM/ZTYwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBsYW5nXzEgPSByZXF1aXJlKFwiLi4vLi4vZmFjYWRlL2xhbmdcIik7XG52YXIgcGlwZV9yZXNvbHZlcl8xID0gcmVxdWlyZShcIi4uL2xpbmtlci9waXBlX3Jlc29sdmVyXCIpO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xudmFyIFBpcGVQcm92aWRlciA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUGlwZVByb3ZpZGVyKHBpcGVSZXNvbHZlcikge1xuICAgICAgICB0aGlzLnBpcGVSZXNvbHZlciA9IHBpcGVSZXNvbHZlcjtcbiAgICB9XG4gICAgUGlwZVByb3ZpZGVyLnByb3RvdHlwZS5jcmVhdGVGcm9tVHlwZSA9IGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICAgIHZhciBtZXRhZGF0YSA9IHRoaXMucGlwZVJlc29sdmVyLnJlc29sdmUodHlwZSk7XG4gICAgICAgIGlmICghbGFuZ18xLmlzRnVuY3Rpb24odHlwZS5wcm90b3R5cGUudHJhbnNmb3JtKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQFBpcGU6IG11c3QgaW1wbGVtZW50ICcjdHJhbnNmb3JtJyBtZXRob2RcIik7XG4gICAgICAgIH1cbiAgICAgICAgZmlsdGVyRmFjdG9yeS4kaW5qZWN0ID0gWyckaW5qZWN0b3InXTtcbiAgICAgICAgZnVuY3Rpb24gZmlsdGVyRmFjdG9yeSgkaW5qZWN0b3IpIHtcbiAgICAgICAgICAgIHZhciBwaXBlSW5zdGFuY2UgPSAkaW5qZWN0b3IuaW5zdGFudGlhdGUodHlwZSk7XG4gICAgICAgICAgICAvLyByZXR1cm4gYW5ndWxhciAxIGZpbHRlciBmdW5jdGlvblxuICAgICAgICAgICAgdmFyIGZpbHRlckZuID0gcGlwZUluc3RhbmNlLnRyYW5zZm9ybS5iaW5kKHBpcGVJbnN0YW5jZSk7XG4gICAgICAgICAgICBpZiAobWV0YWRhdGEucHVyZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXJGbi4kc3RhdGVmdWwgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZpbHRlckZuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBtZXRhZGF0YS5uYW1lLFxuICAgICAgICAgICAgZmlsdGVyRmFjdG9yeVxuICAgICAgICBdO1xuICAgIH07XG4gICAgcmV0dXJuIFBpcGVQcm92aWRlcjtcbn0oKSk7XG5leHBvcnRzLlBpcGVQcm92aWRlciA9IFBpcGVQcm92aWRlcjtcbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydHMucGlwZVByb3ZpZGVyID0gbmV3IFBpcGVQcm92aWRlcihuZXcgcGlwZV9yZXNvbHZlcl8xLlBpcGVSZXNvbHZlcigpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcGVfcHJvdmlkZXIuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3BpcGVzL3BpcGVfcHJvdmlkZXIuanNcbi8vIG1vZHVsZSBpZCA9IDU4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 59 */
/* unknown exports provided */
/* all exports used */
/*!**********************************************************************!*\
  !*** ./~/ng-metadata/src/core/reflection/reflection_capabilities.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../../facade/lang */ 0);\nvar collections_1 = __webpack_require__(/*! ../../facade/collections */ 1);\n// import {BaseException} from 'angular2/src/facade/exceptions';\n// This will be needed when we will used Reflect APIs\nvar Reflect = lang_1.global.Reflect;\nif (!isReflectMetadata(Reflect)) {\n    throw \"\\n    Reflect.*metadata shim is required when using class decorators.\\n    You can use one of: \\n    - \\\"reflect-metadata\\\" (https://www.npmjs.com/package/reflect-metadata) \\n    - \\\"core-js/es7/reflect\\\" (https://github.com/zloirock/core-js)\\n  \";\n}\n/**\n * @internal\n */\nexports.CLASS_META_KEY = 'annotations';\n/**\n * @internal\n */\nexports.PARAM_META_KEY = 'parameters';\n/**\n * @internal\n */\nexports.PARAM_REFLECT_META_KEY = 'design:paramtypes';\n/**\n * @internal\n */\nexports.PROP_META_KEY = 'propMetadata';\n/**\n * @internal\n */\nexports.DOWNGRADED_COMPONENT_NAME_KEY = 'downgradeComponentName';\nfunction isReflectMetadata(reflect) {\n    return lang_1.isPresent(reflect) && lang_1.isPresent(reflect.getMetadata);\n}\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        if (reflect === void 0) { reflect = lang_1.global.Reflect; }\n        this._reflect = reflect;\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) {\n        switch (t.length) {\n            case 0:\n                return function () { return new t(); };\n            case 1:\n                return function (a1) { return new t(a1); };\n            case 2:\n                return function (a1, a2) { return new t(a1, a2); };\n            case 3:\n                return function (a1, a2, a3) { return new t(a1, a2, a3); };\n            case 4:\n                return function (a1, a2, a3, a4) { return new t(a1, a2, a3, a4); };\n            case 5:\n                return function (a1, a2, a3, a4, a5) { return new t(a1, a2, a3, a4, a5); };\n            case 6:\n                return function (a1, a2, a3, a4, a5, a6) {\n                    return new t(a1, a2, a3, a4, a5, a6);\n                };\n            case 7:\n                return function (a1, a2, a3, a4, a5, a6, a7) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7);\n                };\n            case 8:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7, a8);\n                };\n            case 9:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9);\n                };\n            case 10:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) { return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10); };\n            case 11:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) { return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11); };\n            case 12:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);\n                };\n            case 13:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);\n                };\n            case 14:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);\n                };\n            case 15:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);\n                };\n            case 16:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);\n                };\n            case 17:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {\n                    return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);\n                };\n            case 18:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) { return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18); };\n            case 19:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) { return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19); };\n            case 20:\n                return function (a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20) { return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20); };\n        }\n        throw new Error(\"Cannot create a factory for '\" + lang_1.stringify(t) + \"' because its constructor has more than 20 arguments\");\n    };\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (lang_1.isPresent(paramAnnotations) && lang_1.isPresent(paramAnnotations[i])) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype.parameters = function (typeOrFunc) {\n        // // Prefer the direct API.\n        // if (isPresent((<any>typeOrFunc).parameters)) {\n        //   return (<any>typeOrFunc).parameters;\n        // }\n        if (isReflectMetadata(this._reflect)) {\n            // get parameter created with @Inject()\n            var paramAnnotations = this._reflect.getMetadata(exports.PARAM_META_KEY, typeOrFunc);\n            // get parameter created via TS type annotations\n            var paramTypes = this._reflect.getMetadata(exports.PARAM_REFLECT_META_KEY, typeOrFunc);\n            if (lang_1.isPresent(paramTypes) || lang_1.isPresent(paramAnnotations)) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n        }\n        // The array has to be filled with `undefined` because holes would be skipped by `some`\n        var parameters = new Array(typeOrFunc.length);\n        collections_1.ListWrapper.fill(parameters, undefined);\n        // parameters.fill(undefined);\n        return parameters;\n    };\n    ReflectionCapabilities.prototype.rawParameters = function (typeOrFunc) {\n        return this._reflect.getMetadata(exports.PARAM_META_KEY, typeOrFunc);\n    };\n    ReflectionCapabilities.prototype.registerParameters = function (parameters, type) {\n        this._reflect.defineMetadata(exports.PARAM_META_KEY, parameters, type);\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        // // Prefer the direct API.\n        // if (isPresent((<any>typeOrFunc).annotations)) {\n        //   var annotations = (<any>typeOrFunc).annotations;\n        //   if (isFunction(annotations) && annotations.annotations) {\n        //     annotations = annotations.annotations;\n        //   }\n        //   return annotations;\n        // }\n        if (isReflectMetadata(this._reflect)) {\n            var annotations = this._reflect.getMetadata(exports.CLASS_META_KEY, typeOrFunc);\n            if (lang_1.isPresent(annotations))\n                return annotations;\n        }\n        return [];\n    };\n    ReflectionCapabilities.prototype.ownAnnotations = function (typeOrFunc) {\n        return this._reflect.getOwnMetadata(exports.CLASS_META_KEY, typeOrFunc);\n    };\n    ReflectionCapabilities.prototype.registerAnnotations = function (annotations, typeOrFunc) {\n        this._reflect.defineMetadata(exports.CLASS_META_KEY, annotations, typeOrFunc);\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        // // Prefer the direct API.\n        // if (isPresent((<any>typeOrFunc).propMetadata)) {\n        //   var propMetadata = (<any>typeOrFunc).propMetadata;\n        //   if (isFunction(propMetadata) && propMetadata.propMetadata) {\n        //     propMetadata = propMetadata.propMetadata;\n        //   }\n        //   return propMetadata;\n        // }\n        if (isReflectMetadata(this._reflect)) {\n            var propMetadata = this._reflect.getMetadata(exports.PROP_META_KEY, typeOrFunc);\n            if (lang_1.isPresent(propMetadata))\n                return propMetadata;\n        }\n        return {};\n    };\n    ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n        return this._reflect.getOwnMetadata(exports.PROP_META_KEY, typeOrFunc);\n    };\n    ReflectionCapabilities.prototype.registerPropMetadata = function (propMetadata, typeOrFunc) {\n        this._reflect.defineMetadata(exports.PROP_META_KEY, propMetadata, typeOrFunc);\n    };\n    ReflectionCapabilities.prototype.registerDowngradedNg2ComponentName = function (componentName, typeOrFunc) {\n        this._reflect.defineMetadata(exports.DOWNGRADED_COMPONENT_NAME_KEY, componentName, typeOrFunc);\n    };\n    ReflectionCapabilities.prototype.downgradedNg2ComponentName = function (typeOrFunc) {\n        return this._reflect.getOwnMetadata(exports.DOWNGRADED_COMPONENT_NAME_KEY, typeOrFunc);\n    };\n    ReflectionCapabilities.prototype.interfaces = function (type) {\n        // throw new BaseException(\"JavaScript does not support interfaces\");\n        throw new Error('JavaScript does not support interfaces');\n    };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    return ReflectionCapabilities;\n}());\nexports.ReflectionCapabilities = ReflectionCapabilities;\n//# sourceMappingURL=reflection_capabilities.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3JlZmxlY3Rpb24vcmVmbGVjdGlvbl9jYXBhYmlsaXRpZXMuanM/YzQ5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBsYW5nXzEgPSByZXF1aXJlKFwiLi4vLi4vZmFjYWRlL2xhbmdcIik7XG52YXIgY29sbGVjdGlvbnNfMSA9IHJlcXVpcmUoXCIuLi8uLi9mYWNhZGUvY29sbGVjdGlvbnNcIik7XG4vLyBpbXBvcnQge0Jhc2VFeGNlcHRpb259IGZyb20gJ2FuZ3VsYXIyL3NyYy9mYWNhZGUvZXhjZXB0aW9ucyc7XG4vLyBUaGlzIHdpbGwgYmUgbmVlZGVkIHdoZW4gd2Ugd2lsbCB1c2VkIFJlZmxlY3QgQVBJc1xudmFyIFJlZmxlY3QgPSBsYW5nXzEuZ2xvYmFsLlJlZmxlY3Q7XG5pZiAoIWlzUmVmbGVjdE1ldGFkYXRhKFJlZmxlY3QpKSB7XG4gICAgdGhyb3cgXCJcXG4gICAgUmVmbGVjdC4qbWV0YWRhdGEgc2hpbSBpcyByZXF1aXJlZCB3aGVuIHVzaW5nIGNsYXNzIGRlY29yYXRvcnMuXFxuICAgIFlvdSBjYW4gdXNlIG9uZSBvZjogXFxuICAgIC0gXFxcInJlZmxlY3QtbWV0YWRhdGFcXFwiIChodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9yZWZsZWN0LW1ldGFkYXRhKSBcXG4gICAgLSBcXFwiY29yZS1qcy9lczcvcmVmbGVjdFxcXCIgKGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzKVxcbiAgXCI7XG59XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnRzLkNMQVNTX01FVEFfS0VZID0gJ2Fubm90YXRpb25zJztcbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydHMuUEFSQU1fTUVUQV9LRVkgPSAncGFyYW1ldGVycyc7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnRzLlBBUkFNX1JFRkxFQ1RfTUVUQV9LRVkgPSAnZGVzaWduOnBhcmFtdHlwZXMnO1xuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0cy5QUk9QX01FVEFfS0VZID0gJ3Byb3BNZXRhZGF0YSc7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnRzLkRPV05HUkFERURfQ09NUE9ORU5UX05BTUVfS0VZID0gJ2Rvd25ncmFkZUNvbXBvbmVudE5hbWUnO1xuZnVuY3Rpb24gaXNSZWZsZWN0TWV0YWRhdGEocmVmbGVjdCkge1xuICAgIHJldHVybiBsYW5nXzEuaXNQcmVzZW50KHJlZmxlY3QpICYmIGxhbmdfMS5pc1ByZXNlbnQocmVmbGVjdC5nZXRNZXRhZGF0YSk7XG59XG52YXIgUmVmbGVjdGlvbkNhcGFiaWxpdGllcyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUmVmbGVjdGlvbkNhcGFiaWxpdGllcyhyZWZsZWN0KSB7XG4gICAgICAgIGlmIChyZWZsZWN0ID09PSB2b2lkIDApIHsgcmVmbGVjdCA9IGxhbmdfMS5nbG9iYWwuUmVmbGVjdDsgfVxuICAgICAgICB0aGlzLl9yZWZsZWN0ID0gcmVmbGVjdDtcbiAgICB9XG4gICAgUmVmbGVjdGlvbkNhcGFiaWxpdGllcy5wcm90b3R5cGUuaXNSZWZsZWN0aW9uRW5hYmxlZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRydWU7IH07XG4gICAgUmVmbGVjdGlvbkNhcGFiaWxpdGllcy5wcm90b3R5cGUuZmFjdG9yeSA9IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgIHN3aXRjaCAodC5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3IHQoKTsgfTtcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGExKSB7IHJldHVybiBuZXcgdChhMSk7IH07XG4gICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhMSwgYTIpIHsgcmV0dXJuIG5ldyB0KGExLCBhMik7IH07XG4gICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhMSwgYTIsIGEzKSB7IHJldHVybiBuZXcgdChhMSwgYTIsIGEzKTsgfTtcbiAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGExLCBhMiwgYTMsIGE0KSB7IHJldHVybiBuZXcgdChhMSwgYTIsIGEzLCBhNCk7IH07XG4gICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhMSwgYTIsIGEzLCBhNCwgYTUpIHsgcmV0dXJuIG5ldyB0KGExLCBhMiwgYTMsIGE0LCBhNSk7IH07XG4gICAgICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgdChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSA3OlxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyB0KGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSA4OlxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgdChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2LCBhNywgYTgpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2LCBhNywgYTgsIGE5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgdChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2LCBhNywgYTgsIGE5KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCkgeyByZXR1cm4gbmV3IHQoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4LCBhOSwgYTEwKTsgfTtcbiAgICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2LCBhNywgYTgsIGE5LCBhMTAsIGExMSkgeyByZXR1cm4gbmV3IHQoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4LCBhOSwgYTEwLCBhMTEpOyB9O1xuICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyB0KGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlIDEzOlxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4LCBhOSwgYTEwLCBhMTEsIGExMiwgYTEzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgdChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2LCBhNywgYTgsIGE5LCBhMTAsIGExMSwgYTEyLCBhMTMpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlIDE0OlxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4LCBhOSwgYTEwLCBhMTEsIGExMiwgYTEzLCBhMTQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyB0KGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIsIGExMywgYTE0KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAxNTpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIsIGExMywgYTE0LCBhMTUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyB0KGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIsIGExMywgYTE0LCBhMTUpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlIDE2OlxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4LCBhOSwgYTEwLCBhMTEsIGExMiwgYTEzLCBhMTQsIGExNSwgYTE2KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgdChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2LCBhNywgYTgsIGE5LCBhMTAsIGExMSwgYTEyLCBhMTMsIGExNCwgYTE1LCBhMTYpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlIDE3OlxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4LCBhOSwgYTEwLCBhMTEsIGExMiwgYTEzLCBhMTQsIGExNSwgYTE2LCBhMTcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyB0KGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIsIGExMywgYTE0LCBhMTUsIGExNiwgYTE3KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgY2FzZSAxODpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIsIGExMywgYTE0LCBhMTUsIGExNiwgYTE3LCBhMTgpIHsgcmV0dXJuIG5ldyB0KGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIsIGExMywgYTE0LCBhMTUsIGExNiwgYTE3LCBhMTgpOyB9O1xuICAgICAgICAgICAgY2FzZSAxOTpcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGExLCBhMiwgYTMsIGE0LCBhNSwgYTYsIGE3LCBhOCwgYTksIGExMCwgYTExLCBhMTIsIGExMywgYTE0LCBhMTUsIGExNiwgYTE3LCBhMTgsIGExOSkgeyByZXR1cm4gbmV3IHQoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4LCBhOSwgYTEwLCBhMTEsIGExMiwgYTEzLCBhMTQsIGExNSwgYTE2LCBhMTcsIGExOCwgYTE5KTsgfTtcbiAgICAgICAgICAgIGNhc2UgMjA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhMSwgYTIsIGEzLCBhNCwgYTUsIGE2LCBhNywgYTgsIGE5LCBhMTAsIGExMSwgYTEyLCBhMTMsIGExNCwgYTE1LCBhMTYsIGExNywgYTE4LCBhMTksIGEyMCkgeyByZXR1cm4gbmV3IHQoYTEsIGEyLCBhMywgYTQsIGE1LCBhNiwgYTcsIGE4LCBhOSwgYTEwLCBhMTEsIGExMiwgYTEzLCBhMTQsIGExNSwgYTE2LCBhMTcsIGExOCwgYTE5LCBhMjApOyB9O1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjcmVhdGUgYSBmYWN0b3J5IGZvciAnXCIgKyBsYW5nXzEuc3RyaW5naWZ5KHQpICsgXCInIGJlY2F1c2UgaXRzIGNvbnN0cnVjdG9yIGhhcyBtb3JlIHRoYW4gMjAgYXJndW1lbnRzXCIpO1xuICAgIH07XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIFJlZmxlY3Rpb25DYXBhYmlsaXRpZXMucHJvdG90eXBlLl96aXBUeXBlc0FuZEFubm90YXRpb25zID0gZnVuY3Rpb24gKHBhcmFtVHlwZXMsIHBhcmFtQW5ub3RhdGlvbnMpIHtcbiAgICAgICAgdmFyIHJlc3VsdDtcbiAgICAgICAgaWYgKHR5cGVvZiBwYXJhbVR5cGVzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmVzdWx0ID0gbmV3IEFycmF5KHBhcmFtQW5ub3RhdGlvbnMubGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IG5ldyBBcnJheShwYXJhbVR5cGVzLmxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZXN1bHQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIC8vIFRTIG91dHB1dHMgT2JqZWN0IGZvciBwYXJhbWV0ZXJzIHdpdGhvdXQgdHlwZXMsIHdoaWxlIFRyYWNldXIgb21pdHNcbiAgICAgICAgICAgIC8vIHRoZSBhbm5vdGF0aW9ucy4gRm9yIG5vdyB3ZSBwcmVzZXJ2ZSB0aGUgVHJhY2V1ciBiZWhhdmlvciB0byBhaWRcbiAgICAgICAgICAgIC8vIG1pZ3JhdGlvbiwgYnV0IHRoaXMgY2FuIGJlIHJldmlzaXRlZC5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgcGFyYW1UeXBlcyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICByZXN1bHRbaV0gPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHBhcmFtVHlwZXNbaV0gIT0gT2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W2ldID0gW3BhcmFtVHlwZXNbaV1dO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W2ldID0gW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobGFuZ18xLmlzUHJlc2VudChwYXJhbUFubm90YXRpb25zKSAmJiBsYW5nXzEuaXNQcmVzZW50KHBhcmFtQW5ub3RhdGlvbnNbaV0pKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W2ldID0gcmVzdWx0W2ldLmNvbmNhdChwYXJhbUFubm90YXRpb25zW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG4gICAgUmVmbGVjdGlvbkNhcGFiaWxpdGllcy5wcm90b3R5cGUucGFyYW1ldGVycyA9IGZ1bmN0aW9uICh0eXBlT3JGdW5jKSB7XG4gICAgICAgIC8vIC8vIFByZWZlciB0aGUgZGlyZWN0IEFQSS5cbiAgICAgICAgLy8gaWYgKGlzUHJlc2VudCgoPGFueT50eXBlT3JGdW5jKS5wYXJhbWV0ZXJzKSkge1xuICAgICAgICAvLyAgIHJldHVybiAoPGFueT50eXBlT3JGdW5jKS5wYXJhbWV0ZXJzO1xuICAgICAgICAvLyB9XG4gICAgICAgIGlmIChpc1JlZmxlY3RNZXRhZGF0YSh0aGlzLl9yZWZsZWN0KSkge1xuICAgICAgICAgICAgLy8gZ2V0IHBhcmFtZXRlciBjcmVhdGVkIHdpdGggQEluamVjdCgpXG4gICAgICAgICAgICB2YXIgcGFyYW1Bbm5vdGF0aW9ucyA9IHRoaXMuX3JlZmxlY3QuZ2V0TWV0YWRhdGEoZXhwb3J0cy5QQVJBTV9NRVRBX0tFWSwgdHlwZU9yRnVuYyk7XG4gICAgICAgICAgICAvLyBnZXQgcGFyYW1ldGVyIGNyZWF0ZWQgdmlhIFRTIHR5cGUgYW5ub3RhdGlvbnNcbiAgICAgICAgICAgIHZhciBwYXJhbVR5cGVzID0gdGhpcy5fcmVmbGVjdC5nZXRNZXRhZGF0YShleHBvcnRzLlBBUkFNX1JFRkxFQ1RfTUVUQV9LRVksIHR5cGVPckZ1bmMpO1xuICAgICAgICAgICAgaWYgKGxhbmdfMS5pc1ByZXNlbnQocGFyYW1UeXBlcykgfHwgbGFuZ18xLmlzUHJlc2VudChwYXJhbUFubm90YXRpb25zKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl96aXBUeXBlc0FuZEFubm90YXRpb25zKHBhcmFtVHlwZXMsIHBhcmFtQW5ub3RhdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFRoZSBhcnJheSBoYXMgdG8gYmUgZmlsbGVkIHdpdGggYHVuZGVmaW5lZGAgYmVjYXVzZSBob2xlcyB3b3VsZCBiZSBza2lwcGVkIGJ5IGBzb21lYFxuICAgICAgICB2YXIgcGFyYW1ldGVycyA9IG5ldyBBcnJheSh0eXBlT3JGdW5jLmxlbmd0aCk7XG4gICAgICAgIGNvbGxlY3Rpb25zXzEuTGlzdFdyYXBwZXIuZmlsbChwYXJhbWV0ZXJzLCB1bmRlZmluZWQpO1xuICAgICAgICAvLyBwYXJhbWV0ZXJzLmZpbGwodW5kZWZpbmVkKTtcbiAgICAgICAgcmV0dXJuIHBhcmFtZXRlcnM7XG4gICAgfTtcbiAgICBSZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnByb3RvdHlwZS5yYXdQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKHR5cGVPckZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlZmxlY3QuZ2V0TWV0YWRhdGEoZXhwb3J0cy5QQVJBTV9NRVRBX0tFWSwgdHlwZU9yRnVuYyk7XG4gICAgfTtcbiAgICBSZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnByb3RvdHlwZS5yZWdpc3RlclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAocGFyYW1ldGVycywgdHlwZSkge1xuICAgICAgICB0aGlzLl9yZWZsZWN0LmRlZmluZU1ldGFkYXRhKGV4cG9ydHMuUEFSQU1fTUVUQV9LRVksIHBhcmFtZXRlcnMsIHR5cGUpO1xuICAgIH07XG4gICAgUmVmbGVjdGlvbkNhcGFiaWxpdGllcy5wcm90b3R5cGUuYW5ub3RhdGlvbnMgPSBmdW5jdGlvbiAodHlwZU9yRnVuYykge1xuICAgICAgICAvLyAvLyBQcmVmZXIgdGhlIGRpcmVjdCBBUEkuXG4gICAgICAgIC8vIGlmIChpc1ByZXNlbnQoKDxhbnk+dHlwZU9yRnVuYykuYW5ub3RhdGlvbnMpKSB7XG4gICAgICAgIC8vICAgdmFyIGFubm90YXRpb25zID0gKDxhbnk+dHlwZU9yRnVuYykuYW5ub3RhdGlvbnM7XG4gICAgICAgIC8vICAgaWYgKGlzRnVuY3Rpb24oYW5ub3RhdGlvbnMpICYmIGFubm90YXRpb25zLmFubm90YXRpb25zKSB7XG4gICAgICAgIC8vICAgICBhbm5vdGF0aW9ucyA9IGFubm90YXRpb25zLmFubm90YXRpb25zO1xuICAgICAgICAvLyAgIH1cbiAgICAgICAgLy8gICByZXR1cm4gYW5ub3RhdGlvbnM7XG4gICAgICAgIC8vIH1cbiAgICAgICAgaWYgKGlzUmVmbGVjdE1ldGFkYXRhKHRoaXMuX3JlZmxlY3QpKSB7XG4gICAgICAgICAgICB2YXIgYW5ub3RhdGlvbnMgPSB0aGlzLl9yZWZsZWN0LmdldE1ldGFkYXRhKGV4cG9ydHMuQ0xBU1NfTUVUQV9LRVksIHR5cGVPckZ1bmMpO1xuICAgICAgICAgICAgaWYgKGxhbmdfMS5pc1ByZXNlbnQoYW5ub3RhdGlvbnMpKVxuICAgICAgICAgICAgICAgIHJldHVybiBhbm5vdGF0aW9ucztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW107XG4gICAgfTtcbiAgICBSZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnByb3RvdHlwZS5vd25Bbm5vdGF0aW9ucyA9IGZ1bmN0aW9uICh0eXBlT3JGdW5jKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWZsZWN0LmdldE93bk1ldGFkYXRhKGV4cG9ydHMuQ0xBU1NfTUVUQV9LRVksIHR5cGVPckZ1bmMpO1xuICAgIH07XG4gICAgUmVmbGVjdGlvbkNhcGFiaWxpdGllcy5wcm90b3R5cGUucmVnaXN0ZXJBbm5vdGF0aW9ucyA9IGZ1bmN0aW9uIChhbm5vdGF0aW9ucywgdHlwZU9yRnVuYykge1xuICAgICAgICB0aGlzLl9yZWZsZWN0LmRlZmluZU1ldGFkYXRhKGV4cG9ydHMuQ0xBU1NfTUVUQV9LRVksIGFubm90YXRpb25zLCB0eXBlT3JGdW5jKTtcbiAgICB9O1xuICAgIFJlZmxlY3Rpb25DYXBhYmlsaXRpZXMucHJvdG90eXBlLnByb3BNZXRhZGF0YSA9IGZ1bmN0aW9uICh0eXBlT3JGdW5jKSB7XG4gICAgICAgIC8vIC8vIFByZWZlciB0aGUgZGlyZWN0IEFQSS5cbiAgICAgICAgLy8gaWYgKGlzUHJlc2VudCgoPGFueT50eXBlT3JGdW5jKS5wcm9wTWV0YWRhdGEpKSB7XG4gICAgICAgIC8vICAgdmFyIHByb3BNZXRhZGF0YSA9ICg8YW55PnR5cGVPckZ1bmMpLnByb3BNZXRhZGF0YTtcbiAgICAgICAgLy8gICBpZiAoaXNGdW5jdGlvbihwcm9wTWV0YWRhdGEpICYmIHByb3BNZXRhZGF0YS5wcm9wTWV0YWRhdGEpIHtcbiAgICAgICAgLy8gICAgIHByb3BNZXRhZGF0YSA9IHByb3BNZXRhZGF0YS5wcm9wTWV0YWRhdGE7XG4gICAgICAgIC8vICAgfVxuICAgICAgICAvLyAgIHJldHVybiBwcm9wTWV0YWRhdGE7XG4gICAgICAgIC8vIH1cbiAgICAgICAgaWYgKGlzUmVmbGVjdE1ldGFkYXRhKHRoaXMuX3JlZmxlY3QpKSB7XG4gICAgICAgICAgICB2YXIgcHJvcE1ldGFkYXRhID0gdGhpcy5fcmVmbGVjdC5nZXRNZXRhZGF0YShleHBvcnRzLlBST1BfTUVUQV9LRVksIHR5cGVPckZ1bmMpO1xuICAgICAgICAgICAgaWYgKGxhbmdfMS5pc1ByZXNlbnQocHJvcE1ldGFkYXRhKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcE1ldGFkYXRhO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7fTtcbiAgICB9O1xuICAgIFJlZmxlY3Rpb25DYXBhYmlsaXRpZXMucHJvdG90eXBlLm93blByb3BNZXRhZGF0YSA9IGZ1bmN0aW9uICh0eXBlT3JGdW5jKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWZsZWN0LmdldE93bk1ldGFkYXRhKGV4cG9ydHMuUFJPUF9NRVRBX0tFWSwgdHlwZU9yRnVuYyk7XG4gICAgfTtcbiAgICBSZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnByb3RvdHlwZS5yZWdpc3RlclByb3BNZXRhZGF0YSA9IGZ1bmN0aW9uIChwcm9wTWV0YWRhdGEsIHR5cGVPckZ1bmMpIHtcbiAgICAgICAgdGhpcy5fcmVmbGVjdC5kZWZpbmVNZXRhZGF0YShleHBvcnRzLlBST1BfTUVUQV9LRVksIHByb3BNZXRhZGF0YSwgdHlwZU9yRnVuYyk7XG4gICAgfTtcbiAgICBSZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnByb3RvdHlwZS5yZWdpc3RlckRvd25ncmFkZWROZzJDb21wb25lbnROYW1lID0gZnVuY3Rpb24gKGNvbXBvbmVudE5hbWUsIHR5cGVPckZ1bmMpIHtcbiAgICAgICAgdGhpcy5fcmVmbGVjdC5kZWZpbmVNZXRhZGF0YShleHBvcnRzLkRPV05HUkFERURfQ09NUE9ORU5UX05BTUVfS0VZLCBjb21wb25lbnROYW1lLCB0eXBlT3JGdW5jKTtcbiAgICB9O1xuICAgIFJlZmxlY3Rpb25DYXBhYmlsaXRpZXMucHJvdG90eXBlLmRvd25ncmFkZWROZzJDb21wb25lbnROYW1lID0gZnVuY3Rpb24gKHR5cGVPckZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlZmxlY3QuZ2V0T3duTWV0YWRhdGEoZXhwb3J0cy5ET1dOR1JBREVEX0NPTVBPTkVOVF9OQU1FX0tFWSwgdHlwZU9yRnVuYyk7XG4gICAgfTtcbiAgICBSZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnByb3RvdHlwZS5pbnRlcmZhY2VzID0gZnVuY3Rpb24gKHR5cGUpIHtcbiAgICAgICAgLy8gdGhyb3cgbmV3IEJhc2VFeGNlcHRpb24oXCJKYXZhU2NyaXB0IGRvZXMgbm90IHN1cHBvcnQgaW50ZXJmYWNlc1wiKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdKYXZhU2NyaXB0IGRvZXMgbm90IHN1cHBvcnQgaW50ZXJmYWNlcycpO1xuICAgIH07XG4gICAgUmVmbGVjdGlvbkNhcGFiaWxpdGllcy5wcm90b3R5cGUuZ2V0dGVyID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIG5ldyBGdW5jdGlvbignbycsICdyZXR1cm4gby4nICsgbmFtZSArICc7Jyk7IH07XG4gICAgUmVmbGVjdGlvbkNhcGFiaWxpdGllcy5wcm90b3R5cGUuc2V0dGVyID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGdW5jdGlvbignbycsICd2JywgJ3JldHVybiBvLicgKyBuYW1lICsgJyA9IHY7Jyk7XG4gICAgfTtcbiAgICBSZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnByb3RvdHlwZS5tZXRob2QgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICB2YXIgZnVuY3Rpb25Cb2R5ID0gXCJpZiAoIW8uXCIgKyBuYW1lICsgXCIpIHRocm93IG5ldyBFcnJvcignXFxcIlwiICsgbmFtZSArIFwiXFxcIiBpcyB1bmRlZmluZWQnKTtcXG4gICAgICAgIHJldHVybiBvLlwiICsgbmFtZSArIFwiLmFwcGx5KG8sIGFyZ3MpO1wiO1xuICAgICAgICByZXR1cm4gbmV3IEZ1bmN0aW9uKCdvJywgJ2FyZ3MnLCBmdW5jdGlvbkJvZHkpO1xuICAgIH07XG4gICAgcmV0dXJuIFJlZmxlY3Rpb25DYXBhYmlsaXRpZXM7XG59KCkpO1xuZXhwb3J0cy5SZWZsZWN0aW9uQ2FwYWJpbGl0aWVzID0gUmVmbGVjdGlvbkNhcGFiaWxpdGllcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZmxlY3Rpb25fY2FwYWJpbGl0aWVzLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9yZWZsZWN0aW9uL3JlZmxlY3Rpb25fY2FwYWJpbGl0aWVzLmpzXG4vLyBtb2R1bGUgaWQgPSA1OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 60 */
/* unknown exports provided */
/* all exports used */
/*!********************************************************!*\
  !*** ./~/ng-metadata/src/core/reflection/reflector.js ***!
  \********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar reflector_reader_1 = __webpack_require__(/*! ./reflector_reader */ 61);\n/**\n * Reflective information about a symbol, including annotations, interfaces, and other metadata.\n */\nvar ReflectionInfo = (function () {\n    function ReflectionInfo(annotations, parameters, factory, interfaces, propMetadata) {\n        this.annotations = annotations;\n        this.parameters = parameters;\n        this.factory = factory;\n        this.interfaces = interfaces;\n        this.propMetadata = propMetadata;\n    }\n    return ReflectionInfo;\n}());\nexports.ReflectionInfo = ReflectionInfo;\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function (_super) {\n    __extends(Reflector, _super);\n    function Reflector(reflectionCapabilities) {\n        var _this = _super.call(this) || this;\n        // this._usedKeys = null;\n        _this.reflectionCapabilities = reflectionCapabilities;\n        return _this;\n    }\n    Reflector.prototype.isReflectionEnabled = function () { return this.reflectionCapabilities.isReflectionEnabled(); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        // // get cached\n        // if (this._injectableInfo.has(typeOrFunc)) {\n        //   var res = this._getReflectionInfo(typeOrFunc).parameters;\n        //   return isPresent(res) ? res : [];\n        // } else {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n        // }\n    };\n    Reflector.prototype.rawParameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.rawParameters(typeOrFunc);\n    };\n    Reflector.prototype.registerParameters = function (parameters, typeOrFunc) {\n        this.reflectionCapabilities.registerParameters(parameters, typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        // // get cached\n        // if (this._injectableInfo.has(typeOrFunc)) {\n        //   var res = this._getReflectionInfo(typeOrFunc).annotations;\n        //   return isPresent(res) ? res : [];\n        // } else {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n        // }\n    };\n    Reflector.prototype.ownAnnotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.ownAnnotations(typeOrFunc);\n    };\n    Reflector.prototype.registerAnnotations = function (parameters, typeOrFunc) {\n        this.reflectionCapabilities.registerAnnotations(parameters, typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        // // get cached\n        // if (this._injectableInfo.has(typeOrFunc)) {\n        //   var res = this._getReflectionInfo(typeOrFunc).propMetadata;\n        //   return isPresent(res) ? res : {};\n        // } else {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        // }\n    };\n    Reflector.prototype.ownPropMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.ownPropMetadata(typeOrFunc);\n    };\n    Reflector.prototype.registerPropMetadata = function (parameters, typeOrFunc) {\n        this.reflectionCapabilities.registerPropMetadata(parameters, typeOrFunc);\n    };\n    Reflector.prototype.registerDowngradedNg2ComponentName = function (componentName, typeOrFunc) {\n        this.reflectionCapabilities.registerDowngradedNg2ComponentName(componentName, typeOrFunc);\n    };\n    Reflector.prototype.downgradedNg2ComponentName = function (typeOrFunc) {\n        return this.reflectionCapabilities.downgradedNg2ComponentName(typeOrFunc);\n    };\n    /** @internal */\n    Reflector.prototype._getReflectionInfo = function (typeOrFunc) {\n        /*if (isPresent(this._usedKeys)) {\n         this._usedKeys.add(typeOrFunc);\n         }\n         return this._injectableInfo.get(typeOrFunc);*/\n    };\n    /** @internal */\n    Reflector.prototype._containsReflectionInfo = function (typeOrFunc) { };\n    return Reflector;\n}(reflector_reader_1.ReflectorReader));\nexports.Reflector = Reflector;\n//# sourceMappingURL=reflector.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3JlZmxlY3Rpb24vcmVmbGVjdG9yLmpzPzgxZmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07XG4gICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xufTtcbnZhciByZWZsZWN0b3JfcmVhZGVyXzEgPSByZXF1aXJlKFwiLi9yZWZsZWN0b3JfcmVhZGVyXCIpO1xuLyoqXG4gKiBSZWZsZWN0aXZlIGluZm9ybWF0aW9uIGFib3V0IGEgc3ltYm9sLCBpbmNsdWRpbmcgYW5ub3RhdGlvbnMsIGludGVyZmFjZXMsIGFuZCBvdGhlciBtZXRhZGF0YS5cbiAqL1xudmFyIFJlZmxlY3Rpb25JbmZvID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZWZsZWN0aW9uSW5mbyhhbm5vdGF0aW9ucywgcGFyYW1ldGVycywgZmFjdG9yeSwgaW50ZXJmYWNlcywgcHJvcE1ldGFkYXRhKSB7XG4gICAgICAgIHRoaXMuYW5ub3RhdGlvbnMgPSBhbm5vdGF0aW9ucztcbiAgICAgICAgdGhpcy5wYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICAgICAgdGhpcy5mYWN0b3J5ID0gZmFjdG9yeTtcbiAgICAgICAgdGhpcy5pbnRlcmZhY2VzID0gaW50ZXJmYWNlcztcbiAgICAgICAgdGhpcy5wcm9wTWV0YWRhdGEgPSBwcm9wTWV0YWRhdGE7XG4gICAgfVxuICAgIHJldHVybiBSZWZsZWN0aW9uSW5mbztcbn0oKSk7XG5leHBvcnRzLlJlZmxlY3Rpb25JbmZvID0gUmVmbGVjdGlvbkluZm87XG4vKipcbiAqIFByb3ZpZGVzIGFjY2VzcyB0byByZWZsZWN0aW9uIGRhdGEgYWJvdXQgc3ltYm9scy4gVXNlZCBpbnRlcm5hbGx5IGJ5IEFuZ3VsYXJcbiAqIHRvIHBvd2VyIGRlcGVuZGVuY3kgaW5qZWN0aW9uIGFuZCBjb21waWxhdGlvbi5cbiAqL1xudmFyIFJlZmxlY3RvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFJlZmxlY3RvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBSZWZsZWN0b3IocmVmbGVjdGlvbkNhcGFiaWxpdGllcykge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKSB8fCB0aGlzO1xuICAgICAgICAvLyB0aGlzLl91c2VkS2V5cyA9IG51bGw7XG4gICAgICAgIF90aGlzLnJlZmxlY3Rpb25DYXBhYmlsaXRpZXMgPSByZWZsZWN0aW9uQ2FwYWJpbGl0aWVzO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIFJlZmxlY3Rvci5wcm90b3R5cGUuaXNSZWZsZWN0aW9uRW5hYmxlZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMucmVmbGVjdGlvbkNhcGFiaWxpdGllcy5pc1JlZmxlY3Rpb25FbmFibGVkKCk7IH07XG4gICAgUmVmbGVjdG9yLnByb3RvdHlwZS5wYXJhbWV0ZXJzID0gZnVuY3Rpb24gKHR5cGVPckZ1bmMpIHtcbiAgICAgICAgLy8gLy8gZ2V0IGNhY2hlZFxuICAgICAgICAvLyBpZiAodGhpcy5faW5qZWN0YWJsZUluZm8uaGFzKHR5cGVPckZ1bmMpKSB7XG4gICAgICAgIC8vICAgdmFyIHJlcyA9IHRoaXMuX2dldFJlZmxlY3Rpb25JbmZvKHR5cGVPckZ1bmMpLnBhcmFtZXRlcnM7XG4gICAgICAgIC8vICAgcmV0dXJuIGlzUHJlc2VudChyZXMpID8gcmVzIDogW107XG4gICAgICAgIC8vIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlZmxlY3Rpb25DYXBhYmlsaXRpZXMucGFyYW1ldGVycyh0eXBlT3JGdW5jKTtcbiAgICAgICAgLy8gfVxuICAgIH07XG4gICAgUmVmbGVjdG9yLnByb3RvdHlwZS5yYXdQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKHR5cGVPckZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVmbGVjdGlvbkNhcGFiaWxpdGllcy5yYXdQYXJhbWV0ZXJzKHR5cGVPckZ1bmMpO1xuICAgIH07XG4gICAgUmVmbGVjdG9yLnByb3RvdHlwZS5yZWdpc3RlclBhcmFtZXRlcnMgPSBmdW5jdGlvbiAocGFyYW1ldGVycywgdHlwZU9yRnVuYykge1xuICAgICAgICB0aGlzLnJlZmxlY3Rpb25DYXBhYmlsaXRpZXMucmVnaXN0ZXJQYXJhbWV0ZXJzKHBhcmFtZXRlcnMsIHR5cGVPckZ1bmMpO1xuICAgIH07XG4gICAgUmVmbGVjdG9yLnByb3RvdHlwZS5hbm5vdGF0aW9ucyA9IGZ1bmN0aW9uICh0eXBlT3JGdW5jKSB7XG4gICAgICAgIC8vIC8vIGdldCBjYWNoZWRcbiAgICAgICAgLy8gaWYgKHRoaXMuX2luamVjdGFibGVJbmZvLmhhcyh0eXBlT3JGdW5jKSkge1xuICAgICAgICAvLyAgIHZhciByZXMgPSB0aGlzLl9nZXRSZWZsZWN0aW9uSW5mbyh0eXBlT3JGdW5jKS5hbm5vdGF0aW9ucztcbiAgICAgICAgLy8gICByZXR1cm4gaXNQcmVzZW50KHJlcykgPyByZXMgOiBbXTtcbiAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVmbGVjdGlvbkNhcGFiaWxpdGllcy5hbm5vdGF0aW9ucyh0eXBlT3JGdW5jKTtcbiAgICAgICAgLy8gfVxuICAgIH07XG4gICAgUmVmbGVjdG9yLnByb3RvdHlwZS5vd25Bbm5vdGF0aW9ucyA9IGZ1bmN0aW9uICh0eXBlT3JGdW5jKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlZmxlY3Rpb25DYXBhYmlsaXRpZXMub3duQW5ub3RhdGlvbnModHlwZU9yRnVuYyk7XG4gICAgfTtcbiAgICBSZWZsZWN0b3IucHJvdG90eXBlLnJlZ2lzdGVyQW5ub3RhdGlvbnMgPSBmdW5jdGlvbiAocGFyYW1ldGVycywgdHlwZU9yRnVuYykge1xuICAgICAgICB0aGlzLnJlZmxlY3Rpb25DYXBhYmlsaXRpZXMucmVnaXN0ZXJBbm5vdGF0aW9ucyhwYXJhbWV0ZXJzLCB0eXBlT3JGdW5jKTtcbiAgICB9O1xuICAgIFJlZmxlY3Rvci5wcm90b3R5cGUucHJvcE1ldGFkYXRhID0gZnVuY3Rpb24gKHR5cGVPckZ1bmMpIHtcbiAgICAgICAgLy8gLy8gZ2V0IGNhY2hlZFxuICAgICAgICAvLyBpZiAodGhpcy5faW5qZWN0YWJsZUluZm8uaGFzKHR5cGVPckZ1bmMpKSB7XG4gICAgICAgIC8vICAgdmFyIHJlcyA9IHRoaXMuX2dldFJlZmxlY3Rpb25JbmZvKHR5cGVPckZ1bmMpLnByb3BNZXRhZGF0YTtcbiAgICAgICAgLy8gICByZXR1cm4gaXNQcmVzZW50KHJlcykgPyByZXMgOiB7fTtcbiAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVmbGVjdGlvbkNhcGFiaWxpdGllcy5wcm9wTWV0YWRhdGEodHlwZU9yRnVuYyk7XG4gICAgICAgIC8vIH1cbiAgICB9O1xuICAgIFJlZmxlY3Rvci5wcm90b3R5cGUub3duUHJvcE1ldGFkYXRhID0gZnVuY3Rpb24gKHR5cGVPckZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVmbGVjdGlvbkNhcGFiaWxpdGllcy5vd25Qcm9wTWV0YWRhdGEodHlwZU9yRnVuYyk7XG4gICAgfTtcbiAgICBSZWZsZWN0b3IucHJvdG90eXBlLnJlZ2lzdGVyUHJvcE1ldGFkYXRhID0gZnVuY3Rpb24gKHBhcmFtZXRlcnMsIHR5cGVPckZ1bmMpIHtcbiAgICAgICAgdGhpcy5yZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnJlZ2lzdGVyUHJvcE1ldGFkYXRhKHBhcmFtZXRlcnMsIHR5cGVPckZ1bmMpO1xuICAgIH07XG4gICAgUmVmbGVjdG9yLnByb3RvdHlwZS5yZWdpc3RlckRvd25ncmFkZWROZzJDb21wb25lbnROYW1lID0gZnVuY3Rpb24gKGNvbXBvbmVudE5hbWUsIHR5cGVPckZ1bmMpIHtcbiAgICAgICAgdGhpcy5yZWZsZWN0aW9uQ2FwYWJpbGl0aWVzLnJlZ2lzdGVyRG93bmdyYWRlZE5nMkNvbXBvbmVudE5hbWUoY29tcG9uZW50TmFtZSwgdHlwZU9yRnVuYyk7XG4gICAgfTtcbiAgICBSZWZsZWN0b3IucHJvdG90eXBlLmRvd25ncmFkZWROZzJDb21wb25lbnROYW1lID0gZnVuY3Rpb24gKHR5cGVPckZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVmbGVjdGlvbkNhcGFiaWxpdGllcy5kb3duZ3JhZGVkTmcyQ29tcG9uZW50TmFtZSh0eXBlT3JGdW5jKTtcbiAgICB9O1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBSZWZsZWN0b3IucHJvdG90eXBlLl9nZXRSZWZsZWN0aW9uSW5mbyA9IGZ1bmN0aW9uICh0eXBlT3JGdW5jKSB7XG4gICAgICAgIC8qaWYgKGlzUHJlc2VudCh0aGlzLl91c2VkS2V5cykpIHtcbiAgICAgICAgIHRoaXMuX3VzZWRLZXlzLmFkZCh0eXBlT3JGdW5jKTtcbiAgICAgICAgIH1cbiAgICAgICAgIHJldHVybiB0aGlzLl9pbmplY3RhYmxlSW5mby5nZXQodHlwZU9yRnVuYyk7Ki9cbiAgICB9O1xuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBSZWZsZWN0b3IucHJvdG90eXBlLl9jb250YWluc1JlZmxlY3Rpb25JbmZvID0gZnVuY3Rpb24gKHR5cGVPckZ1bmMpIHsgfTtcbiAgICByZXR1cm4gUmVmbGVjdG9yO1xufShyZWZsZWN0b3JfcmVhZGVyXzEuUmVmbGVjdG9yUmVhZGVyKSk7XG5leHBvcnRzLlJlZmxlY3RvciA9IFJlZmxlY3Rvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZmxlY3Rvci5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2NvcmUvcmVmbGVjdGlvbi9yZWZsZWN0b3IuanNcbi8vIG1vZHVsZSBpZCA9IDYwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 61 */
/* unknown exports provided */
/* all exports used */
/*!***************************************************************!*\
  !*** ./~/ng-metadata/src/core/reflection/reflector_reader.js ***!
  \***************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Provides read-only access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar ReflectorReader = (function () {\n    function ReflectorReader() {\n    }\n    return ReflectorReader;\n}());\nexports.ReflectorReader = ReflectorReader;\n//# sourceMappingURL=reflector_reader.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3JlZmxlY3Rpb24vcmVmbGVjdG9yX3JlYWRlci5qcz9jMDVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBQcm92aWRlcyByZWFkLW9ubHkgYWNjZXNzIHRvIHJlZmxlY3Rpb24gZGF0YSBhYm91dCBzeW1ib2xzLiBVc2VkIGludGVybmFsbHkgYnkgQW5ndWxhclxuICogdG8gcG93ZXIgZGVwZW5kZW5jeSBpbmplY3Rpb24gYW5kIGNvbXBpbGF0aW9uLlxuICovXG52YXIgUmVmbGVjdG9yUmVhZGVyID0gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZWZsZWN0b3JSZWFkZXIoKSB7XG4gICAgfVxuICAgIHJldHVybiBSZWZsZWN0b3JSZWFkZXI7XG59KCkpO1xuZXhwb3J0cy5SZWZsZWN0b3JSZWFkZXIgPSBSZWZsZWN0b3JSZWFkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWZsZWN0b3JfcmVhZGVyLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvY29yZS9yZWZsZWN0aW9uL3JlZmxlY3Rvcl9yZWFkZXIuanNcbi8vIG1vZHVsZSBpZCA9IDYxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 62 */
/* unknown exports provided */
/* all exports used */
/*!****************************************!*\
  !*** ./~/ng-metadata/src/core/util.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./util/decorators */ 9));\nvar bundler_1 = __webpack_require__(/*! ./util/bundler */ 22);\nexports.bundle = bundler_1.bundle;\n//# sourceMappingURL=util.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3V0aWwuanM/MzQ2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmZ1bmN0aW9uIF9fZXhwb3J0KG0pIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmICghZXhwb3J0cy5oYXNPd25Qcm9wZXJ0eShwKSkgZXhwb3J0c1twXSA9IG1bcF07XG59XG5fX2V4cG9ydChyZXF1aXJlKFwiLi91dGlsL2RlY29yYXRvcnNcIikpO1xudmFyIGJ1bmRsZXJfMSA9IHJlcXVpcmUoXCIuL3V0aWwvYnVuZGxlclwiKTtcbmV4cG9ydHMuYnVuZGxlID0gYnVuZGxlcl8xLmJ1bmRsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWwuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9jb3JlL3V0aWwuanNcbi8vIG1vZHVsZSBpZCA9IDYyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 63 */
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ./~/ng-metadata/src/facade/facade.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Public API for Facade\n// None :)\n\nvar type_1 = __webpack_require__(/*! ./type */ 26);\nexports.Type = type_1.Type;\nvar async_1 = __webpack_require__(/*! ./async */ 23);\nexports.EventEmitter = async_1.EventEmitter;\n//# sourceMappingURL=facade.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9mYWNhZGUvZmFjYWRlLmpzPzU3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUHVibGljIEFQSSBmb3IgRmFjYWRlXG4vLyBOb25lIDopXG5cInVzZSBzdHJpY3RcIjtcbnZhciB0eXBlXzEgPSByZXF1aXJlKFwiLi90eXBlXCIpO1xuZXhwb3J0cy5UeXBlID0gdHlwZV8xLlR5cGU7XG52YXIgYXN5bmNfMSA9IHJlcXVpcmUoXCIuL2FzeW5jXCIpO1xuZXhwb3J0cy5FdmVudEVtaXR0ZXIgPSBhc3luY18xLkV2ZW50RW1pdHRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZhY2FkZS5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbmctbWV0YWRhdGEvc3JjL2ZhY2FkZS9mYWNhZGUuanNcbi8vIG1vZHVsZSBpZCA9IDYzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 64 */
/* unknown exports provided */
/* all exports used */
/*!***********************************************!*\
  !*** ./~/ng-metadata/src/platform/browser.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar browser_utils_1 = __webpack_require__(/*! ./browser_utils */ 65);\n__export(__webpack_require__(/*! ./title */ 66));\nexports.platformBrowserDynamic = function () {\n    return {\n        bootstrapModule: browser_utils_1.createBootstrapFn(),\n    };\n};\n//# sourceMappingURL=browser.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9wbGF0Zm9ybS9icm93c2VyLmpzPzRkM2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5mdW5jdGlvbiBfX2V4cG9ydChtKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAoIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xufVxudmFyIGJyb3dzZXJfdXRpbHNfMSA9IHJlcXVpcmUoXCIuL2Jyb3dzZXJfdXRpbHNcIik7XG5fX2V4cG9ydChyZXF1aXJlKFwiLi90aXRsZVwiKSk7XG5leHBvcnRzLnBsYXRmb3JtQnJvd3NlckR5bmFtaWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYm9vdHN0cmFwTW9kdWxlOiBicm93c2VyX3V0aWxzXzEuY3JlYXRlQm9vdHN0cmFwRm4oKSxcbiAgICB9O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJyb3dzZXIuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9wbGF0Zm9ybS9icm93c2VyLmpzXG4vLyBtb2R1bGUgaWQgPSA2NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 65 */
/* unknown exports provided */
/* all exports used */
/*!*****************************************************!*\
  !*** ./~/ng-metadata/src/platform/browser_utils.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar lang_1 = __webpack_require__(/*! ../facade/lang */ 0);\nvar bundler_1 = __webpack_require__(/*! ../core/util/bundler */ 22);\nfunction _getAppRoot(element) {\n    if (typeof element === 'string') {\n        return document.querySelector(element);\n    }\n    return element;\n}\nprodModeConfig.$inject = ['$compileProvider', '$httpProvider'];\nfunction prodModeConfig($compileProvider, $httpProvider) {\n    $compileProvider.debugInfoEnabled(false);\n    $httpProvider.useApplyAsync(true);\n}\nfunction createBootstrapFn(bootstrapFn) {\n    if (bootstrapFn === void 0) { bootstrapFn = lang_1.global.angular.bootstrap.bind(lang_1.global.angular); }\n    /**\n     * bootstrap angular app\n     * @param {Type}  NgModule\n     * @param {Array<any>}  providers\n     */\n    return function bootstrapModule(NgModule) {\n        var angular1Module = bundler_1.bundle(NgModule);\n        var angular1ModuleName = angular1Module.name;\n        var strictDi = true;\n        var element = document;\n        if (lang_1.assertionsEnabled()) {\n            console.info('Angular is running in the development mode. Call enableProdMode() to enable the production mode.');\n        }\n        else {\n            lang_1.global.angular.module(angular1ModuleName).config(prodModeConfig);\n        }\n        var appRoot = _getAppRoot(element);\n        lang_1.global.angular.element(document).ready(function () {\n            bootstrapFn(appRoot, [angular1ModuleName], {\n                strictDi: strictDi\n            });\n        });\n    };\n}\nexports.createBootstrapFn = createBootstrapFn;\n//# sourceMappingURL=browser_utils.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9wbGF0Zm9ybS9icm93c2VyX3V0aWxzLmpzPzFmYTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgbGFuZ18xID0gcmVxdWlyZShcIi4uL2ZhY2FkZS9sYW5nXCIpO1xudmFyIGJ1bmRsZXJfMSA9IHJlcXVpcmUoXCIuLi9jb3JlL3V0aWwvYnVuZGxlclwiKTtcbmZ1bmN0aW9uIF9nZXRBcHBSb290KGVsZW1lbnQpIHtcbiAgICBpZiAodHlwZW9mIGVsZW1lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnQpO1xuICAgIH1cbiAgICByZXR1cm4gZWxlbWVudDtcbn1cbnByb2RNb2RlQ29uZmlnLiRpbmplY3QgPSBbJyRjb21waWxlUHJvdmlkZXInLCAnJGh0dHBQcm92aWRlciddO1xuZnVuY3Rpb24gcHJvZE1vZGVDb25maWcoJGNvbXBpbGVQcm92aWRlciwgJGh0dHBQcm92aWRlcikge1xuICAgICRjb21waWxlUHJvdmlkZXIuZGVidWdJbmZvRW5hYmxlZChmYWxzZSk7XG4gICAgJGh0dHBQcm92aWRlci51c2VBcHBseUFzeW5jKHRydWUpO1xufVxuZnVuY3Rpb24gY3JlYXRlQm9vdHN0cmFwRm4oYm9vdHN0cmFwRm4pIHtcbiAgICBpZiAoYm9vdHN0cmFwRm4gPT09IHZvaWQgMCkgeyBib290c3RyYXBGbiA9IGxhbmdfMS5nbG9iYWwuYW5ndWxhci5ib290c3RyYXAuYmluZChsYW5nXzEuZ2xvYmFsLmFuZ3VsYXIpOyB9XG4gICAgLyoqXG4gICAgICogYm9vdHN0cmFwIGFuZ3VsYXIgYXBwXG4gICAgICogQHBhcmFtIHtUeXBlfSAgTmdNb2R1bGVcbiAgICAgKiBAcGFyYW0ge0FycmF5PGFueT59ICBwcm92aWRlcnNcbiAgICAgKi9cbiAgICByZXR1cm4gZnVuY3Rpb24gYm9vdHN0cmFwTW9kdWxlKE5nTW9kdWxlKSB7XG4gICAgICAgIHZhciBhbmd1bGFyMU1vZHVsZSA9IGJ1bmRsZXJfMS5idW5kbGUoTmdNb2R1bGUpO1xuICAgICAgICB2YXIgYW5ndWxhcjFNb2R1bGVOYW1lID0gYW5ndWxhcjFNb2R1bGUubmFtZTtcbiAgICAgICAgdmFyIHN0cmljdERpID0gdHJ1ZTtcbiAgICAgICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudDtcbiAgICAgICAgaWYgKGxhbmdfMS5hc3NlcnRpb25zRW5hYmxlZCgpKSB7XG4gICAgICAgICAgICBjb25zb2xlLmluZm8oJ0FuZ3VsYXIgaXMgcnVubmluZyBpbiB0aGUgZGV2ZWxvcG1lbnQgbW9kZS4gQ2FsbCBlbmFibGVQcm9kTW9kZSgpIHRvIGVuYWJsZSB0aGUgcHJvZHVjdGlvbiBtb2RlLicpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbGFuZ18xLmdsb2JhbC5hbmd1bGFyLm1vZHVsZShhbmd1bGFyMU1vZHVsZU5hbWUpLmNvbmZpZyhwcm9kTW9kZUNvbmZpZyk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGFwcFJvb3QgPSBfZ2V0QXBwUm9vdChlbGVtZW50KTtcbiAgICAgICAgbGFuZ18xLmdsb2JhbC5hbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGJvb3RzdHJhcEZuKGFwcFJvb3QsIFthbmd1bGFyMU1vZHVsZU5hbWVdLCB7XG4gICAgICAgICAgICAgICAgc3RyaWN0RGk6IHN0cmljdERpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlQm9vdHN0cmFwRm4gPSBjcmVhdGVCb290c3RyYXBGbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJyb3dzZXJfdXRpbHMuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L25nLW1ldGFkYXRhL3NyYy9wbGF0Zm9ybS9icm93c2VyX3V0aWxzLmpzXG4vLyBtb2R1bGUgaWQgPSA2NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 66 */
/* unknown exports provided */
/* all exports used */
/*!*********************************************!*\
  !*** ./~/ng-metadata/src/platform/title.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar decorators_1 = __webpack_require__(/*! ../core/di/decorators */ 11);\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular 2 application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * **NOTE:**\n * you need to import this service and register within root component ( root module in Angular 1 terms )\n *\n * ```typescript\n * // index.ts\n *\n * import * as angular from 'angular';\n * import { provide } from 'ng-metadata/core';\n * import { Title } from 'ng-metadata/platform';\n *\n * import { AppComponent} from './app';\n *\n * export AppModule = angular.module('myApp',[])\n *  // we need to register the service manually\n    .service( ...provide( Title ) )\n    .directive( ...provide( AppComponent ))\n * ```\n */\nvar Title = (function () {\n    function Title($document) {\n        this.$document = $document;\n    }\n    /**\n     * Get the title of the current HTML document.\n     * @returns {string}\n     */\n    Title.prototype.getTitle = function () { return this.$document[0].title; };\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    Title.prototype.setTitle = function (newTitle) { this.$document[0].title = newTitle || ''; };\n    return Title;\n}());\nTitle = __decorate([\n    decorators_1.Injectable('Title'),\n    __param(0, decorators_1.Inject('$document')),\n    __metadata(\"design:paramtypes\", [Object])\n], Title);\nexports.Title = Title;\n//# sourceMappingURL=title.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25nLW1ldGFkYXRhL3NyYy9wbGF0Zm9ybS90aXRsZS5qcz8zNTlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xudmFyIF9fbWV0YWRhdGEgPSAodGhpcyAmJiB0aGlzLl9fbWV0YWRhdGEpIHx8IGZ1bmN0aW9uIChrLCB2KSB7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0Lm1ldGFkYXRhID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiBSZWZsZWN0Lm1ldGFkYXRhKGssIHYpO1xufTtcbnZhciBfX3BhcmFtID0gKHRoaXMgJiYgdGhpcy5fX3BhcmFtKSB8fCBmdW5jdGlvbiAocGFyYW1JbmRleCwgZGVjb3JhdG9yKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICh0YXJnZXQsIGtleSkgeyBkZWNvcmF0b3IodGFyZ2V0LCBrZXksIHBhcmFtSW5kZXgpOyB9XG59O1xudmFyIGRlY29yYXRvcnNfMSA9IHJlcXVpcmUoXCIuLi9jb3JlL2RpL2RlY29yYXRvcnNcIik7XG4vKipcbiAqIEEgc2VydmljZSB0aGF0IGNhbiBiZSB1c2VkIHRvIGdldCBhbmQgc2V0IHRoZSB0aXRsZSBvZiBhIGN1cnJlbnQgSFRNTCBkb2N1bWVudC5cbiAqXG4gKiBTaW5jZSBhbiBBbmd1bGFyIDIgYXBwbGljYXRpb24gY2FuJ3QgYmUgYm9vdHN0cmFwcGVkIG9uIHRoZSBlbnRpcmUgSFRNTCBkb2N1bWVudCAoYDxodG1sPmAgdGFnKVxuICogaXQgaXMgbm90IHBvc3NpYmxlIHRvIGJpbmQgdG8gdGhlIGB0ZXh0YCBwcm9wZXJ0eSBvZiB0aGUgYEhUTUxUaXRsZUVsZW1lbnRgIGVsZW1lbnRzXG4gKiAocmVwcmVzZW50aW5nIHRoZSBgPHRpdGxlPmAgdGFnKS4gSW5zdGVhZCwgdGhpcyBzZXJ2aWNlIGNhbiBiZSB1c2VkIHRvIHNldCBhbmQgZ2V0IHRoZSBjdXJyZW50XG4gKiB0aXRsZSB2YWx1ZS5cbiAqXG4gKiAqKk5PVEU6KipcbiAqIHlvdSBuZWVkIHRvIGltcG9ydCB0aGlzIHNlcnZpY2UgYW5kIHJlZ2lzdGVyIHdpdGhpbiByb290IGNvbXBvbmVudCAoIHJvb3QgbW9kdWxlIGluIEFuZ3VsYXIgMSB0ZXJtcyApXG4gKlxuICogYGBgdHlwZXNjcmlwdFxuICogLy8gaW5kZXgudHNcbiAqXG4gKiBpbXBvcnQgKiBhcyBhbmd1bGFyIGZyb20gJ2FuZ3VsYXInO1xuICogaW1wb3J0IHsgcHJvdmlkZSB9IGZyb20gJ25nLW1ldGFkYXRhL2NvcmUnO1xuICogaW1wb3J0IHsgVGl0bGUgfSBmcm9tICduZy1tZXRhZGF0YS9wbGF0Zm9ybSc7XG4gKlxuICogaW1wb3J0IHsgQXBwQ29tcG9uZW50fSBmcm9tICcuL2FwcCc7XG4gKlxuICogZXhwb3J0IEFwcE1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdteUFwcCcsW10pXG4gKiAgLy8gd2UgbmVlZCB0byByZWdpc3RlciB0aGUgc2VydmljZSBtYW51YWxseVxuICAgIC5zZXJ2aWNlKCAuLi5wcm92aWRlKCBUaXRsZSApIClcbiAgICAuZGlyZWN0aXZlKCAuLi5wcm92aWRlKCBBcHBDb21wb25lbnQgKSlcbiAqIGBgYFxuICovXG52YXIgVGl0bGUgPSAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRpdGxlKCRkb2N1bWVudCkge1xuICAgICAgICB0aGlzLiRkb2N1bWVudCA9ICRkb2N1bWVudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSB0aXRsZSBvZiB0aGUgY3VycmVudCBIVE1MIGRvY3VtZW50LlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgVGl0bGUucHJvdG90eXBlLmdldFRpdGxlID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpcy4kZG9jdW1lbnRbMF0udGl0bGU7IH07XG4gICAgLyoqXG4gICAgICogU2V0IHRoZSB0aXRsZSBvZiB0aGUgY3VycmVudCBIVE1MIGRvY3VtZW50LlxuICAgICAqIEBwYXJhbSBuZXdUaXRsZVxuICAgICAqL1xuICAgIFRpdGxlLnByb3RvdHlwZS5zZXRUaXRsZSA9IGZ1bmN0aW9uIChuZXdUaXRsZSkgeyB0aGlzLiRkb2N1bWVudFswXS50aXRsZSA9IG5ld1RpdGxlIHx8ICcnOyB9O1xuICAgIHJldHVybiBUaXRsZTtcbn0oKSk7XG5UaXRsZSA9IF9fZGVjb3JhdGUoW1xuICAgIGRlY29yYXRvcnNfMS5JbmplY3RhYmxlKCdUaXRsZScpLFxuICAgIF9fcGFyYW0oMCwgZGVjb3JhdG9yc18xLkluamVjdCgnJGRvY3VtZW50JykpLFxuICAgIF9fbWV0YWRhdGEoXCJkZXNpZ246cGFyYW10eXBlc1wiLCBbT2JqZWN0XSlcbl0sIFRpdGxlKTtcbmV4cG9ydHMuVGl0bGUgPSBUaXRsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpdGxlLmpzLm1hcFxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9uZy1tZXRhZGF0YS9zcmMvcGxhdGZvcm0vdGl0bGUuanNcbi8vIG1vZHVsZSBpZCA9IDY2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 67 */
/* unknown exports provided */
/* all exports used */
/*!******************************!*\
  !*** ./~/rxjs/Observable.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar root_1 = __webpack_require__(/*! ./util/root */ 17);\nvar toSubscriber_1 = __webpack_require__(/*! ./util/toSubscriber */ 75);\nvar observable_1 = __webpack_require__(/*! ./symbol/observable */ 70);\n/**\n * A representation of any set of values over any amount of time. This the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is  called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\n                PromiseCtor = root_1.root.Rx.config.Promise;\n            }\n            else if (root_1.root.Promise) {\n                PromiseCtor = root_1.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable_1.observable] = function () {\n        return this;\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexports.Observable = Observable;\n//# sourceMappingURL=Observable.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 68 */
/* unknown exports provided */
/* all exports used */
/*!***************************!*\
  !*** ./~/rxjs/Subject.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(/*! ./Observable */ 67);\nvar Subscriber_1 = __webpack_require__(/*! ./Subscriber */ 28);\nvar Subscription_1 = __webpack_require__(/*! ./Subscription */ 15);\nvar ObjectUnsubscribedError_1 = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ 71);\nvar SubjectSubscription_1 = __webpack_require__(/*! ./SubjectSubscription */ 69);\nvar rxSubscriber_1 = __webpack_require__(/*! ./symbol/rxSubscriber */ 16);\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nexports.SubjectSubscriber = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nexports.Subject = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexports.AnonymousSubject = AnonymousSubject;\n//# sourceMappingURL=Subject.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 69 */
/* unknown exports provided */
/* all exports used */
/*!***************************************!*\
  !*** ./~/rxjs/SubjectSubscription.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = __webpack_require__(/*! ./Subscription */ 15);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nexports.SubjectSubscription = SubjectSubscription;\n//# sourceMappingURL=SubjectSubscription.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvU3ViamVjdFN1YnNjcmlwdGlvbi5qcz9kMzUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCBmdW5jdGlvbiAoZCwgYikge1xuICAgIGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdO1xuICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbn07XG52YXIgU3Vic2NyaXB0aW9uXzEgPSByZXF1aXJlKCcuL1N1YnNjcmlwdGlvbicpO1xuLyoqXG4gKiBXZSBuZWVkIHRoaXMgSlNEb2MgY29tbWVudCBmb3IgYWZmZWN0aW5nIEVTRG9jLlxuICogQGlnbm9yZVxuICogQGV4dGVuZHMge0lnbm9yZWR9XG4gKi9cbnZhciBTdWJqZWN0U3Vic2NyaXB0aW9uID0gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoU3ViamVjdFN1YnNjcmlwdGlvbiwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTdWJqZWN0U3Vic2NyaXB0aW9uKHN1YmplY3QsIHN1YnNjcmliZXIpIHtcbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuc3ViamVjdCA9IHN1YmplY3Q7XG4gICAgICAgIHRoaXMuc3Vic2NyaWJlciA9IHN1YnNjcmliZXI7XG4gICAgICAgIHRoaXMuY2xvc2VkID0gZmFsc2U7XG4gICAgfVxuICAgIFN1YmplY3RTdWJzY3JpcHRpb24ucHJvdG90eXBlLnVuc3Vic2NyaWJlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5jbG9zZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsb3NlZCA9IHRydWU7XG4gICAgICAgIHZhciBzdWJqZWN0ID0gdGhpcy5zdWJqZWN0O1xuICAgICAgICB2YXIgb2JzZXJ2ZXJzID0gc3ViamVjdC5vYnNlcnZlcnM7XG4gICAgICAgIHRoaXMuc3ViamVjdCA9IG51bGw7XG4gICAgICAgIGlmICghb2JzZXJ2ZXJzIHx8IG9ic2VydmVycy5sZW5ndGggPT09IDAgfHwgc3ViamVjdC5pc1N0b3BwZWQgfHwgc3ViamVjdC5jbG9zZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3Vic2NyaWJlckluZGV4ID0gb2JzZXJ2ZXJzLmluZGV4T2YodGhpcy5zdWJzY3JpYmVyKTtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIG9ic2VydmVycy5zcGxpY2Uoc3Vic2NyaWJlckluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIFN1YmplY3RTdWJzY3JpcHRpb247XG59KFN1YnNjcmlwdGlvbl8xLlN1YnNjcmlwdGlvbikpO1xuZXhwb3J0cy5TdWJqZWN0U3Vic2NyaXB0aW9uID0gU3ViamVjdFN1YnNjcmlwdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN1YmplY3RTdWJzY3JpcHRpb24uanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvU3ViamVjdFN1YnNjcmlwdGlvbi5qc1xuLy8gbW9kdWxlIGlkID0gNjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 70 */
/* unknown exports provided */
/* all exports used */
/*!*************************************!*\
  !*** ./~/rxjs/symbol/observable.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar root_1 = __webpack_require__(/*! ../util/root */ 17);\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root_1.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n//# sourceMappingURL=observable.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvc3ltYm9sL29ic2VydmFibGUuanM/MWYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciByb290XzEgPSByZXF1aXJlKCcuLi91dGlsL3Jvb3QnKTtcbmZ1bmN0aW9uIGdldFN5bWJvbE9ic2VydmFibGUoY29udGV4dCkge1xuICAgIHZhciAkJG9ic2VydmFibGU7XG4gICAgdmFyIFN5bWJvbCA9IGNvbnRleHQuU3ltYm9sO1xuICAgIGlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGlmIChTeW1ib2wub2JzZXJ2YWJsZSkge1xuICAgICAgICAgICAgJCRvYnNlcnZhYmxlID0gU3ltYm9sLm9ic2VydmFibGU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAkJG9ic2VydmFibGUgPSBTeW1ib2woJ29ic2VydmFibGUnKTtcbiAgICAgICAgICAgIFN5bWJvbC5vYnNlcnZhYmxlID0gJCRvYnNlcnZhYmxlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAkJG9ic2VydmFibGUgPSAnQEBvYnNlcnZhYmxlJztcbiAgICB9XG4gICAgcmV0dXJuICQkb2JzZXJ2YWJsZTtcbn1cbmV4cG9ydHMuZ2V0U3ltYm9sT2JzZXJ2YWJsZSA9IGdldFN5bWJvbE9ic2VydmFibGU7XG5leHBvcnRzLm9ic2VydmFibGUgPSBnZXRTeW1ib2xPYnNlcnZhYmxlKHJvb3RfMS5yb290KTtcbi8qKlxuICogQGRlcHJlY2F0ZWQgdXNlIG9ic2VydmFibGUgaW5zdGVhZFxuICovXG5leHBvcnRzLiQkb2JzZXJ2YWJsZSA9IGV4cG9ydHMub2JzZXJ2YWJsZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ic2VydmFibGUuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvc3ltYm9sL29ic2VydmFibGUuanNcbi8vIG1vZHVsZSBpZCA9IDcwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 71 */
/* unknown exports provided */
/* all exports used */
/*!************************************************!*\
  !*** ./~/rxjs/util/ObjectUnsubscribedError.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC9PYmplY3RVbnN1YnNjcmliZWRFcnJvci5qcz9lNTU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCBmdW5jdGlvbiAoZCwgYikge1xuICAgIGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdO1xuICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbn07XG4vKipcbiAqIEFuIGVycm9yIHRocm93biB3aGVuIGFuIGFjdGlvbiBpcyBpbnZhbGlkIGJlY2F1c2UgdGhlIG9iamVjdCBoYXMgYmVlblxuICogdW5zdWJzY3JpYmVkLlxuICpcbiAqIEBzZWUge0BsaW5rIFN1YmplY3R9XG4gKiBAc2VlIHtAbGluayBCZWhhdmlvclN1YmplY3R9XG4gKlxuICogQGNsYXNzIE9iamVjdFVuc3Vic2NyaWJlZEVycm9yXG4gKi9cbnZhciBPYmplY3RVbnN1YnNjcmliZWRFcnJvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKE9iamVjdFVuc3Vic2NyaWJlZEVycm9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIE9iamVjdFVuc3Vic2NyaWJlZEVycm9yKCkge1xuICAgICAgICB2YXIgZXJyID0gX3N1cGVyLmNhbGwodGhpcywgJ29iamVjdCB1bnN1YnNjcmliZWQnKTtcbiAgICAgICAgdGhpcy5uYW1lID0gZXJyLm5hbWUgPSAnT2JqZWN0VW5zdWJzY3JpYmVkRXJyb3InO1xuICAgICAgICB0aGlzLnN0YWNrID0gZXJyLnN0YWNrO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBlcnIubWVzc2FnZTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdFVuc3Vic2NyaWJlZEVycm9yO1xufShFcnJvcikpO1xuZXhwb3J0cy5PYmplY3RVbnN1YnNjcmliZWRFcnJvciA9IE9iamVjdFVuc3Vic2NyaWJlZEVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T2JqZWN0VW5zdWJzY3JpYmVkRXJyb3IuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvdXRpbC9PYmplY3RVbnN1YnNjcmliZWRFcnJvci5qc1xuLy8gbW9kdWxlIGlkID0gNzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 72 */
/* unknown exports provided */
/* all exports used */
/*!********************************************!*\
  !*** ./~/rxjs/util/UnsubscriptionError.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nexports.UnsubscriptionError = UnsubscriptionError;\n//# sourceMappingURL=UnsubscriptionError.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC9VbnN1YnNjcmlwdGlvbkVycm9yLmpzP2JjOWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07XG4gICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xufTtcbi8qKlxuICogQW4gZXJyb3IgdGhyb3duIHdoZW4gb25lIG9yIG1vcmUgZXJyb3JzIGhhdmUgb2NjdXJyZWQgZHVyaW5nIHRoZVxuICogYHVuc3Vic2NyaWJlYCBvZiBhIHtAbGluayBTdWJzY3JpcHRpb259LlxuICovXG52YXIgVW5zdWJzY3JpcHRpb25FcnJvciA9IChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFVuc3Vic2NyaXB0aW9uRXJyb3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gVW5zdWJzY3JpcHRpb25FcnJvcihlcnJvcnMpIHtcbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMuZXJyb3JzID0gZXJyb3JzO1xuICAgICAgICB2YXIgZXJyID0gRXJyb3IuY2FsbCh0aGlzLCBlcnJvcnMgP1xuICAgICAgICAgICAgZXJyb3JzLmxlbmd0aCArIFwiIGVycm9ycyBvY2N1cnJlZCBkdXJpbmcgdW5zdWJzY3JpcHRpb246XFxuICBcIiArIGVycm9ycy5tYXAoZnVuY3Rpb24gKGVyciwgaSkgeyByZXR1cm4gKChpICsgMSkgKyBcIikgXCIgKyBlcnIudG9TdHJpbmcoKSk7IH0pLmpvaW4oJ1xcbiAgJykgOiAnJyk7XG4gICAgICAgIHRoaXMubmFtZSA9IGVyci5uYW1lID0gJ1Vuc3Vic2NyaXB0aW9uRXJyb3InO1xuICAgICAgICB0aGlzLnN0YWNrID0gZXJyLnN0YWNrO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBlcnIubWVzc2FnZTtcbiAgICB9XG4gICAgcmV0dXJuIFVuc3Vic2NyaXB0aW9uRXJyb3I7XG59KEVycm9yKSk7XG5leHBvcnRzLlVuc3Vic2NyaXB0aW9uRXJyb3IgPSBVbnN1YnNjcmlwdGlvbkVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VW5zdWJzY3JpcHRpb25FcnJvci5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vcnhqcy91dGlsL1Vuc3Vic2NyaXB0aW9uRXJyb3IuanNcbi8vIG1vZHVsZSBpZCA9IDcyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 73 */
/* unknown exports provided */
/* all exports used */
/*!********************************!*\
  !*** ./~/rxjs/util/isArray.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.isArray = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n//# sourceMappingURL=isArray.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC9pc0FycmF5LmpzP2IwZWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLmlzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IChmdW5jdGlvbiAoeCkgeyByZXR1cm4geCAmJiB0eXBlb2YgeC5sZW5ndGggPT09ICdudW1iZXInOyB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzQXJyYXkuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvdXRpbC9pc0FycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSA3M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 74 */
/* unknown exports provided */
/* all exports used */
/*!*********************************!*\
  !*** ./~/rxjs/util/isObject.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nexports.isObject = isObject;\n//# sourceMappingURL=isObject.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC9pc09iamVjdC5qcz9hYTJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuZnVuY3Rpb24gaXNPYmplY3QoeCkge1xuICAgIHJldHVybiB4ICE9IG51bGwgJiYgdHlwZW9mIHggPT09ICdvYmplY3QnO1xufVxuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNPYmplY3QuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvdXRpbC9pc09iamVjdC5qc1xuLy8gbW9kdWxlIGlkID0gNzRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 75 */
/* unknown exports provided */
/* all exports used */
/*!*************************************!*\
  !*** ./~/rxjs/util/toSubscriber.js ***!
  \*************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Subscriber_1 = __webpack_require__(/*! ../Subscriber */ 28);\nvar rxSubscriber_1 = __webpack_require__(/*! ../symbol/rxSubscriber */ 16);\nvar Observer_1 = __webpack_require__(/*! ../Observer */ 27);\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber_1.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer_1.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nexports.toSubscriber = toSubscriber;\n//# sourceMappingURL=toSubscriber.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC90b1N1YnNjcmliZXIuanM/ZjhmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBTdWJzY3JpYmVyXzEgPSByZXF1aXJlKCcuLi9TdWJzY3JpYmVyJyk7XG52YXIgcnhTdWJzY3JpYmVyXzEgPSByZXF1aXJlKCcuLi9zeW1ib2wvcnhTdWJzY3JpYmVyJyk7XG52YXIgT2JzZXJ2ZXJfMSA9IHJlcXVpcmUoJy4uL09ic2VydmVyJyk7XG5mdW5jdGlvbiB0b1N1YnNjcmliZXIobmV4dE9yT2JzZXJ2ZXIsIGVycm9yLCBjb21wbGV0ZSkge1xuICAgIGlmIChuZXh0T3JPYnNlcnZlcikge1xuICAgICAgICBpZiAobmV4dE9yT2JzZXJ2ZXIgaW5zdGFuY2VvZiBTdWJzY3JpYmVyXzEuU3Vic2NyaWJlcikge1xuICAgICAgICAgICAgcmV0dXJuIG5leHRPck9ic2VydmVyO1xuICAgICAgICB9XG4gICAgICAgIGlmIChuZXh0T3JPYnNlcnZlcltyeFN1YnNjcmliZXJfMS5yeFN1YnNjcmliZXJdKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV4dE9yT2JzZXJ2ZXJbcnhTdWJzY3JpYmVyXzEucnhTdWJzY3JpYmVyXSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmICghbmV4dE9yT2JzZXJ2ZXIgJiYgIWVycm9yICYmICFjb21wbGV0ZSkge1xuICAgICAgICByZXR1cm4gbmV3IFN1YnNjcmliZXJfMS5TdWJzY3JpYmVyKE9ic2VydmVyXzEuZW1wdHkpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFN1YnNjcmliZXJfMS5TdWJzY3JpYmVyKG5leHRPck9ic2VydmVyLCBlcnJvciwgY29tcGxldGUpO1xufVxuZXhwb3J0cy50b1N1YnNjcmliZXIgPSB0b1N1YnNjcmliZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b1N1YnNjcmliZXIuanMubWFwXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L3J4anMvdXRpbC90b1N1YnNjcmliZXIuanNcbi8vIG1vZHVsZSBpZCA9IDc1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 76 */
/* unknown exports provided */
/* all exports used */
/*!*********************************!*\
  !*** ./~/rxjs/util/tryCatch.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar errorObject_1 = __webpack_require__(/*! ./errorObject */ 29);\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject_1.errorObject.e = e;\n        return errorObject_1.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nexports.tryCatch = tryCatch;\n;\n//# sourceMappingURL=tryCatch.js.map//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3J4anMvdXRpbC90cnlDYXRjaC5qcz83Njk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIGVycm9yT2JqZWN0XzEgPSByZXF1aXJlKCcuL2Vycm9yT2JqZWN0Jyk7XG52YXIgdHJ5Q2F0Y2hUYXJnZXQ7XG5mdW5jdGlvbiB0cnlDYXRjaGVyKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiB0cnlDYXRjaFRhcmdldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBlcnJvck9iamVjdF8xLmVycm9yT2JqZWN0LmUgPSBlO1xuICAgICAgICByZXR1cm4gZXJyb3JPYmplY3RfMS5lcnJvck9iamVjdDtcbiAgICB9XG59XG5mdW5jdGlvbiB0cnlDYXRjaChmbikge1xuICAgIHRyeUNhdGNoVGFyZ2V0ID0gZm47XG4gICAgcmV0dXJuIHRyeUNhdGNoZXI7XG59XG5leHBvcnRzLnRyeUNhdGNoID0gdHJ5Q2F0Y2g7XG47XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cnlDYXRjaC5qcy5tYXBcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vcnhqcy91dGlsL3RyeUNhdGNoLmpzXG4vLyBtb2R1bGUgaWQgPSA3NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ })
/******/ ]);